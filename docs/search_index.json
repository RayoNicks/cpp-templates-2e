{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["2e","c++","edit","https://rayonicks.github.io/cpp","introduct","notes.","pages:","read","second","templat"],"2021-12-15-ch1-function-templates.html":["\"anica\";","\"frederic\";","\"lucas\";","\"max1.hpp\"","#includ","'b');","()","(bi","(call","(int","(max(a,b),","(no","(t","(t*","(t1","*b","//","1","1.1","1.1.1","1.1.2","1.1.3","1.2","1.3","1.3.1","1.3.2","1.3.3","1.4","1.5","1.6","1.6.1","1.6.2","1.6.3","1.7","4)匹配三参数版本，因为7.2默认为double类型，而long","42);","42,","42.7);","42;","68);","7.2)匹配两参数版本，因为三参数版本中的rt没有默认模板参数，无法推导其类型","7.2)无法匹配","::max('a',","::max(4,","::max(7,","::max(7.2,","::max(s1,","::max<>(7,","=",">","[","[stepanov","[with","\\n\";","^","a,","accord","addr]","argument","auto","b","b)","b,","basics/max1.cpp","basics/max1.hpp","basics/max2.cpp","basics/max3ref.cpp","basics/max3val.cpp","basics/max4.cpp","basics/maxauto.hpp","basics/maxcommon.hpp","basics/maxconstexpr.hpp","basics/maxdecltype.hpp","basics/maxdecltypedecay.hpp","basics/maxdefault1.hpp","basics/maxdefault3.hpp","basics/maxdefault4.hpp","c","c)","c);","c++11中引入了移动语义","call","chapter","char","char*]’:","char*，所以会调用非模板的max()，而该函数返回值会创建一个临时变量，且三参数版本的max()又返回了该临时变量的引用，这就导致main()中会出现悬垂引用。原文：","come","complete,","const","const&","const*","constexpr","constexpr也可以用于模板，用于提示编译器这个函数的返回值可以在编译期间被计算：","creat","dangl","declar","decltype(b","deduction)","double和double不是同一类型","error","even","expir","follow","funtion","g++的编译警告为：","here","instanti","instead","int","intention","late:","leav","local","m1","m2","main","main()","max","max()","max(a,b)","max(const","max(int,int)","max3ref.cpp:","max3ref.cpp:20:26:","max3ref.cpp:30:29:","maximum","new,","nontempl","note","notes]","ok","refer","reference)","reference,","reference.","requir","return","rt","run","s1","s2","s2,","s3","s3);","soon","statement","std::common_type_t","std::cout","std::decay::typ","strings,","t","t&","t&)","t&,","t*","t1","t2","templat","template>","temporari","time","two","type","type:","typenam","us","valu","values:","version","warning:","wreturn","{","}","‘const","“b","一般来说传值，因为：","一般来说只将特化版本定义为内联，而不将函数模板定义为内联。","三个问题","两阶段翻译","为返回类型定义新的模板参数","传值还是传引用","使用公共类型","使用模板","便于优化","内联","函数定义重载函数模板，由于普通函数更为精确，编译器在解析的过程中会优先匹配：","函数模板","函数模板可以被重载","函数模板定义了一类可以用于不同参数类型的函数","函数模板并不是让一个函数可以处理不同类型的参数，而是为每种类型的参数单独生成了一份函数定义。用具体类型替换模板参数的过程称为实例化（instantiation），该过程产生一个实例（instance）。","函数模板是一个函数，该函数可以操作不同类型的数据，也就是返回类型和函数参数类型是暂时不确定的，例如求最大值的函数模板，只要类型t支持运算符，则max()就能正常工作：","函数模板速览","函数模板重载","函数模板重载更多用于重载c指针和c字符串版本的函数：","可以为模板参数提供默认参数，且默认参数可以依赖于前面的参数","可以在模板定义中声明多个模板参数，例如可以为max()函数定义两个不用的模板参数：","在定义阶段检查语法错误、和参数类型无关的类型错误和断言","在实例化阶段检查所有的错误","在调用函数模板时保证编译器可以看见所有的重载版本","多模板参数","如果函数模板中的参数为传引用类型，同时重载了传c字符串类型的版本，就会出现问题：","如果模板参数被推导为引用类型，那么可以使用std::decay来去掉引用：","定义新类型rt来表示返回类型，但是编译器是不能根据参数推导rt的，所以需要在在实例化过程中显示指出返回类型。","定义模板","常量表达式","总结","最后一个需要注意的是定义的顺序：","某些情况下不会发生拷贝和移动","模板参数推导","模板调用参数为传引用类型时，不会进行任何转换，相同参数类型的推导结果必须一致","模板调用参数为值类型时，修饰符const和volatile将会被丢弃，引用转换为引用的类型、数组和函数转化为指针类型，相同模板参数类型转换后的推导结果必须一致","此时要保证返回类型和参数a的类型是一致的，但是如果返回b的话，则就会发生类型转换。c++提供了三种方法来解决这个问题。","让编译器推导返回类型","语法简单","调用时可以显示指定前几个模板参数的类型","调用通过函数模板定义的函数时，编译器会推导模板参数的类型","这一节中有这样一个注释，没看懂是什么意思，原文：","这个例子中三参数版本的max()中t被推导为const","通过auto推导：","通过decltype和尾置返回类型推导：","通过模板参数个数进行重载：","重载时尽量保证只有模板参数不同","重载时要保证编译器只能匹配一个","除了使用auto外，还可以定义默认模板参数，然后使用std::decay_t或者std::common_type_t为其赋默认类型：","默认模板参数"],"2021-12-20-ch2-class-templates.html":["\"bottom\"），就会有一点复杂。由于stack","\"initi","\"ordinary\"","\"stack1.hpp\"","\"stack3.hpp\"","#includ","()","(includ","(instead","(stack","(std::ostream&","(std::ostream&,","(std::string","(t","(t*","(unlik","))","...","//","0;","2","2.1","2.1.1","2.1.2","2.10","2.11","2.2","2.3","2.3.1","2.4","2.5","2.6","2.7","2.8","2.9","42;",":","=",">","aggregates）","append","appli","argument","assert(!elems.empty());","assign","basics/stack1.hpp","basics/stack1test.cpp","basics/stack2.hpp","basics/stack3.hpp","basics/stack3test.cpp","basics/stackpartspec.hpp","bool","both","c++17","c++17支持类模板参数推导","call","case)","case:","chapter","char","class","comment;","concept","const","const&","const&);","const*)","const*,","const;","construct","constructor","cont","copi","dblstack;","decay","declar","deduc","default;","destruction).","doubl","elem","elem)","elem);","elem)是传引用的，所以不会发生任何类型转换，因此类模板实例化后的类型为stack。但是我们需要的类型是stack，所以需要添加一个传值类型的构造函数，并且将其移动到stack中：","elem)，那么便可以使用一个初值来实例化：","element","elems({elem})","elems({std::move(elem)})","elems)","elems.back();","elems.empty();","elems.pop_back();","elems.push_back(elem);","elems;","empti","empty()","error:","friend","function","gener","guide）的，没有示例代码，我根据原文的意思写代码测试了一下，编译命令为g++","impress","initi","instanti","int","ints:","intstack","intstack.push(7);","intstack1;","intstack2","intstack3","intstack;","last","lead","lhs,","m;","main()","manag","manipul","match","mean","member","mff;","mfi;","mif;","mp;","multipl","myclass","necessari","need","needed).","needed.","note","note:","o","ok","on","oper","operator=","operator==","p","p;","paramet","partial","pass","pointer","pointers:","pop","pop();","printon()","private:","provid","ps;","public:","push","push(std::str","push(t","push(t*);","remov","return","rhs);","s)","s.printon(strm);","same","second","sepcialization）","special","specialization:","stack","stack&","stack(char","stack2{stringstack};","stack3(stringstack);","stack4","stack::pop","stack::push","stack::top","stack;","stack<>","stack>","std::cout","std::dequ","std::deque<>","std::ostream&","std::pair<>","std::string","std::vector","std=c++17，输出为true：","string","stringstack","stringstack;","stringstack{\"bottom\"};","strm","strm)","strm;","struct","t","t*","templat","template,","template.","template<>","template>","test","test.cpp","top","top()","type","us","usual","valid","valu","value\";","value\"};","value.","value;","valuewithcom","valuewithcomment(char","valuewithcomment;","vc.comment","vc.valu","vc2","vc;","version","void","whether","{","{\"hello\",","{stringstack};","}","};","从c++17开始，有时可以省略模板参数，而让编译器去推导，例如下面的代码：","但是一般是不会将重载的运算符实现为内联函数的，而是声明其为友元，然后类外部进行定义，有下面两种方法：","但是在类的外部必须要使用完整的类型名，除非需要的是类的名字而不是类的类型：","使用一个新的模板参数u：","使用类模板","例如为stack<>定义一个printon()方法，同时实例化模板参数类型为std::pair的类模板，那么只要不调用printon()函数，就不需要为std::pair重载运算符。","假如再为stack<>提供一个以t类型的引用为参数的构造函数stack","先声明类模板和运算符，然后声明友元，注意友元声明中的:","友元","只有真正被调用的函数才会被实例化，例如在上面的例子中，编译器分别实例化了接收int和std::string类型的push()和top()，但是也只实例化了元素类型为std::string的pop()。如果类模板中有静态成员，那么当类被使用时，静态成员就会被实例化。","只有被调用的类模板才会被实例化","可以为类模板提供默认的模板参数，例如为stack<>提供默认的内部容器类型：","可以定义实例化聚合类的模板","可以通过重载运算符并将其定义为友元函数来实现打印：","后面是关于推导指引（deduct","在上面这种内联的形式中，重载的运算符并不是函数模板，而是一个实例化的普通函数。原文：","在定义类的成员函数时，需要指出这是一个模板，所以前面要加上template。","在有多个模板参数的情况下，只对部分参数进行特化也是偏特化：","在类模板内部，可以使用t来声明和定义任何成员变量。类的类型为stack，所以当需要使用类的类型时需要写明stack（除非t可以被推导）。但是在类的内部也是可以直接使用类名字stack的，所以下面两种定义拷贝构造函数和拷贝赋值运算符的方式是一样的，书中推荐第一种：","好像在c++20中才有，书上说了一段没什么实质内容的话。","如果模板参数是传值的，那么参数会退化为原始类型","如果这个初值是一个字符串常量（例如stack","实例化类模板时需要传递具体的类型作为类模板参数","当然也可以为默认模板参数提供具体的参数：","总结","成员函数定义","栈类模板实现","模板偏特化是为部分模板参数提供特殊实现，例如为t*类型的模板参数进行偏特化：","模板偏特化（partial","模板只能被声明和定义在命名空间或者类声明的内部","模板特化","模板特化是为类模板提供某种模板参数类型的特殊实现，例如为std::string类型的模板参数进行特化：","没什么可写的，推荐用using而不是typedef。","第8条原文：","类型别名","类模板","类模板也可以被偏特化","类模板参数推导","类模板可以特化","类模板声明","类模板是一个或者多个类型参数待确定的类","类模板通常需要对模板参数类型进行多种操作，这并不意味着模板参数类型应该支持类模板中所有涉及到的在该类型上的操作，而只需要支持必要的操作就可以了。原文：","聚合类也可以作为模板：","聚合类的模板（templat","被实例化的类模板类型可以被const和volatile关键字修饰，也可以定义该类型的数组和该类型的引用，还可以用typedef和using来声明新的类型和作为其它模板的参数。","部分使用类模板","默认模板参数"],"2021-12-20-ch3-nontype-template-parameters.html":["\"hello\"","\"hello\";","\"hi\";","\"stackauto.hpp\"","\"stacknontype.hpp\"","#includ","()","(all","(sinc","(source.begin(),","(t",")","+","//","0;","1];","20","3","3.1","3.2","3.3","3.4","3.5","40","42",":","=","==","addit","addvalu","addvalue);","allow","apply.","argument","assert(!elems.empty());","assert(numelem","auto类型的非类型模板参数","basics/addvalue.hpp","basics/message.cpp","basics/stackauto.cpp","basics/stackauto.hpp","basics/stacknontype.cpp","basics/stacknontype.hpp","befor","bool","c","c++","c++11","c++17","c++17)","c++17,","chapter","char","class","const","const&","const;","const[6]","constraint","constructor","current","data","decltype(maxsize);","decrement","dest.begin(),","destin","differ。","each","elem)","elem);","element","elems;","elems[numelem","empti","empty()","end","error:","extern","i;","initi","int","int&","int20stack.push(7);","int20stack;","int40stack;","intern","int，而stringstack中的size_type是int，所以程序的输出是s","last","linkag","liter","literals,","m03;","m11;","m17;","main()","manipul","member","messag","msg1.print();","msg1;","msg2.print();","msg2;","myclass","n","nontyp","noth","number","numelem","numelems(0)","numelems;","object","ok","oper","paramet","pass","pointer","pop","pop();","possibl","print","print()","private:","public:","push","push(t","references,","relax","restrict","return","s03[]","s11[]","s17[]","s[]","sd依然是错误的，但是由于字符串可以被作为常量数组，所以下面的代码是合法的：","size()","size_typ","sourc","source.end(),","stack","stack();","stack::pop","stack::push","stack::stack","stack::top","start","static","std::array","std::cout","std::nullptr_t","std::size_t","std::transform","string","stringstack;","subobjects.","t","take","templat","temporaries,","top","top()","type","up","us","val;","valu","version","versions)","void","whether","x","x)","x;","{","}","};","上面斜体原文：","下面是一个带非类型参数的函数模板：","下面是使用方法：","不能是：","不过有方法可以解决这个问题：","从c++17开始，非类型模板参数的类型可以为auto：","可以使用auto作为非类型模板参数","和前面的类模板一样，非类型模板参数也是可以有默认值的。","因此下面的代码是错误的：","在c++11中，这个对象必须是可以被外部链接的","在c++14中，这个对象必须是外部链接或者内部链接的","对于函数模板和类模板，模板参数也可以是普通的数值。","对象和函数的左值引用","将栈的大小设定为固定值可以避免内存管理的问题，但是模板作者并不知道设定为多大是合适的，所以可以提供一个非类型模板参数来让用户设定栈的大小：","常量整数，也包括枚举类型","当然非类型模板参数也是可以有默认值的。","当非类型模板参数是指针或者引用时，指针指向的对象或者引用引用的对象不能是字符串字面值、临时变量、成员变量或者其它子对象。不过随着演变到c++17，这些限制已经慢慢的放开了，所以可以精简为下面的几条：","总结","指向对象、函数和成员的指针","模板参数也可以是非类型的","注意int20stack中的size_type是unsign","浮点类型","浮点类型和类类型是不能作为非类型模板参数的，对于指针和引用的限制在3.3节","然后通过算法transform就可以实现将source中的每个值加5后存储到dest中：","类类型，例如std::string","虽然使用了auto，但是3.3中的限制是依然存在的，所以stack","还有template也是合法的，这种声明会让n的类型变为引用：","非类型函数模板参数","非类型模板参数","非类型模板参数也可以是表达式。","非类型模板参数只能是：","非类型模板参数的限制","非类型类模板参数"],"2021-12-20-ch4-variadic-templates.html":["\"!\",","\"bye\"};","\"hello\")","\"hello\")的实例化结果为std::is_same::valu","\"hello\",","\"monkeys\",","\"my\",","\"new\",","\"say\",","\"times\",","\"world\"};","#includ","&&","&&求值为true","&node::left;","&node::right;","(","(\"hello\",","((","((arg","((s1","()","(...","(7.5,","(arg","(args...","(c","(coll[2],","(coll[idx]...);","(custom","(foo,","(last)","(np","(s)，firstarg值为\"world\"，args为空，types也为空","(std::is_same::valu","(t","(t...","(t1,",")",")))","*和std::string","*，args中包含s，types中包含std::str","+",",求值为void()","...","...),","...);","//","0)","1","1)...);","1,","1...","1...);","2.0);","4","4.1","4.1.1","4.1.2","4.1.3","4.2","4.3","4.4","4.4.1","4.4.2","4.4.3","4.4.4","4.4.5","4.5","42,","7.5,","7.7)",":","=","==",">",">*",">*取出二叉树中指定节点的例子：",">left",">right","addon","addspac","addspace(t","approach","arg)","args)","args...);","args称为函数参数包（funct","argument","argument,","arr","array","array(t,","auto","a{42,45,77}，enable_if_t","base","bases...","bases::operator()...;","bases::operator()...引入了各个基类中的调用运算符()。","basics/addspace.hpp","basics/foldtraverse.cpp","basics/varprint1.hpp","basics/varprint2.hpp","basics/varusing.cpp","binari","bool","both","branch","c)","c++11引入了sizeof...运算符（没错就是包含三个点）来计算模板参数包或者函数参数包的大小：","c++17","c++17开始支持折叠表达式，即可以使用二元运算符作用于参数包中所有的参数：","c++标准库设置了如下的推导指引：","c1,","c1.getname()","c2)","c2.getname();","call","chapter","class","classes:","code","coll","coll)","coll,","coll1;","coll2;","coll[0],","coll[3])","combin","compil","const","const&","const&...","constexpr","constructor","custom","customer(std::str","customereq","customerhash","customerop","decim","decision,","decision.","declar","defin","doesn’t","effect","equal","error","error.","error:","evalu","express","expression:","first","firstarg,","fold","foldsum","friend","function","gener","getname()","hasher","helpers:","however,","i=0)","idx)","idx...","indic","indices());","indices)","init","instanti","instantiated.","int","is_same_v","is_same_v，如果u1、u2和u3的类型不同，推导就会失败，标准库通过这种方式来保证std::array中的元素具有同一类型。","ishomogen","ishomogeneous(43,","left","left(nullptr),","left,","left;","liter","main()","mani","n)","name(n)","name;","namespac","new","node","node(int","node*","node{0};","node{1};","node{2};","np","np,","ok","on","op","oper","operator()","os","overload","overloader;","overloader通过可变参数模板实现了多重继承，同时使用us","pack","pack1","pack2","packn","pack）。可变参数模板通过递归的方式进行实例化，例如对于下面的代码：","pack），types称为模板参数包（templ","paramet","pass","paths)","paths);","paths1","paths2","point","print","print()","print(args...)","print(args...);","print(args...)实例化为print","print(coll[idx]...);","print(firstarg);","print(std::get(t)...);","printbyidx(arr,","printbyidx(t","printbyidx(t,","printdoubl","printdoubled(7.5,","printelem","printelems(coll,2,0,3);","printidx","printidx(coll);","private:","provided,","public:","r):","reason,","ref(r)","ref;","refer","remain","return","right","right(nullptr)","right);","right;","root","run","s(\"world\");","s)","s);","s)实例化为print","s)，firstarg值为\"hello\"，t为char","s)，firstarg值为7.5，t为double，args中包含\"hello\"和s，types中包含char","s2)","s3)","same","sizeof...","sizeof...(args)==0","sizeof...(u))>;","sizeof...运算符可以求出参数包中参数数量","statement","std","std::array","std::complex(4,2)","std::complex(4,2))的实例化结果为print(7.5","std::complex(4,2)。","std::cout","std::get是编译时求值的，所以下面的代码是合法的（这个例子不太好解释，意会一下）：","std::hash()(c.getname());","std::is_same::value。","std::make_tuple(12,","std::ostream&","std::size_t","std::string","std::string(\"hello\")","std::string(\"hello\"),","std::unordered_set","std::vector","still","struct","structur","structure:","t","t,","t>,(1","t>会被展开为is_same_v","templat","time","tn...)","tp...","travers","traverse(root,","tree","tree,","tree:","type:","types...","u...)","us","value(i),","value;","variad","void","whether","work","{","{\"good\",","{\"hello\",","||求值为fals","}","};","下标运算符可以应用于函数参数包：","下表列出了支持的折叠表达式及相应的展开结果：","也可以实现将函数参数包中每个参数加1：","但是上面的代码会报错，这是因为实例化的print()是否被调用是运行时决定的，而sizef...会在编译期间求值，所以尽管if中的条件恒为真或者恒为假，编译器还是会递归的实例化所有的print()，当找不到无参数版本的print()的定义时就会报错。原文：","例子","参数包可以让模板处理任意数量的参数","可变参数和下标运算符","可变参数基类和using声明","可变参数推导指引","可变参数模板","可变参数模板可以实现函数参数包中每个参数和自身相加：","可变参数模板可以实现多重继承：","可变参数模板的典型应用是转发任意数量和类型的参数","可变参数类模板","可变参数类模板和可变参数表达式","可变参数表达式","如果两个重载函数模板只有尾部参数包不同，那么编译器优先匹配没有尾部参数包的版本，所以上面的代码也可以这样实现：","如果参数包为空，一般来说会抛出异常，但是也有例外：","应用","总结","折叠表达式","标准库中使用可变参数模板的例子：","根据推导指引，对于数组定义std::array","第1个是使用成员指针运算符","第2个是递归打印的例子：","线程库，例如std::thread","编译器通过递归的方式处理参数包，所以需要一个不含可变参数的模板作为递归终止条件","编译时被解析的表达式中可以包含模板参数包，例如判断模板参数包中所有类型是否相同：","自然而然会想到使用sizeof...来判断参数包中是否还有参数剩余，从而可以避免重载，例如下面的方式：","表中带初值init的行的折叠表达式中没有第二个op，但是下面两个示例代码中都有两个op。","解析过程为：","调用重载函数print()","通过使用折叠表达可以实现某种操作应用于参数包中所有参数","通过智能指针初始化一个对象，例如std::make_shared>(4.2,","通过调用构造函数向容器中添加元素，例如emplace_back()","重载可变参数模板和非可变参数模板","非类型模板参数也可以是可变的："],"2021-12-30-ch5-tricky-basics.html":["\"1\"","\"arrays.hpp\"","\"header.hpp\"","\"on\";","\"stack9.hpp\"","\"true\"","#includ","(!tmp.empty())","(&a3)[42],","(&x0)[],","()","(auto","(char","(convert","(in","(int","(or","(pos=coll.begin();","(see","(stack","(std::bitset","(std::size_t","(std::string","(t","(t(&a)[n],","(t1","(which","*","*this;","+","++i)","++pos)",",","...",".templat","//","0;","12.3.4","15};","197).","1:","2:","42;","5","5.1","5.2","5.3","5.4","5.5","5.5.1","5.5.2","5.6","5.7","5.8","8,",":","=","==",">class","[0]","[]","[i]","a,","a1[7],","a2[],","a[42];","access","achiev","append","argument","arr","array","arr{};","assert(!elems.empty());","assign","auto","available.","avoid","bar()","bar();","base","basic","basics/arrays.cpp","basics/arrays.hpp","basics/boolstring.hpp","basics/boolstringgetbool.hpp","basics/lessarray.hpp","basics/lessstring.hpp","basics/printcoll.hpp","basics/stack5assign.hpp","basics/stack5decl.hpp","basics/stack6assign.hpp","basics/stack6decl.hpp","basics/stack7assign.hpp","basics/stack7decl.hpp","basics/stack8decl.hpp","basics/stack9.hpp","basics/stack9test.cpp","befor","begin","bool","boolstr","boolstring::get()","boolstring::getvalue<>()","bound","brace","bs)","built","c++14开始支持变量模板","c++14开始支持变量模板：","c++17","c++17,","c++17使用带_v后缀的变量模板来简化标准库中产生布尔变量的型别模板，例如：","c++支持c风格数组和字符串的模板，参见5.4","call","callabl","chapter","char","class","coll","coll)","compil","considered).","considered,","const","const&","const&);","const(&a)[n],","const(&b)[m])","const;","constexpr","constructor","constructor1","cont","cont2>","cont>","contain","copi","couldn't","creat","c风格数组和字符串的模板","decay","declar","decltype(n)","default","defin","depend","deriv","dval","elem","elem)","element","elements,","elems.back();","elems.clear();","elems.empty();","elems.insert(elems.begin(),","elems.pop_back();","elems.push_back(elem);","elems.push_front(tmp.top());","elems;","elis","elision）取消了这个限制，但还是推荐大括号的写法，因为即使没有默认构造函数，还可以通过初始化列表进行初始化。原文：","empti","empty()","end","end(coll.end());","error","exactli","except","exist","explicit.","extern","false)","false;","first","float","foo()","foo(a,","foo(int","forward","friend","fstack;","full","get()","global","header.hpp:","i.size();","i=0;","initi","initialization）的方式来统一对类类型和内置类型进行初始化：","inlin","insert","int","integ","is_const::value;","is_const_v","is_sign","issign","istack.push(1);","istack.push(2);","istack;","iter","known","languag","last","leav","less","limit","list","main()","mandatori","manipul","match","mechan","member","myclass","myclass::print();","myclass;","n","n;","namespac","notat","numeric_limit","op2","op2)","op2.elems.begin(),","op2.elems.end());","operator()","operator=","out","over","page","paramet","parameter）","partial","pass","pi","pi{3.1415926535897932385};","pointer","pop","pop();","pos!=end;","pos;","posit","primari","print","print()","print();","printbitset","printcol","prior","privat","private:","problem","ptr;","ptr，则编译器会认为表达式的含义为t类型的静态成员subtype和ptr相乘。","public:","push","push(t","refer","relat","remov","return","rule","s)","section","select","set","somecompilerspecificnam","somecompilerspecificname();","spec.","special","stack","stack&","stack::operator=","stack::pop","stack::push","stack::top","stack;","stack>","stack不能直接访问stack的私有对象，只能通过top()和pop()访问stack的元素。方便起见，还可以添加一个友元定义，使其可以访问stack::elems：","static","std","std::allocator>();","std::array","std::cout","std::dequ","std::deque>","std::numeric_limits::is_signed;","std::string","still","stl","struct","substitutes,","supported)","syntax","t","t(&b)[m])","t()保证了可以默认初始化对象和用零值初始化内置类型，且在c++17之前，还要求类的拷贝构造函数不能是explicit的。c++17中的强制拷贝省略（mandatori","t)","t1","t1的推导结果为int","t2","t2&","t2:","t2和t3的推导结果为int(&)[]","t3&&","t::const_iter","t::subtype*","templat","template<>","template>","templateclass>","this指针","tmp(op2);","tmp.pop();","top","top()","translat","tricki","type","typenam","typename关键字","typename用来表明后面的标识符是一个类型：","typename的这种使用方式更多的用于使用容器中的迭代器打印容器：","t{3.1415926535897932385};","unit","unknown","us","val","valu","value(s)","value;","val{};","variad","vector","void","vstack.push(5.5);","vstack.push(6.6);","vstack;","whether","work","work,","x","x);","x,","x1,","x2,","x3)","x[]","x[];","x{};","y)","y;","zero","{","{0,","||","}","};","下面是使用方法：","下面的例子将stack<>中的内置容器类型也变成了一个模板参数：","从c++17开始，也可以写为下面的形式：","会被编译器解析为：","使用大括号可以保证所有类型都能被正确初始化，参见5.2","使用栈类模板时，如果要指定内部容器的类型，需要在实例化类模板时写两遍元素的类型：","具体来说，因为std::deque包含两个模板参数，虽然第二个参数是std::allocator并且有默认值，但是编译器无法进行匹配，所以应该写为下面的形式：","变量模板","变量模板支持非类型模板参数：","变量模板支持默认模板参数：","变量模板的典型应用是用来表示类模板成员变量：","可以在不同的翻译单元中使用实例化的同一变量模板（全局变量）：","因为elem没有使用，所以也可以写为下面的形式：","在c++11之前，语句t","在c++17之前，即使实例化时使用的模板中包含默认参数，也要保证模板的模板参数中的参数数量和实例化时使用的模板需要的参数数量相同，而在c++17中解除了这个限制。原文：","在下面的例子中，如果没有.template，则to_string后面的会被编译器解析为小于比较运算符（目前好像感受不到作用）：","大括号初始化的方式也适用于成员变量初始化、类内初值和函数的默认参数。","如果不对内置类型进行初始化，则其初值为内存中的残留值。c++提供使用大括号进行值初始化（valu","如果不知道数组的长度，那么只能通过重载或者偏特化的方式定义模板：","如果基类中含有类模板参数，使用成员变量或者成员函数时最好带上this：","如果将第二个参数定义为模板的模板参数，就可以只写一遍元素的类型：","如果直接写为t::subtype*","对于c风格字符串，也可以写成下面的样子：","嵌入类和成员函数也可以是模板，参见5.5","当模板调用参数为传引用类型时，由于不会进行任何转换，所以数组的推导类型也会包括数组的长度信息，因此如果要传递两个长度不同的数组，模板要写成下面的样子：","总结","成员函数push()的定义也要进行相应修改：","成员函数也可以是模板，下面的例子为stack<>定义了一个拷贝赋值运算符模板：","成员函数模板","成员函数模板可以被特化或者偏特化：","模板中的复杂问题","模板构造函数和模板赋值运算符不能代替普通的构造函数和赋值运算符","模板的模板参数（templat","模板调用参数不为引用类型时，数组类型会转换为指针类型","此时类模板的定义如下：","泛型lambda表达式只是成员函数模板的一种简便写法，例如：","泛型lambda表达式和成员函数模板","注意上面的声明不能出现在函数或者块作用域中。下面是使用方式：","类模板可以作为模板参数，也就是模板的模板参数","虽然形参a1中包含了长度7，但是编译器仍然将其处理为指针（7被忽略了，这应该是为了保证和c语言的兼容）。","要保证模板的模板参数中的参数数量和实例化时使用的模板需要的参数数量相同，参见5.7","访问基类模板中的成员时要带上this，参见5.3","零值初始化","需要用typename关键字来提示编译器接下来的标识符是由模板参数决定的一个类型，参见5.1"],"2022-01-04-ch6-move-semantics-and-enable-if.html":["\"sname\";","\"specialmemtmpl3.hpp\"","#includ","(becaus","(person","(t","(t&&","(with","(x","(x&","(x&&","(x&)","(“stealing”)","...","//","4)>","4)>::type","6","6.1","6.2","6.3","6.4","6.5","6.6",":","=","=>","allow","argument","assign","automat","basics/move1.cpp","basics/move2.cpp","basics/specialmemtmpl1.cpp","basics/specialmemtmpl2.hpp","basics/specialmemtmpl3.cpp","basics/specialmemtmpl3.hpp","better","beware:","c","c(c","c;","call","chapter","check","class","compil","concept","condit","const","const&","const&)","constant","constr","constructor","contents.","convers","convert","convertible,","copi","creat","defin","delet","delete;","depend","destin","detect.","discarded).","done","don’t","enabl","enable_if","enable_if.","enable_if<>","enabled,","enableifstr","error","error，sfinae）”原则，foo()的模板定义就被忽略了","explicit","f","f()","f(c);","f(std::move(v));","f(v);","f(x","f(x&&)","f(x&)","f(x());","fact","failur","first","foo()","forward","function","function.","g","g()","g(std::forward(val));","g(std::move(val));","g(t);","g(val);","g(x","g(x&&)","g(x&)","gener","impact","implement","important.","init","initi","instead","int","intent","intern","intuit","know","liter","logic","longer","lose","lvalu","main()","match:","matches)","more","movabl","move","n)","n)比person","name(n)","name(std::forward(n))","name:","name;","necessarili","need","never","non","nonconst","object","ok","on.","optim","p)匹配度更高，但是std::string却无法通过person进行构造，所以需要通过std::enable_if来禁止匹配模板函数。","p1(s);","p2(\"tmp\");","p3(p1);","p3(p1)会报错，因为根据模板匹配规则，p1不是常量，所以person(str&&","p4(std::move(p1));","pass","perfect","person","person(std::str","person(str&&","person,”","person.","place","predefin","private:","provid","public:","reference），实参可以是常量左值、非常量左值和可移动对象。即使模板函数中的typenam","reference），或者在c++17之前叫做通用引用（univers","requir","resourc","right","s","semant","sourc","state","std::cout","std::enable_if","std::enable_if::value>::type;","std::enable_if_t","std::enable_if_t::value>;","std::enable_if_t>;","std::move()","std::string","str","string","syntax","t&&表明模板的参数的类型是转发引用（forward","t::iterator&&也只是声明变量的类型为右值引用，而不是转发引用","templat","template>","temporari","those","through","time","tmpl","typenam","us","user","v;","val","val)","val)中仍然需要std::move，这是因为c++默认不传递右值的属性。当使用val时，仍然是非常量左值，和void","val)中的val属性是一样的。如果默认传递右值，那么当该值第一次作为某函数的实参时，函数返回后该值可能就失效了。原文：","valu","variabl","void","volatil","volatile&)","weren’t,","whether","wonder","x","{","}","};","“not","上面的代码写为模板的形式会是这个样子：","上面的代码通过typename来提示编译器后面的t是模板参数。std::enable_if的含义为：","不能通过std::enable_if禁掉编译器合成的拷贝和移动构造函数，除非拷贝构造函数被删除了：","从c++11开始，可以使用std::enable_if来在某些条件下禁掉函数模板：","从c++14开始，也可以简写为下面的样子：","但是只对左值版本有效（详见第1章中的推导规则）。为了支持右值版本，应该写成下面的样子：","但是此时person","使用concepts简化enable_if","使用std::enable_if","使用std::enable_if改写的person类如下：","只有可以被移动的对象才可以作为参数类型为x&&的函数的参数","可以将构造函数模板化：","可以通过转发引用t&&和std::forward来实现完美转发","在使用这种条件模板时，一定要使用对应的语义，如str类型可以转换为std::string则模板定义有效，而不能是str类型不能转换为person。原文：","完整程序如下：","完美转发","完美转发是为了保证在模板实例化时仍然保持参数的属性：","完美转发的成员函数模板可能比普通的函数匹配度更高","左值仍然是左值","常量仍然是常量","当表达式为假（t类型的大小小于等于4）时，std::enable_if::type是未定义的，但是根据模板的“代换失败不是错误（substitut","当表达式为真时，如果没有第二个模板参数，则std::enable_if::type是void，否则就是第二个模板参数的类型","总结","所以可能需要把代码写成这个样子：","有了完美转发，也可以将接受std::string的构造函数写成模板形式：","未标准化的内容，不知道在说啥。","注意在c++14中要写为这样子：","注意在void","注意：模板中的t&&和普通函数中的x&&是不一样的：","特殊成员函数模板","由于std::move不是模板，所以要用std::forward来转发潜在的移动语义。","移动语义和std::enable_if","而在c++11中要写为这样子：","被移动的对象仍然是可以被移动的","还可以用std::is_constructible：","这应该是我印象里最好的关于移动语义定义了：移动操作可以将拷贝和赋值操作优化为内部资源的偷取，这是因为被移动的对象是一个将要被释放的对象。原文：","通过std::enable_if可以在编译期间禁掉某些模板函数","通过std::enable_if可以禁掉匹配度更高的构造函数模板和赋值运算符模板，从而让编译器优先匹配隐式合成的构造函数","通过std::enable_if和delete可以模板化编译器合成的构造函数"],"2022-01-05-ch7-by-value-or-by-reference.html":["\"hello\";","\"hi\";","\"out","#includ","(&)[4]","(&arg1)[l1],","(&arg2)[l2])","(also","(comparearrays(pa,","(if","(prvalue)","(t","(t&","(t&&","(t1","(t1&&","...","//","7","7.1","7.2","7.2.1","7.2.2","7.2.3","7.3","7.4","7.4.1","7.5","7.6","7.7","=","a,","allow","arg","arg)","arg1","arg1,","arg1;","arg2","arg2)","arg2;","arr[4];","away","b)","back","basics/cref.cpp","becom","c","c++03","c++11","c++98","call","chapter","char","const","const\");","const&","const&，常量左值引用","const(&)[3]","const[3]","constexpr","constructor","constructor)","convert","copi","c风格字符串和数组的处理","c风格的字符串和数组在模板中处理起来非常麻烦，这是由传值和传引用时模板的推导规则决定的，所以最好的办法就是单独重载：","decay","decay::type>","decay::type>(","declar","deduc","error:","foo","foo(42);","foo(i);","foo(t","foo(t&)","forward","forward(a),","forward(b));","i;","initi","instanti","int","int&","int&,","int(&)[4]","invalid","l1,","l2))","lvalu","lvalues,","main()","make","make_pair","move","not,","note:","ok:","oops:","optim","outr","outr(\"hi\");","outr(c);","outr(returnconststring());","outr(returnstring());","outr(s);","outr(std::move(c));","outr(std::move(s));","outr(std::string(\"hi\"));","p","p)","pa","pair","pair(a,b);","pair::type,","pair::type,typenam","paramet","pass","passr","passr(\"hi\");","passr()","passr(arr);","passr(c);","passr(returnstring());","passr(s);","passr(std::move(s));","passr(std::string(\"hi\"));","passr(t&&","pb","pb,","print","printr","printr(returnstring());","printr(s);","printr(std::move(s));","printr(std::string(\"hi\"));","printstring(arg);","printstring(std::str","printt","printt(s);","printt(std::cref(s));","printv","printv(returnstring());","printv(s);","printv(std::move(s));","printv(std::string(\"hi\"));","refer","reference,","reference?","reference”","requir","retr(t&&","rett()","return","returnconststring()","returnstring();","retv(t","retv(x);","s","s)","same","static_assert(!std::is_const::value,","std::cout","std::cref()","std::decay可以将引用类型还原为引用的类型","std::ref和std:cref","std::ref的实现方式是创建了一个新的std::reference_wrapper对象来包装传入的参数，并将新的对象以值得方式传入模板，同时提供了隐式类型转换来将std::reference_wrapper转换为原始参数的类型。","std::string","std::string&","std::string&&","std::string,","string","t","t&&","t*","t2","t2&&","templat","template::value>","template>>","temporari","type","typenam","t{...};","usual","valu","void","x","x&&，右值引用，该值可以被修改，或者移动","x&，非常量左值引用","x;","xvalu","{","}","“a","一般下列情况需要传引用：","一般将模板的调用参数设置为传值的方式，如果对象很大，尝试使用std::ref和std::cref进行包装","下面的代码都是错的（感觉retv太扯了）：","不能将临时量作为传非常量引用的参数：","为了避免上述错误，可以使用std::remove_reference和std::decay去除类型推导结果中的引用，或者使用auto保证永远返回值。","为数组单独重载，更详细的例子见第5章","书中给出了std::make_pair从c++98到c++11的发展历史：","从c++11开始，函数传引用参数分为下面三种类型：","从c++11开始，即使模板的调用参数是传值的，也可以使用std::ref和std::cref来传引用：","传值","传值会发生类型退化（decay），而传引用不会","传值和传引用","传值是一定会发生对象构造的，但是拷贝构造可能会被编译器优化掉，还有可能进行移动构造：","传值最大的问题在于拷贝带来的性能开销","传常量引用","传常量引用能保证不会发生拷贝：","传引用","传转发引用","传非常量引用","使得类成员可写","使用std::enable_if","使用静态断言","关于性能的问题最好测一下，不要去猜","函数最好是返回值而不是返回引用","可以通过不同长度的c风格字符串来测试模板的正确性","如果参数需要修改，同时可以考虑禁掉推到类型为常量引用","如果性能瓶颈确实是性能瓶颈，考虑使用常量引用","如果模板需要传递参数，考虑使用转发引用","定义专用的模板函数","对象不能拷贝","常量可以传给非常量引用，此时推导结果中会包含const，例子如下：","引用的内部机制仍然是传地址，但是不能保证函数不会修改该常量，因为const只是编译期间的检查。根据类型推导规则，传引用不会丢弃const和volatile，传数组时类型信息会包括数组长度。","性能方面的考虑","总结","我本以为引用是一个很好的语法，但是看了这一章后我觉得引用会带来很多的问题，而且正是这些问题使得c++变得更加复杂，所以我开始怀疑：引用到底是不是一个好的语法？","或者在下面的情况下可以传引用：","推荐的模板参数声明方式","有两种方法可以禁止将常量传递给以非常量引用作为参数的函数：","根据类型推导规则，传值会丢弃const和volatile，数组会退化为指针。","模板只是用来转发","转发引用是唯一使得类型t可以被推导为引用的写法，所以下面的代码就会因为引用没有初始化而报错：","返回只读类成员的常量引用","返回容器中的元素","返回引用会带来一些麻烦，因为引用的对象是从函数里返回的，在函数外不受控制，但是还是有返回引用的应用的：","返回引用和返回值","通过std::ref和std::cref可以实现向传值的模板传引用","链式调用，例如输入输出运算符和赋值运算符","除非知道在干嘛，否则还是应该传值","需要通过参数返回值"],"2022-01-06-ch8-compile-time-programming.html":["!=","\"char","\"no","\"unsigned\");","&&","(...)","(even","(i.e.","(p%2","(p%2!=0);","(p%d","(p%d!=0)","(sinc","(std::array","(substitut","(t","(t(&)[n])","(to","(unsign","(void)(t.size()),",")","...","//","0)","0);","0;","1)","1);","1;","2","8","8.1","8.2","8.3","8.4","8.4.1","8.5","8.6","9%2!=0","9%3!=0","9%4!=0",":","=",">","?","[10]和char","a[10];","alway","args)","array","array:","assert","auto","avail","avoid","basics/isprime.hpp","basics/isprime11.hpp","basics/isprime14.hpp","basics/len1.hpp","basics/len2.hpp","bool","c++17)","c++17引入了编译时if语句来实现模板的选择，回顾第4章中的print()模板，使用编译时if的改写版本如下：","c++17支持编译时if","call","callabl","case","chapter","check","check,","code","code.","coll)","compil","comput","const&","const&...","const[4]类型中没有size_type成员，所以会匹配第一个函数模板，同时编译器不会因为第二个函数模板代换错误而报错。但是对于len(x)，由于只能匹配第二个，但是却没有size()成员，所以会触发编译时错误。","constexpr","constexpr(std::is_integral_v)","constexpr(std::numeric_limits::is_signed)","constexpr中的条件会被计算，如果为假，则要求以t类型为参数的undeclared()存在。","constexpr也可以用在普通函数中，功能应该是只是迫使编译器在编译时计算条件表达式的结果。","constexpr使得普通函数可以在编译时进行计算","constexpr是在两阶段翻译的第二阶段中起作用的：","contexts.","current","d","d!=2","d)","d:","d=2;","declar","decltype(","decltype中的,运算符保证了表达式的返回值为t::size_type()，这也是函数模板的返回类型，但是在此之前需要先保证表达式是合法的，也就是t.size()不会报错。","decltype和sfina","depend","discard","discarded)","divisor","doisprim","doisprime(p,d","doisprime::valu","doisprime::value;","element","end","endless","error","error).","error，sfinae，读作sfe","failur","fallback","false;","firstarg,","foo","foo(42);","foo(t","found","function","functions,","functions”","h;","have","helper","helper;","implement","instantiation):","int","integral\");","integral\")生效；在两阶段翻译的第二阶段，if","integral)","invalid","isprim","isprime::valu","len","long","main()","n;","nay）原则。","need","number","number:","ok","p","p)","p,","p/2:","p:","primari","prime","principl","print","print(args...);","program","raw","recurs","remaind","replac","result","return","sfina","sfinae特性","size","size_type:","sizeof...(args)>0","smaller","special","start","static","static_assert(!std::is_integral_v,","static_assert(!std::numeric_limits::is_signed,","static_assert(false,","std::cout","std::enable_if","std::size_t","struct","substitut","sz","t","t)","t.size();","t::size_typ","t::size_type()","templat","template:","template<>","time","true;","type","typenam","types:","undeclared()","undeclared();","undeclared(42);","undeclared(t);","unsign","unsigned\");","us","v;","valu","void","whether","without","x;","{","}","};","“ordinari","下面的代码根据sz的素性使用了不同的结构体：","为了解决上面的问题，可以将模板定义为：","从c++14开始，被constexpr的函数中也可以使用较为复杂的程序控制结构：","代换中的错误可以迫使编译器去选择其它并不精确的匹配：","可以使用sfinae规则来实现特定模板的选择","和下面的调用代码：","在两阶段翻译的第一阶段，要保证能够找到undeclared(t)和undeclared()的声明，同时static_assert(false,","如果有下面两个函数模板定义：","对于isprime::value，模板实例化的过程如下：","带静态函数的类","当函数参数包args为空时，sizeof...(args)为0，可以不用继续实例化print()，递归就可以结束了。","当在代换的过程中不会产生错误代码时，函数模板才可能被实例化","总结","模板元编程","模板是编译时实例化的，所以可以在编译时将模板递归的展开，从而生成程序，例如下面的素性判断程序：","此时len(p)会匹配最后一个函数模板，但是len(x)仍然会匹配第二个函数模板，还是无法避免触发编译时错误。","注意只能对类模板进行偏特化，如果要在编译期间对函数模板中的执行路径进行选择，可以使用：","由于该值可以在编译期间被计算，所以isprime::value的最终结果为false。","第2条原文：","第4条原文：","编译时if","编译时编程","虽然两个模板都可以匹配len(a)和len(\"tmp\")，但是int","被constexpr修饰的函数可以在编译期间求值，这要保证函数中的每一步都能够在编译期间进行求值，依然以素性判断程序为例：","调用重载函数时，编译器会考查每个重载函数的匹配度，然后最终决定要调用哪个函数。当重载函数中包括函数模板时，编译器会推导函数模板中模板参数的类型，然后将其视为一个普通函数来考查匹配度。但是在类型推导的过程中可能会产生毫无意义的结果，与其将其视为错误，语言更倾向于忽略它——这就是代换失败不是错误（substitut","这里提到的代换和第2章中提到的部分实例化类模板不是一个概念。编译器可能会通过代换生成一些无用的函数签名，这些模板最终不会变成重载函数的定义（这是我猜的）。","通过偏特化实现执行路径选择","通过偏特化技术，可以实现根据编译时条件选择实例化的类模板","通过递归、偏特化等技术可以在编译时将模板展开并在编译时进行求值"],"2022-01-06-ch9-using-templates-in-practice.html":["!=","\"\";","\"myfirst.hpp\"","#defin","#endif","#ifndef","#includ","(*)(const","(coll.begin(),","(const","(custom","(for","(std::pair,","(std::string","(t","...","//","/usr/include/c++/7/bits/char_traits.h:39,","/usr/include/c++/7/bits/hashtable.h:35:0,","/usr/include/c++/7/bits/hashtable_policy.h:","/usr/include/c++/7/bits/hashtable_policy.h:87:34:","/usr/include/c++/7/bits/move.h:54:0,","/usr/include/c++/7/bits/predefined_ops.h:","/usr/include/c++/7/bits/predefined_ops.h:283:11:","/usr/include/c++/7/bits/stl_algo.h:104:42:","/usr/include/c++/7/bits/stl_algo.h:161:23:","/usr/include/c++/7/bits/stl_algo.h:3932:28:","/usr/include/c++/7/bits/stl_algobase.h:64,","/usr/include/c++/7/bits/stl_algobase.h:71:0,","/usr/include/c++/7/bits/stl_pair.h:59,","/usr/include/c++/7/bits/unordered_set.h:","/usr/include/c++/7/bits/unordered_set.h:105:45:","/usr/include/c++/7/bits/unordered_set.h:106:47:","/usr/include/c++/7/bits/unordered_set.h:107:43:","/usr/include/c++/7/bits/unordered_set.h:108:46:","/usr/include/c++/7/bits/unordered_set.h:109:51:","/usr/include/c++/7/bits/unordered_set.h:114:45:","/usr/include/c++/7/bits/unordered_set.h:115:50:","/usr/include/c++/7/bits/unordered_set.h:116:47:","/usr/include/c++/7/bits/unordered_set.h:117:52:","/usr/include/c++/7/bits/unordered_set.h:118:46:","/usr/include/c++/7/bits/unordered_set.h:119:51:","/usr/include/c++/7/bits/unordered_set.h:120:51:","/usr/include/c++/7/bits/unordered_set.h:121:57:","/usr/include/c++/7/bits/unordered_set.h:122:47:","/usr/include/c++/7/bits/unordered_set.h:123:52:","/usr/include/c++/7/bits/unordered_set.h:282:7:","/usr/include/c++/7/bits/unordered_set.h:375:2:","/usr/include/c++/7/bits/unordered_set.h:419:7:","/usr/include/c++/7/bits/unordered_set.h:423:7:","/usr/include/c++/7/bits/unordered_set.h:478:7:","/usr/include/c++/7/bits/unordered_set.h:679:7:","/usr/include/c++/7/bits/unordered_set.h:683:7:","/usr/include/c++/7/bits/unordered_set.h:98:63:","/usr/include/c++/7/string:40,","/usr/include/c++/7/type_traits:","/usr/include/c++/7/type_traits:143:12:","/usr/include/c++/7/type_traits:154:31:","/usr/include/c++/7/unordered_set:47,","/usr/include/c++/7/unordered_set:48:0,","1","2","3.0;","9","9.1","9.1.1","9.1.2","9.2","9.3","9.4","9.5","9.6",":","=",">",">;",">]’",">’",">’:","[]","[with","^","^~~~~~","^~~~~~~","^~~~~~~~","^~~~~~~~~","^~~~~~~~~~","^~~~~~~~~~~","^~~~~~~~~~~~~","^~~~~~~~~~~~~~","^~~~~~~~~~~~~~~","^~~~~~~~~~~~~~~~","^~~~~~~~~~~~~~~~~~~~","__args)","__bool_const","__gnu_cxx::__ops::_iter_pr","__gnu_cxx::__ops::_iter_pred::operator()(_iterator)","__l)","__uset_hasht","__x)","_hashtable::allocator_typ","_hashtable::const_iter","_hashtable::const_local_iter","_hashtable::const_point","_hashtable::const_refer","_hashtable::difference_typ","_hashtable::hash","_hashtable::iter","_hashtable::key_equ","_hashtable::key_typ","_hashtable::local_iter","_hashtable::point","_hashtable::refer","_hashtable::size_typ","_hashtable::value_typ","_hashtable;","_iiter","_iiter,","_inputiter","_inputiterator,","_iter","_iterator,","_predic","_predicate)","_predicate,","allocator_type;","argument","arguments,","arguments.","assum","auto","basics/errornovel1.cpp","basics/errornovel2.cpp","basics/myfirst.cpp","basics/myfirst.hpp","basics/myfirst2.hpp","basics/myfirstmain.cpp","bool","bool(_m_pred(*__it));","c)","c++头文件编译的很慢，预编译头文件技术就是提取公共头文件提前编译好。","call","candid","candidate:","chapter","clang:","class","coll.end(),","coll:","coll;","compil","const","const&","const&);","const_iterator;","const_local_iterator;","const_pointer;","const_reference;","contain","convers","creat","custom","customer&)","customer&)’","customers:","declar","definit","definition.","difference_type;","discard","doubl","double,","double>","double>&)’","double>’","elsewher","emplace(_args&&...","equal_range(const","error","error:","errornovel1.cpp:11:53:","errornovel1.cpp:13:30:","errornovel1.cpp:1:","errornovel2.cpp:1:","errornovel2.cpp:22:21:","errornovel2.cpp:28:49:","errornovel2.cpp:2:","example,","expect","file","find","first","function","function:","g++","g++产生的编译错误如下（人间真实）：","getname()","hand,","hash","hasher;","here","ic","implementation/definit","includ","indic","inform","insert(const","insert(initializer_list","insert(value_type&&","instanti","int","iterator;","key_equal;","key_type&","key_type;","known","linker","local_iterator;","main()","main()::","main()::]’","main()::]’:","main()::mycustomerhash)","main()::mycustomerhash*’","main()::mycustomerhash::operator()(const","match","member","miss","model），这会带来两个问题：","mycustomerhash","myfirst.cpp,","myfirst_hpp","n)","name(n)","name;","noexcept(declval()(declval()))>","nonempti","note:","operator()","operator=(initializer_list","pass","piec","po","point","pointer;","practic","previou","printtypeof","printtypeof()","printtypeof(ice);","private:","process","provid","public","public:","qualifi","refer","reference;","requir","resolve)","return","s","s)","see","separately.","sight","size_type;","specif","std::__and_,","std::__cxx11::basic_string&)}","std::__cxx11::basic_string&}’","std::__detail::__is_noexcept_hash","std::__detail::__is_noexcept_hash’:","std::__find_if(_inputiterator,","std::__find_if(_iterator,","std::__not_,","std::_rb_tree_iterator,","std::cout","std::find_if","std::find_if(_iiter,","std::hash()(c.getname());","std::input_iterator_tag)","std::map","std::size_t","std::string","std::unordered_set","std::unordered_set’","std::unordered_set’:","string","string&","string&)","struct","such","tabl","templat","therefore,","two","type","typedef","typenam","unfortunately,","us","value_type&","value_type;","void","x)","{","{aka","}","});","};","~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~","‘(const","‘(main()::)","‘_iiter","‘_inputiter","‘_iter","‘bool","‘class","‘const","‘std::__and_,","‘std::__not_,","‘std::pair,","‘struct","‘this’","‘value’","一般来说c++代码的组织方式为：","一般来说模板错误都会超级复杂，本节给了两个例子。","上面的使用方式会报链接错误，这是因为模板定义和触发实例化模板的代码在两个文件中。编译器并不知道编译printtypeof(ice)时需要实例化模板，而当编译另一个文件时，由于没有代码触发模板实例化，模板自然也就不会被实例化。原文：","产生的编译错误如下（看到这我不由自主地笑了，傻叉编译器确实都是这样子的）：","全局变量和函数声明在头文件中，定义在源文件中","包含额外的头文件（也就是定义模板时使用的和）","只有在头文件中类外（也包括结构体外）定义的特化函数模板需要inlin","后记","后面就是解释了一下该怎么去读懂这个错误信息，不过如果有经验的话应该一眼就能看明白这个错误信息是啥的。","在头文件中声明类和定义类型","在头文件中定义模板","如果两个翻译单元都实例化了同一模板函数，则可能会出现重复定义","如果使用预编译头，要保证头文件的包含顺序是一致的","将函数声明为inline并不一定真正进行内联，而只是让同一个函数可以被定义很多次，对于模板来说也是这个道理。","将模板定义在头文件中的方式就是模板的包含模型（inclus","总结","所以作者给出的建议就是多用几个编译器试试。。。","排除模板错误非常麻烦","模板和内联","模板在实际中的应用","模板的包含模型","模板的包含模型是最广的应用方式","理解模板编译错误","第一个是类型错误：","第二个例子是缺少const：","自然而然地会用相同的方式定义和使用函数模板：","解决上面问题的方法就是在头文件中完整的定义模板：","这里的错误其实就是std::unordered_set需要mycustomerhash的调用运算符()是const成员函数。","链接错误","预编译头文件"],"2022-01-07-ch10-basic-template-terminology.html":["(and","...","//","10","10.1","10.2","10.3","10.3.1","10.4","10.5","10.6","argument","argument）：代换模板形参的实际参数，也就是实例化模板时<>中的参数，能够在编译时计算出的值","arr","arr[10];","arr[];","basic","c","c;","chapter","class","class”?）","class）有时指类模板，有时指类模板实例化后得到的类","complet","const*","cp","cp;","cpand","declar","declaration)","definit","definitions）","elem","elems[10];","entity）包括函数、成员函数、全局变量、静态数据成员，这些实体也可以是模板生成的。","extern","f()","f(int","function","id）：模板名称和模板参数的结合","incomplet","instantiation,","int","longer","name","now","on","p","p)","p);","paramet","parameters）","parameter）：模板声明和定义中template后的参数","pointer","refer","rule）","specialization）","std::cout","templat","template”","template）、成员模板（memb","template）。","template）和变量模板（vari","template）表示这个类是一个模板，是一类类的统称","template），成员函数模板（memb","terminolog","therefor","type","type)","v","v;","variabl","versu","void","{","{};","};","“templat","一遍定义规则可以简单解释为：","一遍定义规则（the","不完整类型包括：","书中一直都用函数模板（function","代换、实例化和特化（substitution,","代换（substitution）：使用模板实参替代模板形参的过程","使用术语类模板、函数模板和变量模板","其余都是完整类型。例子如下：","可链接实体（linkabl","声明但未定义的类","声明和定义（declar","声明（declaration）：只引入名字，不提供细节","完整和不完整类型","定义（definition）：提供具体的细节","总结","数组元素类型是不完整的","普通非内联函数（包括成员函数）、非内联全局变量和类静态成员在整个程序中只能定义一次","枚举类型的基类和枚举值是未定义的","模板实例化是用模板实参替代模板形参得到常规类和常规函数的过程，得到的结果为模板的特化","模板实例化（instantiation）：通过代换生成类和函数定义的过程，根据是否代换全部参数分为完整实例化和不完整实例化","模板实参和模板形参（templat","模板实参（templat","模板形参（templat","模板标识（templat","模板相关术语","模板类（templat","没有定义长度的数组","特化（specialization）：完整和不完整实例化模板得到的结果","用const和volatile修饰的上面的类型","类型可以是完整的，也可以是不完整的","类模板还是模板类（“class","类模板（class","类类型、模板（包括偏特化但不包括特化）、内联函数和变量在每个翻译单元中只能定义一次","非内联函数、成员函数、全局变量和静态数据成员在整个程序中只能定义一次"],"2022-01-08-ch11-generic-libraries.html":["!=","\"foreach.hpp\"","\"foreachinvoke.hpp\"","\"invalid","#includ","&","&func);","&x;","(assum","(can’t","(current","(decay","(equival","(generally,","(hopefulli","(i);","(ignor","(int","(iter","(lvalu","(t&&","(t1","(take","*current);","++current;","+=","...","//","0;","10","100;","11","11,","11.1","11.1.1","11.1.2","11.1.3","11.2","11.2.1","11.2.2","11.2.3","11.4","11.5","11.6","11.7","120","13,","17,","19","2,","2nd","3,","42","42)","5,","7,",":","=",">::type","[]","[](std::string","a,","accept","access:","account)","add_rvalue_reference_t","addit","arg","args&&...","args)","args...,","argument:","arr","arr()","arr<>","assign","auto","auto&&","b","b)","basics/foreach.cpp","basics/foreach.hpp","basics/foreachinvoke.cpp","basics/foreachinvoke.hpp","basics/invoke.hpp","basics/invokeret.hpp","basics/maxdefaultdeclval.hpp","basics/referror1.cpp","basics/referror2.cpp","basics/tmplparamref.cpp","behavior","c","c++中的可调用对象类型（callabl","c++标准库提供了一些对类型进行操作的模板，可以修改类型：","call","call(callable&&","call:","callabl","categori","chapter","check)","class","code","compil","const","const&","const&&","const&...","constexpr(std::has_virtual_destructor_v)","constexpr(std::is_convertible_v,t>)","constexpr(std::is_reference_v)","constexpr(std::is_same_v,","cont","convert","current","current,","declar","decltype(auto)","deep","default","delet","destructor","due","element","elems(sz)","elems;","end","end)","end,","ensur","error","error)","error:","even","extern","f","f(v&&","fail","fals","foo();","foo(t","foreach","foreach(primes.begin(),","forward","func(int","func);","funcobj());","function","gener","get()","get(x);","i)","i=0;","incomplet","initi","instanti","int","int&&","int)","intern","invalid","invoke_result<>","is_assignable_v","is_copy_assignable_v","is_swappable_v","is_swappable_with_v","iter","lambda","librari","long","loop","lvalu","lvalues)","lvalues.","main()","make_unsigned_t","max","member","memfunc(int","memori","modifi","move","myclass","next","next;","node","note:","null","null;","object","ok","oops:","op(*current);","op)","op,","oper","operator=","over","overload","p","paramet","pass","perfectli","pointer","pointer)","possibl","prefix,","prepar","previou","prime","primes.end(),","print()","private:","public:","q","rang","reach","ref","ref)","refer","references,","refmem","refmem()","remain","ret;","return","return;","ret{std::invoke(std::forward(op),","rm1","rm1,","rm2;","rm3;","rm4;","rm5","rm5,","rm6;","rt","run","set():","set(std::forward(val));","shall","size","special","static_assert(!std::is_same_v,void>,","std::addressof","std::addressof(x);","std::addressof可以取出变量和函数的地址：","std::address可以取出依赖于模板参数的对象的地址","std::conditional::value,","std::cout","std::decay_t","std::declval","std::declval())>>","std::declval可以在不创建对象的情况下使用某种类型的对象：","std::forward()","std::forward(args)...);","std::forward(args)...)};","std::invoke()","std::invoke(op,","std::invoke(std::forward(op),","std::invoke可以处理可调用对象为成员函数","std::invoke的另一个应用是包装函数调用：","std::is_same<>","std::remove_const_t","std::remove_const_t>","std::remove_reference_t>","std::string","std::vector","std::vector<>","struct","sz","t","t&","t&&,","t*","t2","templat","template()","time","tmplparamisreference(r);","tmplparamisreference(t)","traits）","true","type","type\");","typenam","type）包括：","undefin","unsign","us","v","v)","val","valu","value;","vector","virtual","void","void:","void>)","volatile):","work","x)","x.print();","x;","y;","yield","z","zero;","zero{z}","{","}","};","上面代码错误的原因是：","上面的代码通过decltype(auto)实现返回引用。如果还需要对std::invoke的返回值进行处理然后再返回，则应该写为下面的样子：","下面是类似std::for_each功能的模板：","下面的模板包括一个模板参数，以及该类型的非类型模板参数，还为非类型模板参数提供了默认参数值：","不能用0等常量值初始化引用类型","为c风格数组和字符串进行特化重载","但是decltype(auto)结果不能是void，因为void不完整类型，应该写为下面的样子：","使用auto&&实现模板中临时量的完美转发","使用decltype(auto)实现返回类型的完美转发","使用std::declval提取没有被求值的表达式的类型","使用转发引用来转发模板参数，使用auto&&声明需要转发的模板临时变量","函数对象","函数指针","包装函数调用","只有显示指定模板实参为引用类型时，模板参数才会变成引用类型：","可调用对象也可以是lambda表达式，也可以称为闭包（closures）","可调用对象包括函数、函数指针、函数对象、仿函数（functor）和lambda表达式","可调用对象类型","如果传递给std::invoke的可调用对象是成员函数指针，则会将可变参数中的第一个参数作为this指针，后面的参数照常传递。","完美转发临时变量","实现泛型库的其它方法","对于成员函数，由于其中存在隐式的参数this，无法通过前面的方式进行调用，所以c++17提供了std::invoke来解决这个问题：","小结","延迟求值","引用类型无法默认初始化","引用类型的模板形参","引用类型的非类型模板参数非常容易出错：","当传递重载了调用运算符()的类对象funcobj时，op(*current)等价于op.operator()(*current)，注意要将调用运算符声明为const的","当模板参数为非常量引用时，需要注意参数可能被const修饰","当模板参数是c风格字符串且传引用类型类型时，考虑使用std::decay","当模板参数被声明为转发引用时，要保证转发到的模板的调用参数类型为传引用类型","成员函数中的额外参数","成员函数模板可能会比编译器隐式合成的构造函数和赋值运算符匹配度更高","标准库提供了类型识别和类型修改相关的模板（type","泛型库","注意处理模板参数被显示的指定为引用类型的情况","注意模板是否可以处理不完整类型","由于foreach<>中的第三个参数是传值的，传递函数对象func会退化为指向该函数的指针，因此第一个调用和第二个调用时一样的","由于node是不完整类型，cont模板要能够处理不完整类型：","由于std::is_move_constructible必须用完整类型实例化，同时模板只在需要时才进行实例化，所以第二种声明方式可以使得cont不会报错。","第2条原文：","类型特征","类的调用运算符()应该为const的","编写泛型库时，要考虑到模板是否会支持不完整类型。例如对于下面的类模板和实例化代码：","编写泛型库的注意事项","编译器无法为包含引用类型的类合成默认的拷贝赋值运算符","返回函数指针和函数引用的类的成员函数","通过将模板中的临时量声明为auto&&类型可以实现对模板中临时量的完美转发：","通过模板可以推迟表达式的求值时间","重载了调用运算符的类"],"2022-01-12-ch12-fundamentals-in-depth.html":["\"c++\"的。模板一般是可以外部链接的，但是也有例外：","#includ","&","&&","(1.0,","(and","(constructor)","(list","(sinc","(srct","(t","(t2","(trait()","*","*p","++manager::counter;","...","//","0,","0;","0x7f},","1);","12","12.1","12.1.1","12.1.2","12.1.3","12.2","12.2.1","12.2.2","12.2.3","12.2.4","12.2.5","12.3","12.3.1","12.3.2","12.3.3","12.3.4","12.3.5","12.4","12.4.1","12.4.2","12.4.3","12.4.4","12.4.5","12.4.6","12.5","12.5.1","12.5.2","12.5.3","12.6","3.0);","3x3","42;",":","::error()","::feed()","::feed(creator)","::max(1.0,","::multiply(double*);","::multiply(int)","::multiply(int);","::multiply(void*);","=","a,","a;","a[10];","above,","accept","address","addressof(t&","alia","alloc()","allocate();","allocchunk","allow","allowed!","alreadi","angl","anoth","appear","applic","aren’t","arglist","arglist::v","argument","array","auto","auto或者decltype(auto)","b","b)","b;","base","base;","befor","blue;","bool","both","box;","brackets,","bytes[sizeof(t)];","c*","c++14)","c++17:","c++17之前要求模板的模板实参要完全和模板的模板实参匹配，不能有多余的默认模板参数，但是c++17中取消了这个限制：","c++支持3种模板形参：","c++支持四种类型的模板，可以声明在命名空间中，具体为：","c1;","c2;","c3;","c4;","c5;","c6;","c7;","c;","c>*","call","case;","chapter","char","class","clear","clear(a);","collect","color","combine()","combine(char&,","combine(char,","combine(int,","combine(t1,","combine<>(int&,","combine<>(long,","compose(tensor,","comrad","consid","const","const&","const&);","const&...","constant","constexpr","constructor","constructor,","cont","cont>","containers>","convers","convert","copi","copy()","copyabl","counter;","creator","data","data::copyable;","data;","datacopy","datalist","declar","deduc","deduced,","deduct","deduction;","default","default;","defin","definit","depth","deriv","derived;","destructor","details/definitions1.hpp","details/definitions2.hpp","details/definitions3.hpp","details/implicit.cpp","details/max.cpp","determin","differ","dimens","doesn’t","doubl","dstt","dynam","each","element","elid","emptytupl","entiti","err1;","err2;","err3;","error","error:","etc.","even","exampl","expand","expans","expect","explicit","explicitli","extern","external();","extra","f();","f(innertyp","f(int)","f(int);","f(t)","f(types(values)...);","f,","factori","factory;","feed(creator)","feed(one);","feed(two);","field","file","file,","first","follow","forwardcopy(f","friend","function","function,","function:","fundament","g()","g(outertypes(innertypes(innervalues)...)...);","g(types...","given","green,","handle;","henc","holder","i;","impli","implicit_cast","implicit_cast(","implicitli","inherit","inhibit","initi","inline)","innervalues)","instanc","instanti","int","int&","int&);","int&,","int()","int);","int,","int;","intchartupl","integ","internal();","inttripl","inttupl","isn’t","label","lambda表达式的捕获列表中","last","lasttype;","linkage:","list","list()","list::handl","list::list","list::zero","list;","log","long","long)","main()","manag","match","matrix","max","member","mix*","mix;","mixer","mixin","mixins()...","mixins(mixins)...","mixins)","mixins...","more","multiarray;","multipli","multiply(int)","multiply(t);","multiply(void*);","mytupl","n;","name","name;","namespac","nest","new","node","node*","node*;","node::allocate();","node;","nodeptr","nontyp","number","object;","ok","ok:","on","one;","oper","ordinari","otherinternal();","out","overload","p({0x7f,","p)","p1","p1;","p2","p2;","p;","pack","paramet","partial","per","point","point()","point(mixins...","pointer","previou","primari","provid","public","public:","qualifi","quintuple;","r","r*","red,","redeclar","refer","rel","rel;","repeat","requir","resolut","result","return","runtests(t","same","schedule::dispatch(task*);","scope","scope)","select","similarli","special","specifi","specified,","srct","standard","static","staticvalu","std:","std::initializers中","std::list","std::nullptr_t","std::string","struct","substitut","suppli","support","t","t*","t1","t2","t2);","t2;","t4","t5","tada;","task;","templ_func();","templat","template,","template...","template<>","template>","templates）：","tensor","tensor);","tensor;","testcontainers();","therefor","three","ticket()","transformmatrix","translate(t);","tree","true);","true;","ts","tupl","tuple;","tuple<>;","two","two;","type","typelist;","typelist>;","t{};","u","unari","union","unknown","unnam","unrel","unsign","us","v(values...);","val","valu","value);","value;","valueholder;","values)","values::hold","variabl","variable/funct","via","virtual","visibl","visitmixins(visitor","visitor","visitor(static_cast(*this)...);","visitor)","void","without","x","x)","x,","x;","xs","y,","ys","z;","zero","zero;","zip,","zip;","{","{\"center\"});","{}","{};","}","};","~dynamic();","一些不合法的例子如下：","一些合法的例子如下：","上面三种的引用","上面的代码中，模板参数包types和函数参数包values通过一一的类型转换进行了展开。","上面的代码要求在实例化tree时，node也要是可见的的，否则就会报错，但是普通类却没关系：","下一个是发生在定义类模板的非类型模板参数时：","下面是一个在构造函数中初始化基类时展开参数包的例子：","下面给出几个常见的参数包展开的例子，第一个发生在多重继承和函数参数调用时：","主模板","也就是point将没有基类，v将被通过默认构造函数初始化，但是不会被编译器解析为函数定义。","从c++17开始，可以使用二元运算符作用域参数包中的所有参数，例如：","以下情况不允许使用默认模板实参：","任何类型都可以作为类型模板实参，但是要保证代码是合法的：","但是函数模板实例化的函数不会和普通函数、虚函数、编译器隐式合成的构造函数和运算符等价。","偏特化","其它非类型模板形参","具体见下例：","函数参数包","函数参数调用时","函数名后面存在<>的函数模板可以被声明为类的友元，但是不能定义该函数模板：","函数抛出的异常中（从c++11开始不再支持）","函数模板","函数模板实参","函数模板实参可以通过显示指定、推导或者默认形参的方式指定：","函数类型的参数中","别名模板","前面两个例子都是普通类，对于类模板规则是一样的：","参数包也可以嵌套展开：","参数包展开","参数包展开会发生在：","参数包展开是指将参数包分成一个个参数的过程，例如下面代码中的types...：","参数包展开的时机","参数化声明","友元","友元函数也可以定义在类模板中，多用于友元函数依赖于类模板的模板参数：","友元函数声明（友元函数定义可以）","友元模板","友元模板只能是主模板。","友元类","友元类声明中麻烦的在于指定某个类模板的特化结果作为友元：","变量或者函数的地址（函数或者数组可以不加取地址运算符&）","变量模板","只有在两个模板实参两两相等的情况下才是完全等价，这样实例化的结果就是一样的，比较的过程不考虑类型别名和常量表达式的计算：","可变参数模板","后记","在编译时被计算的整型常量","声明对齐时","多个参数包可以同时展开：","多重和嵌套参数包展开","如果没有被作用域运算符::修饰，就当做友元函数声明，也可以进行定义","如果被作用域运算符::修饰，则根据匹配规则匹配友元函数","定义多重继承的基类时","对于没有<>的友元函数声明：","对于类模板，模板参数包只能在最后。而对于函数模板可以有多个模板参数包，但是要保证用来分隔模板参数包的模板参数具有默认值或者可以被推导：","嵌套的模板参数包也是合法的：","嵌套类模板","左值引用","当参数包为空时，&&运算符结果为true，||运算符结果为false，,运算符结果为void。","当模板形参也可以用模板替代时，该模板参数就是模板的模板形参。","当这四种模板声明在类中时，就变成了：","当需要将模板实例化的所有结果都定义为友元时，需要使用友元模板：","成员函数指针","成员函数模板","成员别名模板","成员指针（类的非静态数据成员和非静态成员函数），此时非类型模板参数的类型必须是成员指针类型","折叠表达式","指针类型","整型或者枚举类型","无法被推导的模板实参（例如函数返回类型）一般会被放在模板声明中靠前的位置：","构造函数中初始化基类时","模板参数包","模板参数包也可以用来偏特化：","模板和链接","模板实参","模板实参的等价性","模板形参","模板的模板参数","模板的模板实参","模板的模板形参","模板的默认链接方式是extern","正常声明的模板称为主模板（primari","深入模板","空指针（对于指针和成员指针类型的非类型模板实参）","类型模板参数跟在typename和class后面，后续的类型模板参数需要用,分隔，可以=提供默认参数。","类型模板实参","类型模板形参","类外定义成员函数模板","类模板","类模板和函数模板中","类模板的友元函数","类模板的友元类","类的默认模板实参要出现在靠后的位置，而函数模板没有这个要求，但是都不能重复：","联合体也可以是模板：","虚成员函数不能是模板，因为c++是通过虚表实现虚函数的，这要求在定义类时就要确定虚函数的个数，但是成员函数模板只有在调用时才能实例化，所以下面的定义会报错：","虚成员函数（模板）","通过...可以声明可变参数模板，模板参数包可以包含多个类型模板参数、非类型模板参数和模板的模板参数：","除了成员别名模板，其余三种在类中声明的模板可以定义在类外：","零长度参数包的展开","零长度的参数包将被忽略：","静态数据成员模板","非类型模板参数","非类型模板参数只能是：","非类型模板实参","非类型模板实参可以是：","非类型模板形参","默认模板实参","（类型）模板参数"],"2022-01-27-ch13-names-in-templates.html":["#1","#2","#includ","(","(c*","(count","(n::x*","(t","(typenam","...","//","13","13.1","13.2","13.2.1","13.2.2","13.2.4","13.3","13.3.1","13.3.2","13.3.3","13.3.4","13.3.5","13.3.6","13.3.7","13.4","13.4.1","13.4.2","13.5","2;","3;","4;",":","::c","::x","=",">::c",">::c>::c)",">i",">templat",">，则就是受限名称","a,","a;","a;”","adl!","adl和显示模板实参","alia","alternative,","alway","anoth","argument","b","b)","b::i","b;","bxt","bxt::mystery;","bxt::templat","c","c&","c*","c++中有两种名称分类的方式：","c++名称分类","c++标准允许在解析模板时就报错，而不必等到两阶段实例化时，例如下面的代码在解析时就能发现错误：","c++的复杂之处在于源程序的解析是上下文相关的，例如在c++11之前，>>总是会被解释为右移运算符，除非在其中加一个空格：","c2;","c;","call","case1","case2","chapter","class","compil","const","const&)","const&);","count)","count;","current","d","d::x","d;","decid","deep","deep&","deep*","deep::f();","definit","denot","depend","dependent,","details/adl.cpp","details/inject.cpp","determin","dxtm","dxtt","e","e1","earlier","enclos","enum","error","error:","explicit","extern","f()","f();","f(*p);","f(c","f(d*","f(e)","f(t);","f(x);","find","found","friend","function","furthermore,","g","game","here?","i*","i;","i[2];","implic","in::templ","inhibit","inject","instanti","instantiation）和未知特化类型（unknown","int","j","j*","j;","lead","list","list.","lookup","lookup_example(int","lookup，adl）规则。当一个非受限名称可能是非成员函数或者运算符时，编译器会在关联的命名空间和类中尝试查找该名称，就像是这个非受限名称被这些命名空间和类按顺序修饰变成了受限名称一样：","magic","magic*","magic;","main()","max","more","mysteri","mystery*","n","name","names/anglebrackethack.cpp","namespac","never","next;","node","node*","nondependent;","nondependentcall()","ok","ok:","p","p)","p.templat","p;","parent;","pars","pd","pd)","plink;","previous;","privat","private:","programm","public","public:","refer","return","same","scope","select()","select();","select(x*);","select(xp);","shell","shell::templ","sizeof(c);","special","specialization,","specialization.","specialization:","specialization）：","static","std::cout","struct","succe","such","syntax","t","t;","templat","template.","template<>","templates,","therefor","tt>","type","typedef","typenam","unknown","until","us","valu","virtual","visibl","void","way","weird","whether","within","without","write","x","x;","xp","xp)","y","{","}","};","“c*","不包含模板参数的基类就是非依赖型基类。","不是用来表示基类和表示初始化列表的情况","为了解决这个问题，需要显示的引入一个模板声明来指出select是一个函数模板：","依赖型using声明","依赖型友元查找","依赖型名称和非依赖型名称：如果一个名称中包含模板参数，则就是依赖型名称","依赖型名称查找","依赖型基类","依赖型模板名称","依赖型类型名称","依赖型表达式","依赖型表达式分为实例化依赖型表达式、值依赖型表达式和类型依赖型表达式。","友元函数声明可以是该函数的第一次声明：","受限名称会在指定的作用域中进行查找：","受限名称和非受限名称：如果一个名称包含作用域运算符::或者成员访问运算符.和","只应用上述规则会出现名称无法查找的情况，例如下面的例子：","只有当非受限名称是函数时，才会应用adl规则：","可以使用using引入基类中的依赖型类型，但是引入基类中的模板需要变通一下：","名称中包含::运算符","名称中包含模板参数","名称查找","后记","因为运算符不是bignumber的成员函数，而是定义在命名空间bigmath中的函数，所以max()无法解析它，这就需要应用依赖于实参的名称查找（argu","在c++11之前，第一行会被解释为取出y::c并且和::c进行两次的比较，最终输出0；第二行会被解释为y::c>::c，最终输出3。不过从c++11开始，两行的输出都为0。","在上面的例子中：","在这个例子中，如果select是一个函数模板，那么就应该是显示指定的模板实参；如果是一个显示的模板实参，那么select就应该是一个函数模板，这就出现了先有鸡还是先有蛋的问题。原文：","对于普通类，默认注入的就是类名称，但是对于类模板，每次实例化都会产生不同的类型，所以类模板名称分为当前实例化类型（current","对于类模板，同样会将类名称默认注入到作用域中：","当类型名称中包含模板参数时，为了避免歧义，需要使用typename显示指出后面的是类型名称。必须要使用typename作为前导的情况要满足下面的四个条件：","当类模板中存在嵌入类时，二者更加难以区分：","感觉很复杂，最有用的一条应该对于受限名称，先在当前实例化类和非依赖型基类中查找，最后在依赖型基类中查找。","有时需要用template关键字显示指出后面的名称是模板：","模板中的名称解析","类型名称没有被struct、class、union和enum修饰","类模板名称的注入","类的名称以非受限的形式默认注入到类作用域中：","继承和类模板","编译器可以查找f(*p)，因为关联的类是c，关联的命名空间是全局命名空间","编译器无法查找f()，因为函数没有参数，也没有返回值","编译器错误","解析类模板","该类型名称是未知特化类型","这里的规则就是如果所引用的名称可以被显示的特化，则该名称就是未知特化类型。原文：","隐式注入的类名称","非依赖型基类","非受限名称会在最近的作用域中进行查找：","非模板中的上下文相关文法"],"2022-02-07-ch14-instantiation.html":["\"f.hpp\"","\"f.tpp\"","#1","#2","#2a","#2b","#3","#4","#5","#6","#includ","(c&","(i>0)","(myint","(sizeof(t)","(t","(unsign","(which",",","...","//","0;","14","14.1","14.2","14.2.1","14.2.2","14.3","14.3.1","14.3.2","14.3.3","14.4","14.4.1","14.4.2","14.4.3","14.5","14.5.1","14.5.2","14.6","14.7","14.8","2*p;","2;","3);","41;","42;",":","=",">","alloc","allocator>","although","alway","anonymous;","arr[n];","auto或者decltype(auto)类型的变量，以及返回类型为auto的函数模板","basic_str","basic_string;","befor","bodi","bool","boom;","c","c)","c*","c++","c++标准要求模板定义要出现在所有特化和实例化之前，这也就意味着一般要将模板定义在头文件中。","c++编译器只在需要获取类大小或者访问类成员时才会对类模板进行实例化：","c++编译器只实例化需要用到的模板代码。","c++编译器在检查模板定义时，总是假设为最好的情况：","c.f();","c::f()","c;","call","chapter","class","compil","complet","const&);","const&,","constexpr","contain","danger","declar","decltype(f(2))","decltype(v)","default","defin","definit","definition:","definition;","details/lazy1.hpp","details/lazy2.cpp","detect)","due","e","enum","error","error:","explicit","extern","f","f()","f();","f(42);","f(char);","f(int);","f(long);","f(n);","f(p);","f(t","f(t)","f.cpp:","f.hpp:","f.tpp:","f1(7);","f1(int)","f1(t","f<>(float);","fail","fine:","found!","four","function","f是一个非依赖型名称，编译器通过普通查找规则可以确定f<>是一个模板，而对于g，由于其定义在命名空间n中，其后的会被解析为小于号运算符，所以在第一阶段就会触发编译错误。","g","g(","g()","g(int","g(int)","g(p);","g1","g1(int)","g1(x);","gener","h","h()","h(n::e);","h(t","here,","however,","i)","i);","immedi","implement","inclass()","inhibit","initi","inst;","instanc","instance.","instanti","instantiation:","instantiations:","instantiation）指将被实参替代后的模板代码插入到源代码中的位置。","inst实例化上面的类模板时，编译器将只实例化类中的成员函数声明和匿名的联合体，所以anonymous和unsafe()会报错。","int","int;","long","long)sizeof(s);","m;","main()","manual","member","myint","myint(int","myint;","n","n)","n::e","namespac","nearest","need","nest","nobodyhere(saf","noboomyet;","now","ok","ok:","oper","p","p)","p.compare(0)","part","pfew;","poi","point","possibl","prevent","previous","public:","q","q*","refer","reference.","refin","requir","result","return","s","s::i","s;","safe","scope","special","std","substitut","t","t.cpp:","t.hpp:","t::default_value();","t::type;","templat","template,","them.","translat","tricki","type","typenam","unit","unsign","until","us","usag","v","valid","valu","var1","var2","virtual","virtualclass","vmem();","void","wherea","whole,","without","x","x)","{","{}","}","};","~virtualclass()","两阶段查找","为了避免贪心实例化策略带来的问题，可以通过显示实例化的方式实现只在一个翻译单元中进行实例化。这需要只在该翻译单元中提供模板定义，其余翻译单元只提供模板声明，例如将实例化的模板放入后缀为.tpp的源文件中：","以往函数模板是作为一个整体实例化的，但是在支持编译时if后，编译器必须支持部分实例化模板。原文：","内联函数模板","函数模板","包含模型","同理，实例化的类模板s不能插入到位置2和位置3。如果将实例化的类模板s插入到位置4，则无法在h()中求出s的大小，所以只能将实例化的s插入到位置1。","后记","和常量表达式关联的模板","因为c++不允许在函数定义中再定义函数，所以不能在位置2和位置3插入实例化的f(int)。因为g(int)的定义在位置1处不可见，所以实例化的f(int)不能插入到位置1，只能插入到位置4。","在一个翻译单元中，可能存在多个实例化后的类模板和函数模板，编译器只保留第一个实例化的类模板，但是保留所有实例化的函数模板，同时不去检查这些函数模板是否是完全一致的。在实际的编译器中，很多编译器简单的将实例化的函数模板插入到翻译单元的最后。","在下面的例子中，实例化后的s被插入到位置1，s被插入到位置2a，f(double)被插入到位置2b：","在两阶段查找的第一阶段，因为g1(t)是一个依赖型名称，所以会应用普通查找规则进行查找，但是此时g1(t)定义不可见，因此名字g1(t)是无法解析的。当将实例化的f1(int)的定义插入到位置2时，因为int类型不和命名空间相关联，所以g1(int)无法应用adl规则进行查找。","在使用模板时，编译器会通过名称查找规则自动找到模板定义并将生成的模板代码插入到合适的位置，这一过程不需要程序员参与，但是c++也支持通过template关键字实现显示的插入生成的模板代码：","在第一阶段，非依赖型名称通过普通查找规则或者adl规则进行查找，依赖型非受限名称也会被查找，但是不作为最终结果","在第二阶段，会查找依赖型受限名称，第一阶段中查找过的依赖型非受限名称会再次使用adl进行查找","在编译的过程中不实例化模板，并使用预链接器来进行链接。如果发现未实例化的模板，则去重新编译模板代码，重复上述过程直到链接成功。","处理模板中的编译错误被推迟到了链接阶段，排错成本提高","如果两个翻译单元中存在相同函数的定义，则在链接过程中就会发生错误，对于模板也存在同样的问题，解决办法包括贪心实例化、查询实例化和迭代实例化。","如果将例子中的myint更换为int，就会报错：","实例化部分模板定义的过程称为部分实例化：","引用类型的变量","当使用tricki","惰性实例化","手动实例化","按需实例化","显示实例化","显示实例化声明","显著增加链接时间","有一些特殊情况不适用于显示实例化声明：","查询实例化","标准库中提供的某些模板一般只会被特定的类型实例化，其中就用到了显示实例化声明，例如std::basic_string（也就是std::string）：","标准库中的显示实例化","模板实例化","模板实例化代码插入位置","模板实例化代码插入位置（point","模板实例化模型","此外，实例化类模板时还需要虚函数的定义，否则会出现链接错误：","由于编译选项的不同，生成的代码可能是不一样的，但是链接器不进行比较","目标文件的体积会变大","第一阶段中查找依赖型非受限名称主要是为了判断该名称是否是模板：","类模板","类模板和别名模板","类模板成员的实例化","编译器在处理每个翻译单元时都会生成函数模板代码，并用特殊的名称进行修饰，这样链接器就能识别重复实例化的函数模板。这种方式主要有三个缺点：","编译器在所有的翻译单元之间维护一个数据库，编译器通过查询数据库来判断是否需要生成模板代码，不过这种方式没有被市场接受，我也没有想明白这个要怎么做。","编译器对模板的支持","编译器生成了多份代码，但是最终只保留了一份","编译时if","贪心实例化","这种方式主要有三个缺点：","迭代实例化","通过extern关键字可以声明模板实例化：","通过编译时if可以实现只实例化部分分支，例如在下面的例子中，else分支不会被实例化：","通过这个例子可知，函数模板实例化后的插入位置是在包含引用函数模板的命名空间或者定义之后。原文：","通过这个例子可知，类模板实例化后的插入位置是在包含引用类模板的命名空间或者定义之前。原文：","部分实例化和全部实例化","需要存储模板定义在源文件中的位置","非依赖型的名称可以在模板解析时就进行查找，这样可以提前发现错误，而依赖型名称只能在提供了模板实参时才能进行查找，所以模板的实例化需要两个阶段："],"2022-02-15-ch15-template-argument-deduction.html":["!=","\"guy\");","\"hello\"_b7;","\"hi\");","#1","#2","#includ","&c,","&f;","&x::m;","'e',","'i',","'o',","'u',","(&)[20]);","(&)[20]类型，实参类型为int[20]，形参类型为t，因此t被推导为int[20]。","(&array)[n])","(*pf)(char,","(auto","(char","(deriv","(int","(int***","(n","(po","(pointer,","(print","(s","(std::string&&","(t","(t&","(t1","(t2::*)(t3*));","(void*)nullptr;","(x::*p)(typenam","*cp","*pos++;","*pos;","+","...","//","0);","0,","0.0;","0815_b7;","0;","0xff00_b7;","1,","12","15","15.1","15.10","15.10.1","15.10.2","15.10.3","15.10.4","15.10.5","15.10.6","15.11","15.12","15.12.1","15.12.2","15.12.3","15.13","15.2","15.3","15.4","15.5","15.5.1","15.6","15.6.1","15.6.2","15.6.3","15.6.4","15.7","15.7.1","15.8","15.8.1","15.8.2","15.8.3","15.8.4","15.9","1;","1st","2,","2nd","3","3,","3.0;","33","4.0;","400u;","42","42)","42);","42;","42});","42};","44.3);","44.3,","5,","7,","8","9});",":","::begin(a);","::begin(v);",";","=",">","[]","[b,","[x,","_b7","_b7()","a(b)","a;","a[10];","adda(...);","adda(t","addb","addb(...);","addb(t","addresulta","addresultb","arg,","argtyp","argument","arguments:","array","array,","array::iter","array;","as:","auto","auto&","auto&&","auto*","auto::*pm2","auto推导的特殊情况","a和b同时匹配两个推导指引（类型分别为tuple>和tuple），但是第二个更匹配，所以类型为tupl","b","b(x);","b)","b,","b[42];","bar(tupl","befor","begin()","begin(container&","begin(t","bi;","bind","bindings）","bi{true,","bool","both","built","c","c)","c++17,","c++17:","c++17引入了推导指引，用来推导类模板参数：","c++17引入了结构化绑定，用于以下三种情形：","c+1;","c,","c.begin();","c1(22,","c10(\"hi\",\"my\",","c11(22,","c12(\"hi\",\"my\");","c2(22,","c3(\"hi\",","c4;","c5(\"hi\");","c;","c<>","call","callabl","categori","chapter","char","char)","char)，因此t可以被推导为char，同时pf为f的地址。","chars)","chars{cs...};","check","class","collaps","compil","complex","compos","consid","const","const&","const&&","const&)","const&);","const&...);","const&;","const*","constant","construct","constructor","const类型。对于第二条推导指引，t仍然被推导为std::string，但是由于参数类型是转发引用，还会考虑值类型（在这里是左值），根据引用折叠规则得到的参数类型为std::string&，明显更为匹配，但是这并不是我们想要的结果，所以这种情况下的推导不考虑值类型。","cont","contain","container)","container.begin();","container.end())","container::iter","contexts.","contexts，包括指针、引用、数组、函数、成员指针、模板标识等）从而进行推导。原文：","context），除了下面的这些代换位置，其余都可以视为代换相关上下文，也就是sfinae规则起作用的范围：","c{x,","c的类型为tuple,","d","declar","declaration).","declarators;","declared)","decltype(*pos)","decltype(adda(x(),","decltype(addb(x(),","decltype(auto)","decltype(t+u)","decltype可以推导变量、函数等的类型，也可以推导表达式的返回类型，此时还会带上表达式最终求值后的值类型：","deduc","deduce/aliastemplate.cpp","deduce/initlist.cpp","deduce/resulttypetmpl.cpp","deduced,","deduceelement(*pos++);","deduceelement(t&","deducepos(container.begin());","deducepos(t","deduct","default","defin","dequestack","describ","details/fppm.cpp","doubl","double,","double}","double},","d{x};","d的类型为tupl","e","e)","e);","e)中的x应该是等价于x的，而不是x，所以在这种情况下禁用了推导。","element","element);","elementari","elements.","equival","error","error:","eventu","explicit","explicitli","expression:","f","f();","f(0,","f(2);","f(array::iter","f(double*);","f(first","f(i);","f(i,","f(int","f(int)","f(iter","f(j);","f(s);","f(s)试图将s转换为int","f(std::initializer_list);","f(t&&","f(t*,","f(t,","f({'a',","f({2,","f1(intstack);","f1(ppp);","f1(stack);","f1(sv,","f1(t*);","f1(tuple,","f2","f2(b);","f2(dequestack);","f2(e(&)[n]);","f2(intstack);","f2(sv,","f2(tuple,","f3(&s::f);","f3(intstack);","f3(stack);","f3(t1","fail","fair","fals","fine:","first","first,","foo()","foo(pair","form","forth),","forward","forwardtog(0);","forwardtog(c());","forwardtog(c);","forwardtog(std::move(v));","forwardtog(t&&","forwardtog(v);","fppm(&x::f);","fppm(void","function","funsign","g","g(","g()","g();","g(...)","g(...);","g(0);","g(c","g(c&&)","g(c&&);","g(c&)","g(c&);","g(int","g(int*)","g(int*);","g(static_cast(x));","g(std::forward(x));","g(std::string","gp","guid","h1(pair","h1(pif,","h2(pair","h2(pif,","hello_b7","hello_b7;","here)","i)","i,","i;","i]","identifi","ids;","ill","initi","instanti","int","int&","int&&","int&&;","int)","int*","int**","int*}","int,","int;","intstack)","int},","iter","i是左值，所以t被推导为int&，根据引用折叠规则，最终p的类型为int&，而2是右值，所以t被推导为int，最终p的类型为int。综上，引用折叠规则也适用于转发引用。","j","j,","k)","k);","last);","level","liter","long}","long},","lr","lvalu","lvalue)","lvalue;","m;","main()","make","match","matches,","maybeint","member","mismatch","more","n","n)","n]","octal","ok","ok:","oper","operator\"\"","operator()","outer","p","p);","pair","paramet","parameter","part","pass","pdd)","pdd);","pid);","pid,","pif,","plot(pt);","pm","po","pointer","pos);","ppp)","prefer","private:","proce","process","pt;","pt[3];","public:","r","rci","recurs","refer","reference,","rest","rest);","rest...","result","return","rr","rri","rvalu","rvalue;","s","s(argtyp","s(t","s(t)","s(typenam","s)","s,","s:","s::*pm","s;","same","second","sfina","sfinae规则起作用的范围就是代换相关上下文（immedi","short,","signal","somecompilerspecificnamex","somecompilerspecificnamex();","somecompilerspecificnamez","somecompilerspecificnamez();","specifi","specified,","stack;","stack>;","std::array","std::cout","std::dequ","std::forward可以通过上面的方式实现。","std::initializer_list和模板参数推导","std::is_lvalue_reference::value;","std::is_rvalue_reference::value;","std::is_same::value;","std::tupl","std::vector","struct","substitut","sv);","sv,","s{12};","s的推导指引，而valuearg::type并不是可推导的上下文（参见15.2）。","t","t&&);","t&();","t);","t)，实参类型为void(char,","t*","t*);","t*;","t,","t1","t1,","t1{},","t2","t2,","t2{},","t3","t3{});","t;","templat","term","test(dequestack","this?","through","top","true","ts","tupl","tuple(ts...)","tuple(ts...);","tuple(tupl","tuple);","tuple;","tuple>","tuple{1,2};","type","type)","typenam","types1","types2","type），并为该类型重载函数调用运算符()：","u","u)","u;","undefin","unsign","unsigned,","us","usecontainer(contain","uv)","uv);","v;","valid","valid;","valu","value;","valuearg","valuearg::type)","valuearg::type;","void","void*","void,","volatile&&","vs.","way,","x","x()));","x();","x(12);","x(b,","x(iter","x(t&&);","x(u,","x(x&&);","x)","x::*","x::i));","x::i)也可以被推导。","x;","xa","x{12};","x};","x的类型为tupl","y","y(12);","y(t","y(t&&)","y(t&&);","y(x","y(x&&);","y(x)","y,","y;","z","z(t","z(t&&)","z(t&&);","z1","z2{2};","z;","z]","{","{double,","{float,","{int,","{short,","}","};","“declarator”","一个有意思的例子如下：","一些奇怪的推导规则","上面代码包含的两条隐式推导指引为：","上面代码包含的推导指引为：","上面的代码创建的闭包类型为：","上面的推导指引并不和任一构造函数对应，它只是指出当以x类型构造y时，类模板参数类型也为t。","下列情况中，形参类型不一定要和实参类型完全匹配：","不允许直接定义引用的引用，但是在模板代换和使用类型别名时可能会出现多重引用，这时会应用引用折叠规则，具体为：内层引用的const和volatile会被丢弃，只有在内外层都为右值引用的情况下，最终结果才为右值引用：","不可推导的上下文包括：","从auto进行推导","从c++11开始，使用auto可以让编译器自动推导类型，其原理和模板实参推导是类似的，例如对于下面的代码：","从c++14开始，可以使用decltype(auto)的写法，用来统一decltype上述的区别：","从c++17开始，也可以根据类的构造函数对类模板参数进行推导，但是一个原则是要么全部指定类模板参数的类型，要么全部让编译器进行推导：","从decltype(auto)推导","从decltype进行推导","从std::tuple、std::pair和std::array模板初始化变量（这些模板支持std::tuple_element系列模板）：","从初始化和表达式进行推导","代换相关上下文","使用数组初始化多个变量：","使用简单类类型初始化多个变量：","允许的实参类型转换","其中的第一个auto等价于：","其它问题","函数模板的定义","函数模板的异常声明","别名模板","包含非类型模板参数的表达式，例如不能通过s推导i，也不能通过int(&)[sizeof(s)]推导t","受限名称，例如不能通过q::x推导t","变量模板的初始化部分","可推导的上下文","右值引用","合成类模板的默认函数","后记","因为dequestack就是stack>，所以f2()和f3()等价，因此使用stack>推导t","在c++17之前，推导规则仅限于函数模板和成员函数模板，对于类模板必须显示指定实参：","在下面的情况下，&&不会被解释为转发引用：","在同一行使用auto定义多个变量时，仅当变量类型一致时才是合法的：","在引入了推导指引的情况下，类模板的每一个构造函数都有隐式的推导指引。如果想要禁掉某一隐式的推导指引，可以将相关构造函数写为这样子：","在注入类名称的情况下禁用类模板参数推导","在现代c++中已经废弃了。","在转发引用的情况下不考虑值类型","复杂类型可以通过递归的方式转换为多个可推导的上下文（deduc","如果实参是指针或者成员指针类型，则可以被隐式转换为被const和volatile修饰","如果形参是传引用类型的，则形参在被const和volatile修饰的同时实参可以不必","如果形参类型为std::initializer_list，且实参中所有元素的类型一致，则t可以被推导：","如果相同形参类型的推导结果不一致，则推导失败。如果形参是传引用的，则实参被推导为引用类型；如果形参是传值的，则实参会发生类型退化（数组和函数转换为指针类型，const和volatile被丢弃）。","如果表达式时过期值，则decltype(e)结果为t","如果表达式是右值，则decltype(e)结果为t&&","如果表达式是左值，则decltype(e)结果为t&","字面值运算符模板","完美转发的实现","对于下面的初始化过程：","对于可变参数模板，形参类型可能和多个实参类型对应：","对于第一条推导指引，t被推导为std::string，所以在调用时需要将参数转换为std::str","异常部分","引用折叠规则","当lambda表达式的参数类型为auto时，就变成了泛型lambda表达式，编译器处理的方式依然是创建一个闭包类型，但是是为该类型重载了函数调用运算符()成员模板：","当参数包展开时，还要保证参数包展开后相同形参的推导结果一致，见下面两个例子：","当推导指引中带有explicit关键字时，只有直接初始化的情况才可能有效。","当推导表达式的类型时：","当模板参数为传转发引用类型时，推导规则还会考虑实参是左值还是右值，如果实参是左值，推导结果为引用类型，否则为原始类型：","当用auto作为函数模板的返回类型时，函数体必须被实例化才能推导函数的返回类型：","形参类型为void(t,","形参类型可以是基类类型，而实参类型是派生类类型","成员变量的默认初始化部分","拷贝构造和初始化列表","推导指引","推导指引中的explicit","推导指引可以理解为当用类型t初始化类s时，模板参数的类型就为t。","推导过程的一些限制","显示指定函数模板实参","显示指定模板实参类型后，就省略了推导参数类型的过程，同时会将实参进行隐式类型转换。","显示的推导指引只用来推导","最后，auto也可以用于推导函数返回类型非类型模板参数。","根据上面定义的作用范围，下面的代码会报错：","模板参数包的推导","模板参数推导","模板参数推导的特殊情况","模板参数推导过程","模板参数推导过程就是用实参类型a去确定形参类型p的过程。原文：","模板的默认模板实参","此外，auto只推导主类型，因此const、指针等需要显示添加：","泛型lambda表达式","用auto作为递归函数的返回类型时，递归结束的情况应该写在前面，以让编译器可以推导递归函数的返回类型：","由于auto和模板参数推导的原理一致，所以右值引用将解释为转发引用：","第一种特殊情况是获取函数模板实例化后的地址：","第一行的写法将产生拷贝，第二行的写法仅在*运算符支持返回引用的情况下才能编译通过，第三行的写法综合了上面两种。为了避免写两遍表达式，从c++14开始，可以写为最后一行的形式。","第二个auto等价于：","第二种特殊情况是类型转换函数模板：","简单来说，在代换函数模板声明中出现的错误不会被视为错误：","类模板参数推导","类模板实参","类模板的定义","结构化绑定（structur","编译器处理具有具体参数类型的lambda表达式的方法是创建一个闭包类型（closur","编译器对别名模板的处理方式是首先进行别名代换，并用代换后的结果进行推导：","虽然x::i不是可推导的上下文，但是x::*p是可推导的上下文（n被推导为33），从而void","调用f1()时，实参类型为stack>，使用该类型推导t和cont","贴个代码自己体会一下吧：","转发引用","这将产生类似templat","通过转发引用和引用折叠规则，可以在模板中实现传递参数类型和参数的左值右值属性：","除了最简单的形参类型t之外，复杂的形参类型也可以进行推导：","隐式推导指引","需要注意的是，完美转发规则并不转发参数的常量属性，所以会存在下面这种奇怪的现象：","默认模板实参","默认模板实参不能用来推导模板形参："],"2022-02-17-ch16-specialization-and-overloading.html":["!=","\";","\"funcoverload1.hpp\"","\"nontemplate\";","\"template\";","#1","#1,","#10","#11","#2","#2,","#3","#3,","#4","#5","#6","#7","#8","#9","#includ","&(*a)[0];","&(*b)[0];","&a1[0];","&a2);","&s1.x;","&s2);","&y);","'b')时，可能找不到最佳匹配的函数。","((int*)nullptr);","());","(array","(array*","(c","(double*)nullptr)可以同时匹配两个可变参数模板，参数列表分别为(a1)和(a2*)，显然参数列表1可以代换为参数列表2，但是反过来不能，也就是得到参数列表2的函数模板更为特化","(either","(int*)nullptr的类型是int*，可以匹配f(int*)，也可以匹配f(int*)，而f(t*)相对于f(t)则是更为特化的版本（具体规则见16.2.3），所以将匹配f(t*)","(std::size_t","(still)","(t&&)","(t)","(t*","(t*)","(ts*...)","(ts...)",")","*a","*b","*b;","*p","*q",",","...","...);","//","0","0.0)有两个参数，且没有指针类型，所以只能匹配f<>(ts...)","0;","0的类型是int，显然只能匹配f(int)","1","12;","16","16.1","16.1.1","16.1.2","16.2","16.2.1","16.2.2","16.2.3","16.2.4","16.2.5","16.3","16.3.1","16.3.2","16.3.3","16.3.4","16.4","16.5","16.6","1;","2","2;","35)","3;","42)","4;","6;","7;","::info())\\n\";","::msg())\\n\";","=","==",">data",">data;",">exchangewith(b);",">size();","a,","a1","a1,","a1[0]","a2)","a2*)，因此没有办法将参数列表1代换为参数列表2，也没有办法将参数列表2代换为参数列表1，所以两个函数模板之间不存在偏序关系，重载解析过程将会失败。","a2[0]","against","alreadi","argument","array","array&","array(array","array*","avail","b","b)","between","both","c","c()","c++:","c++标准中针对变量模板偏特化还有很多问题没有规定，取决于编译器的实现。书中只有两个例子：","call","caus","chang","chapter","char","class","code;","const","const&&，折叠后模板构造函数的参数类型为c","const&&，比移动构造函数更为匹配","const&)","const&);","const&，和拷贝构造函数一致，优先匹配非模板函数","const&，折叠后模板构造函数的参数类型为c","const*","const*)和t(int","const*)，参数列表2为(a2","const*,","const;","constexpr","const、volatile修饰符","conversely,","count","count;","data","data;","data[k];","deduct","default","default;","definit","demo(array*","details/funcoverload1.cpp","details/funcoverload1.hpp","details/funcoverload2.cpp","details/nontmpl1.cpp","details/nontmpl2.cpp","details/tmplconstr.cpp","details/tupleoverload.cpp","details/variadicoverload.cpp","differ","distinguish","doesn’t","e1;","e2;","e3;","end","enum","error","error:","exact","example(int*","exchang","exchange(p++,","exchangewith","expans","express","f((int*)nullptr)可以同时匹配三个函数模板，参数列表分别为(a1*)、(a2)和(a3*)，显然参数列表2不够特化，所以接下来要比较参数列表1和参数列表3特化偏序关系。虽然可以双向代换，但是由于a3是参数包，单个参数a1不能转换为参数包，所以得到参数列表1的函数模板更为特化——这条规则也意味着普通函数模板比可变参数函数模板更为特化","f((int*)nullptr,","f();","f(0,","f(int","f(int&)","f(int)","f(int*)","f(int,","f(t&)","f(t)","f(t*)","f(t,","f(ts*...)","f(ts...)","f(tuple)","f1(t1,","f1(t2,","f2(t);","f<>(tuple)","fine","first","first.","follow","info()","inlin","inner","instanti","int","int*","int*)，第一个函数的第一个形参比第二个函数的第一个形参更为匹配，而第二个函数的第二个形参却比第一个函数的第二个形参更为匹配，因此这里存在模糊调用。","int;","invalid","invalid;","invent","k","k)","kind","list","long","main()","match","match,","member","mismatch","more","msg()","need","nest","nontyp","null_iter","null_iterator;","null_ptr;","nullptr);","nullptr,","nullptr的类型是std::nullptr_t，也只能匹配f(std::nullptr_t)","ok:","operator=","operator[]","order","otherwis","outer","outer::cod","outer::code;","outer::inn","outer::inner::count","outer::inner::count;","outer::inner;","outer::print()","overload","p","p)","p);","p)时，两个函数模板实例化后的结果分别为t(int*,","p1,","p2)","p2);","p2)可以匹配两个版本的quickexchange()，但是第二个比第一个更为特化（具体规则见16.2.3）。","pack","paramet","pi;","preced","primari","print()","private:","public:","pv;","q","q++);","quickexchange(&a1,","quickexchange(&s1,","quickexchange(&x,","quickexchange(array*","quickexchange(p1,","quickexchange(t*","return","s","s*","s1,","s1.x","s2.x","s2;","s::print()","s;","second","second.","signific","sizeof(t);","sizeof(void*);","special","specialization）。类模板、函数模板、变量模板和成员模板可以被全特化。","specialization）是指代换模板中的一部分参数得到一个新的模板，原始模板称为主模板。偏特化的限制如下：","static","std::cout","std::size_t","std::string","struct","substitut","succe","succeed),","sv;","synthes","sz","t","t&","t(p,","t(t","t(t*,","t*","t*,","t1);","t2);","t::iter","t::iterator,","tail>;","templat","template::i>","template<>","templates.","template）替换模板的模板形参","tmp","tmp(*a);","tmp;","tupl","tuple,","tuple;","two","type","typenam","type）替换模板形参","u","uniqu","us","valid","value）替换非类型模板形参","versa,","vice","void","x","x1;","x;","x=42,","y=","{","}","};","上例中实例化后的函数之所以可以共存是因为函数签名不同，函数签名包含以下内容：","上例中的exchange()适用于简单类型，对于具有较大拷贝开销的array<>不是最好的实现，成员函数exchangewith()是更好的选择，但是却无法实现一个泛型算法。","上例还表明，全特化可以只是声明。一旦全特化被声明，编译器将不再考虑模板定义，即全特化的实例和普通类是一样的，唯一的不同就是需要对应一个模板定义，因此定义成员函数时不需要前缀template<>：","上述规则也适用于需要参数包展开的可变参数模板：","上述限制对应的例子如下：","为了实现泛型算法，需要提供一个特化版本，并在其中调用exchangewith()：","举个例子：","书中还有一个例子：","以前一节（16.2.2）中代码为例：解析f((int*)nullptr)时，两个函数模板实例化的结果分别为f(int*)和f(int*)，形参是一样的，参数列表分别为(a1)和(a2*)，用a2*代换第一个函数模板中的t后可以和参数列表2完全匹配，而用任何类型代换第二个函数模板中的t*都将得到指针类型，和参数列表1无法匹配，因此f(t*)更为特化。","但是在解析f1('a',","使用独特的构造值（a","使用独特的构造类型（a","使用独特的构造类类型（a","假设将16.2中的details/funcoverload1.cpp替换为下面的代码：","假设有下面两个模板：","偏特化的模板中不能包含默认实参","偏特化的模板实参列表应该和主模版的形参列表不同","偏特化的模板应该和主模板对应","偏特化的非类型模板实参应该是非依赖型的值或者其它的非类型模板形参","偏特化（partial","全特化时要为所有的模板形参提供模板实参（具有默认实参的模板形参除外）：","全特化类模板以template<>开始，且特化的结果可以和原始模板没有关系，例如：","函数名称所在的类和命名空间，如果是内部链接的名称，还包括翻译单元的名称","函数模板全特化时不能包含默认实参，因为会被视为一个新的函数定义：","函数模板和普通函数之间重载","函数模板的全特化","函数模板的全特化会考虑模板之间的特化偏序关系，例如：","函数模板的重载","函数的形参类型，如果是函数模板，则是代换前的类型","函数的非受限名称","函数签名","初始化x2时，t的推导类型为c&，折叠后模板构造函数的参数类型为c&，比拷贝构造函数更为匹配","初始化x3时，t的推导类型为c&&，折叠后模板构造函数的参数类型为c&&，和移动构造函数一致，优先匹配非模板函数","初始化x4时，t的推导类型为c","初始化x5时，t的推导类型为c","匹配规则的原文：","匹配过程为：","变量模板的偏特化","变量模板的全特化","可以仅对类的静态数据成员和成员函数进行特化，类中其余部分将仍然从模板定义生成：","可变参数应该在偏特化模板的最后","可变参数模板的重载","后记","在下面的例子中，quickexchange()并不能保证语义一致性：","在第一个quickexchange()后，p和a2.data指向同一缓冲区，如果保证语义一致性，应该这样写（虽然有bug）：","如果仅对类的静态数据成员和成员函数进行声明，应该写为：","如果函数模板2的推导类型和参数列表1完全匹配，但是反过来不能，则得到参数列表1的函数模板更为特化，否则两个函数模板之间不存在更为特化的偏序关系","如果是函数模板，还包括模板形参类型和模板实参类型","如果是函数模板，还包括返回类型","如果是成员函数，还会包含左值、右值引用限定符","并对外层类模板进行了特化：","当成员函数模板作为构造函数时，可能会比普通的构造函数匹配度更高：","当用int*实例化f(t)且用int实例化f(t*)时，将会得到两个相同的函数，这两个函数也是可以共存的，例如下面的代码：","当编译器已经通过模板定义生成了特化版本后，将不能再声明全特化版本：","当需要const转换或者引用转换时，如果普通函数不能精确匹配，则重载解析过程会尝试匹配函数模板；如果其余方面都相同，则重载解析过程会优先匹配普通函数，例如下面的代码：","成员模板的全特化","显示特化","显示特化一般是指将全部的模板形参代换为模板实参后得到的具体实现代码，也称为全特化（full","本节中首先定义了一个类模板：","本节开头定义的模板中还包含内嵌类，只可以逐次特化：","根据以下规则形成参数列表：","没有使用的具有默认实参的形参和没有使用的可变参数部分将被忽略","泛型代码无法解决的问题","特化和语义一致性","特化和重载","由于可变参数模板的一个形参类型会对应多个实参类型，匹配情况就会有些复杂：","看完整本书后再回头在看这里，觉得书上解释不是特别恰当。解析t(p,","第一个函数模板中的可变形参和第二个函数模板中的具有默认实参的第三个参数没有使用，所以将被忽略。根据模板参数推导规则，参数列表1为(a1*,","类模板的偏特化","类模板的全特化","考虑下面的例子：","虽然quickexchange(p1,","这就意味下面的的函数模板及实例化的结果可能可以共存：","通过特化提供相同的接口","重载的函数模板之间仅可能存在偏序的关系，也就是只有一个可能比另一个更为特化。重载解析的过程如下：","重载的函数模板的匹配规则","重载的函数模板的匹配顺序","重载解析过程将首先匹配普通函数：","静态数据成员的全特化声明虽然看起来像通过默认值进行初始化的定义，但是对于模板来说这被解释为声明。"],"2022-02-22-ch17-future-directions.html":["(full","(in","(ml,","(overloaded)","(std::meta::info","(t&","(t*&,","(t1","(x,",");","...","//","17","17.1","17.10","17.11","17.2","17.3","17.4","17.5","17.6","17.7","17.8","17.9",":","=",">","a,","add","anoth","argument","array","auto&&","b","b)","b);","b;","back","back;","backt;","befor","body)","chapter","class","consid","const&","constant","constexpr","copi","decltype(auto)","defaultcopy,","defaultinit,","defaultkill>","defaultswap,","definit","direct","dynam","end","error","error:","exactli","expans","f()","f();","field","first.","fix","front","front;","frontt;","futur","i);","if,","infot","init","instanti","instantiation,","instead","int","int);","integ","kill","lessthancompar","list","look","m","main()","match","max(a,","max(t","meet","metaprogramming）","ml)","mutat","mysort","out","p)","pack","pair","partial","pattern","primari","r","reflexpr(t);","report(t","report(x","requir","return","s;","same","select","size","special","specialize?","split","split;","std::cout","std::meta::data_members(infot))","std::meta::info","std::string","struct","swap","t","t2","templat","template,","template.","template<>","test(matrixlist","tupl","tuple;","turn","type","typenam","up,","us","valu","void","void是不完整类型，很多时候都需要单独考虑void：","way.)","words,","work","x","x);","x,","x;","{","}","};","不支持首部和中间位置的参数包展开：","为模板提供类型检查","主要用来提升编译速度，目前模板代码只能写在头文件中，虽然程序中可能只实例化很少的模板代码，但是却会对整个头文件进行词法分析和语法分析，引入模块后可以提前将头文件编译好以提升编译速度。","任意位置的参数包展开","但是在某种程度上有点像特化：","关键问题是不知道split模板该在哪一个t的位置对参数包进行分割。","函数模板偏特化","参数包操作","反射元编程（reflect","反射指通过代码获取程序的信息，例如类的非静态数据成员：","在当前的标准下，即使模板参数有默认值，除非其后面的模板参数均使用默认值，否则必须显示指定模板实参，未来可能纳入标准的一个规则是类似c结构体的指定初始化：","实例化类模板时将首先匹配主模板，在找到了主模版后，如果存在部分匹配的偏特化类模板，将实例化偏特化类模板。原文：","对于c风格字符串类型的非类型模板参数，由于会将字符串转换为地址，而两个相同的字符串也可能有不同的地址，这就很难区分实例化后的两个模板是否是同一个实例","对于函数模板，主模板之间可能重载，所以偏特化的模板该对应哪个主模板呢？","对于浮点型，也是很难确定两个实例是否相等，因为浮点数存储存在误差","当x不支持运算符时，编译器将给出更简单的报错信息。","感觉是不能在运行时计算的，因为编译后的这些信息都丢掉了。这些信息类似于调试信息，如果带着的话可执行文件将变大。","更多类型的非类型模板形参","更宽松的typename关键字规则","标准的发展方向是放宽typename关键字的限制，例如在之前不允许使用typename的地方可以使用typename关键字（c++11已经实现），以及在编译器可以推导出受限依赖型名称是类型时省略typename关键字（书中列出了几种正在被讨论的情形，但感觉只是语法糖而已，还是规范一些好）。","模块","模板实参指定初始化","模板的未来","由于constexpr的存在，上述代码将在编译时计算，最终结果类似于下面的代码：","目前只能通过sizeof...求出参数包中剩余参数个数，未来还可能支持下标运算来获取参数包中某个参数。","目前标准只支持尾部的参数包展开：","目前非类型模板参数只能是整型，标准未来可能支持字符串类型和浮点型：","类似函数重载一样，未来可能支持类模板的重载：","虽然模板报错时的信息都比较长（说的就是你g++），但是却很难判断是模板定义出错了，还是用户代码触发实例化的代码出错了，c++准备引入concept来解决这个问题：","规范化void","重载类模板"],"2022-02-23-ch18-the-polymorphic-power-of-templates.html":["!=","\"conceptsreq.hpp\"","\"coord.hpp\"","\"dynahier.hpp\"","\"myclass.hpp\"","\"statichier.hpp\"","#includ","&&","(geoobj","(geoobj1","(if","(po","(std::size_typ","(std::vector","(t","(t1","(unsign","...","//","0;","18","18.1","18.2","18.3","18.4","18.5","18.6","18.7",":","=","=>",">","absolut","abstract","accord","algorithms.","any):","auto","base","between","c","c,","c.abs();","c1,","c1;","c2;","call","center","center_of_gravity()","chapter","circl","circle::draw()","class","coll","coll)","coll.end())","coll.push_back(&c);","coll.push_back(&l);","coll.push_back(l);","coll;","collect","common","comput","concept","concept是指模板实参类型所需要支持的接口操作：","concret","const","const&","const;","coord","coord;","coordin","default;","deriv","differ","distanc","distance(c1,c2);","distance(geoobj&,geoobj&)","distance(geoobj1&,geoobj2&)","distance(l,c);","draw","draw()","drawelem","drawelems(coll);","effici","element","elems)","error:","find","gener","geometr","geoobj","geoobj2","graviti","heterogen","homogen","i(geoobj&)","i=0;","idraw();","insert","int","kind","l;","library，stl）是泛型编程的典型代表。stl中定义了算法和容器，容器是类，但是算法并不是容器类的成员函数，所以它们可以被应用于各种容器，并且用迭代器的类型进行了限制，这也是concept的一种体现。","line","line::draw()","main()","maximum","mydraw","mydraw(c);","mydraw(geoobj&)","mydraw(l);","obj)","obj.draw();","object","object:","ok:","override;","paramet","pattern）将接口与实现分离开。抽象类中包含一个实现类，抽象类通过该实现类提供具体的功能。可以简单理解为抽象类提供了一个功能，但是这个功能需要分若干步骤实现，实现类接口定义了每个步骤。","po","poly/conceptspoly.hpp","poly/conceptsreq.hpp","poly/dynahier.hpp","poly/dynapoly.cpp","poly/printmax.cpp","poly/statichier.hpp","poly/staticpoly.cpp","polymorph","posit","possibl","power","print","printmax","printmax(c1);","printmax(c2);","program","public","public:","represent","requir","requires(t","return","std::cout","std::list","std::max_element(coll.begin(),coll.end());","std::vector","t2","templat","two","type","valu","virtual","void","void;","x)","x.center_of_gravity()","x.draw()","x1,","x1.center_of_gravity()","x2)","x2.center_of_gravity();","{","}","};","};\\","~geoobj()","代码体积小","代码可以被编译为二进制，源码可以不公开","代码运行速度会快一些","使用模板可以得到上例的静态多态版本：","内置集合类型的处理很方便，但是类类型的通用接口不能通过统一的接口定义","动态多态","动态多态和静态多态的对比","动态多态是使用同一种方法在运行时调用不同的代码，书中给出的是最为熟知的画图形的例子：","动态是指在运行时通过函数指针调用正确的函数","区别","后记","在c++中，泛型编程基本等价于模板编程，就像面向对象编程基本等价于使用虚函数一样。c++标准模板库（standard","在传统的设计模式中，桥接模式（bridg","在动态多态下，抽象类中包含的是实现类的指针，而在静态多态下，抽象类中包含的是实现类的对象。","处理派生类集合的代码很优雅","未绑定是指参与多态的类型的接口是不固定的","术语","模板和多态","没有完整实现接口的类型也可以参与多态","泛型编程","泛型编程是指用泛化的参数来为算法提供抽象的表达。原文：","绑定是指参与多态的类型的接口由基类固定","通过模板实现的多态是未绑定的（unbounded）和静态的（static）","通过继承实现的多态是绑定的（bounded）和动态的（dynamic）","静态多态","静态多态下的设计模式","静态是指在编译时由编译器解析要调用的函数"],"2022-03-01-ch19-implementing-traits.html":["!=","!isarrayt::valu","!isclasst::value;","!isfunctiont::valu","!isfundat::valu","!ispointert::valu","!ispointertomembert::valu","!isreferencet::valu","!std::is_same::value,","\"","\"../typelist/typelist.hpp\"","\"accum1.hpp\"","\"accum6.hpp\"","\"accumtraits2.hpp\"","\"accumtraits3.hpp\"","\"accumtraits4.hpp\"","\"boolconstant.hpp\"","\"decay.hpp\"","\"elementtype.hpp\"","\"hasmember.hpp\"","\"hasplus.hpp\"","\"hastype.hpp\"","\"hello\")","\"hello\")结果为false，这是因为以42和hello作为参数调用valuet()时无法进行推导。","\"ifthenelse.hpp\"","\"isfunda.hpp\"","\"islvaluereference.hpp\"","\"isrvaluereference.hpp\"","\"issame.hpp\"","\"isvalid.hpp\"","\"removeconst.hpp\"","\"removevolatile.hpp\"","\"rparam.hpp\"","\"rparamcls.hpp\"","\"sumpolicy1.hpp\"","\"sumpolicy2.hpp\"","\"templates\"","#defin","#endif","#ifndef","#includ","#undef","&&","()","())>>","();","(*)(a))","(*)(args...);","(*)(args...,","(...)","(a","(array","(beg","(int","(isfundat::value)","(iter","(may","(myclass1","(num,","(rare)","(refer","(start","(t","(t1","(t1&","(there","(typenam",")","))",");","){};","*=","*beg);","*beg;","*start;","+","++beg;","++start;","+=",",","...","...)","...);","//","0","0;","1","1,","108","19","19.1","19.1.1","19.1.2","19.1.3","19.10","19.11","19.2","19.2.1","19.2.2","19.2.3","19.2.4","19.3","19.3.1","19.3.2","19.3.3","19.3.4","19.3.4节中的traits/plus2.hpp解决了t1和t2需要默认构造才能相加求和的问题，但是还存在+未定义的问题，例如对于如下代码：","19.4","19.4.1","19.4.2","19.4.3","19.4.4","19.5","19.6","19.6.1","19.6.2","19.6.3","19.6.4","19.7","19.7.1","19.7.2","19.7.3","19.8","19.8.1","19.8.2","19.8.3","19.8.4","19.8.5","19.8.5节中的判断枚举类型的模板不太容易直接实现，类似的还有标准库中的std::is_union模板，为此编译器提供了一些支持。","19.9","19.9.1","2,","3","3,","4,","5",":","::first:","::size:","::type).name()","::valu","::value_type:",";","=",">",">(nullptr)",">)",">::type",">::type;",">::valu","[](auto","[](auto&&...","\\","acct","accum","accum()","accum_hpp","accumul","accumulationtrait","accumulationtraits::acct;","accumulationtraits::zero;","accumulationtraits;","accumulationtraits>","actual","ad","add","add_rvalue_reference_t","addab(array","addlvaluerefer","addlvaluereferencet","addlvaluereferencet::type;","addrvaluerefer","addrvaluereferencet","addrvaluereferencet::type;","allow","altern","always,","ambiguous:","anoth","approach","arg","args)","args...","args:","args为转发引用。当以typet类型或者typet类型的临时对象调用isdefaultconstructible时，推导结果为typet和typet。由于上述return语句的最后是{}，所以isdefaultconstructible返回的将是isvalidimpl<>模板的返回类型创建的临时对象，也就是std::true_type或者std::false_type类型的临时对象。","argument","arr[42];","array","array::type>","arraya","arraya,","arrayb)","arrayb);","arrayb;","arrays,","associ","assum","at::acct","at::zero();","auto","auto&&","aux(to)","aux(to);","averag","avoid","away):","b","b)","baset","be","beg,","better.","between","bigint","bigint;","bigint{0};","bool","bool_const","bool_constant<>","boolconst","boolconstant;","bound","c","c)","c++","c++17","c;","call","case","chapter","char","char)","char,","char>::value;","charact","characterist","check","choos","clarity.","class","classt","clearli","code","comma","compil","comput","concret","cond","consequence:","consid","const","const&","const&)","const&);","const&,","const&>;","const*","const:","const;","constexpr","constructible)","constructible,","constructor","context","correspond","cout","creat","cx","decayt","decayt::type;","declar","decltype((void)&x.first)","decltype((void)decltype(valuet(x))())","decltype((void)decltype(valuet(x))()))","decltype((void)decltype(valuet(x))())),","decltype((void)valuet(x).first)","decltype(args)&&...","decltype(hasfirst(std::declval()));","decltype(hasless(std::declval(),","decltype(hassizetype(std::declval()));","decltype(isvalidimpl","decltype(isvalidimpl(nullptr)){};","decltype(std::declval()","decltype(t1()","decltype(test(nullptr));","decltype(valuet(x)","decltype(valuet(x))::size_typ","decltype(x","decltype,","declval","declval()","deduct","deep","default","defin","define_has_member(first);","define_has_member(member)","define_has_member(size);","define_has_type(char_type);","define_has_type(memtype)","define_has_type(value_type);","definit","delete;","depend","desired.","differ","doesn’t","double)","double;","due","dure","each","element","elementt","elementt;","elementt>","ellipsi","end)","error:","error?:","evaluated:","even","explicit","explicitli","extra","f","f(args...)","f(t)","f)","f:","fail","failur","fallback","fallback:","fals","false;","false_typ","false_type,","falsetyp","falsetype)","falsetype;","first","foo","foo(42);","foo(7.7);","foo(mc1,mc2);","foo(t","foo_cor","foo_core(mc1,mc2)","foo_core(std::forward(p1),std::forward(p2));","fooimpl(42,","fooimpl(t,","form","friendli","function","fundament","gener","hasbegint","hasbegint().begin())>>","hasfirst","hasfirstt","hasless","haslesst","haslesst()","hasmembert_##memb","hasmembert_##member>","hasplust","hasplust()","hassizetyp","hassizetypet","hassizetypet>","hastypet_##memtyp","hastypet_##memtype>","hasvarioust","hasvarioust().begin()),","helper","helper:","here","hold","however,","identityt","ifthenels","ifthenelse::valu","ifthenelse_hpp","ifthenelset","ifthenelset::max(),","ifthenelset::type;","ifthenelset::value,","ignor","ill","impl.","implement","init","inlin","instanti","instead","int","int)","int,","int:","int;","integ","intention","interpret","isarrayt","isarrayt::valu","isclasst","isclasst>","isconvert","isconvertiblehelp","isconvertiblehelper::typ","isconvertiblet","isconvertiblet::type;","isconvertiblet::value;","isconvertiblet<>","isdefaultconstruct","isdefaultconstructible(type)","isdefaultconstructiblehelp","isdefaultconstructiblehelper::typ","isdefaultconstructiblet","isdefaultconstructiblet::valu","isdefaultconstructiblet>","isdefaultconstructible是一个泛型lambda表达式，所以auto&&...","isenumt","isfunctiont","isfunctiont::value>","isfundat","islvaluereferencet","islvaluereferencet,","isnothrowmoveconstructiblet","isnothrowmoveconstructiblet()))>>","isn’t","ispointert","ispointertomembert","isreferencet","isrvaluereferencet","issam","issamet","issamet(nullptr)),","issamet::value;","issamet<>判断两个类型是否相同：","issamet{});","isvalid","isvalid([](auto","isvalid([](auto&&","isvalidimpl(...);","isvalidimpl(void*);","isvoidt::value>;","iter","it’","known","lambda","left","long","long)","long,","long;","lvalu","macro","main()","make","makeunsignedt","makeunsignedt,","mc1;","mc2;","mean","meant","member","membert","mk_funda_typ","mk_funda_type(bool)","mk_funda_type(char)","mk_funda_type(char16_t)","mk_funda_type(char32_t)","mk_funda_type(double)","mk_funda_type(float)","mk_funda_type(long","mk_funda_type(sign","mk_funda_type(std::nullptr_t)","mk_funda_type(t)","mk_funda_type(unsign","mk_funda_type(void)","mk_funda_type(wchar_t)","multpolici","myclass1","myclass2","myclass2;","n;","name)","namespac","need","needed.","noexcept;","nullptr_t","num+5)","num[]","number","occur","ok","operator()","operator+","operator+(array","operator+,","option","optional,","otherwis","out:","overload","overload.","p1,","p2)","pack).","pack.","paramet","parameter)","parameters:","paramst","pars","partial","pass","pfiie","pi","pick","plusresult","plusresultt","plusresultt.","plusresultt::type;","point","pointer","pointer:","polici","policy::accumulate(total,","practic","previou","primari","print","printdecayedtype()","printdecayedtype();","printelementtyp","printelementtype(arr);","printelementtype(s);","printparametertype(&f);","printparametertype(void","prior","private:","problem","product","program","provid","public","public:","r","r(args,","r(args...","r;","refer","reli","remark","removeconst","removeconstt","removeconstt::type;","removeconstt::type>","removecv","removecvt","removecvt::type;","removecvt<>通过removevolatilet<>移除了volatile限定，还通过继承的方式继承了removeconstt::type。","removerefer","removereferencet","removereferencet::type;","repres","return","rparam","rparam::typ","rparam_hpp","rvalu","s","s()","s;","same","second","sfina","sfinae’d","short)","short,","size","size_typ","sizeof(t);","sizeof,","skip","smallestintt","somecompilerspecificnam","somecompilerspecificname();","sometim","speaking,","special","specialization,","specialization:","specif","specifi","start,","static","std","std::bool_constant()))>","std::cout","std::decay_t::size_typ","std::declval()));","std::declval());","std::declval())>>","std::declval的定义如下：","std::false_typ","std::integral_constant::valu","std::is_trivially_move_constructible::value),","std::iterator_traits::value_type;","std::list","std::make_unsigned::type;","std::size_t","std::size_t;","std::true_typ","std::vector","std;","std=c++17，同时hasless(42,","strictli","struct","style","substitut","substituted,","sum","sumpolici","sumpolicy,","sumpolicy_hpp","syntact","t","t&&;","t&;","t)","t*;","t,","t.","t2","t2());","t::difference_type,","t::iterator>>","t;","take","templat","template()(std::declval()...))>","template()))>","template,","template:","template::valu","template::value>","template<>","template>","test","test()","test()中不能使用t作为模板参数的原因在于isdefaultconstructiblet::value会先以参数t实例化类模板，在这个过程中会实例化test()的声明，如果t不能被默认构造，将会出现编译错误，使用u将实例化推迟到了引用value的时刻，也就是利用sfinae规则的时刻。原文：","test(...);","test(void*);","therefor","third","total","total,","total;","total{};","trait","traits/accum0.hpp","traits/accum1.cpp","traits/accum1.hpp","traits/accum2.hpp","traits/accum3.hpp","traits/accum5.hpp","traits/accum6.cpp","traits/accum6.hpp","traits/accum7.hpp","traits/accumtraits2.hpp","traits/accumtraits3.hpp","traits/accumtraits4.hpp","traits/accumtraits4bigint.hpp","traits/addreference.hpp","traits/boolconstant.hpp","traits/decay.cpp","traits/elementtype.cpp","traits/elementtype.hpp","traits/hasbegin.hpp","traits/hasless.hpp","traits/hasmember.cpp","traits/hasmember.hpp","traits/hasplus.hpp","traits/hassizetype.hpp","traits/hastype.cpp","traits/hastype.hpp","traits/hasvarious.hpp","traits/ifthenelse.hpp","traits/isarray.hpp","traits/isclass.hpp","traits/isconvertible.hpp","traits/isdefaultconstructible1.hpp","traits/isdefaultconstructible2.hpp","traits/isdefaultconstructible3.hpp","traits/isenum.hpp","traits/isfunction.hpp","traits/isfunda.hpp","traits/isfundatest.cpp","traits/islvaluereference.hpp","traits/isnothrowmoveconstructible1.hpp","traits/isnothrowmoveconstructible2.hpp","traits/ispointer.hpp","traits/ispointertomember.hpp","traits/isreference.hpp","traits/isrvaluereference.hpp","traits/issame.cpp","traits/issame.hpp","traits/issame0.hpp","traits/isvalid.hpp","traits/isvalid1.cpp","traits/isvalid2.cpp","traits/passbyvalue.cpp","traits/plus1.hpp","traits/plus2.hpp","traits/plus3.hpp","traits/removeconst.hpp","traits/removecv.hpp","traits/removereference.hpp","traits/rparam.hpp","traits/rparam1.cpp","traits/rparam2.cpp","traits/rparamcls.hpp","traits/sizeof.cpp","traits/smallestint.hpp","traits/sumpolicy1.hpp","traits/sumpolicy2.hpp","traits::acct;","traits::zero();","traits）","tri","true","true;","true_typ","true_type,","truetyp","truetype)","truetype;","type","type)","type)和hasless(type,","type:","typelist;","typenam","types","types:","typet","typet{};","u,","u:","unbound","undefin","unevalu","unexpand","unknown","unless","unsign","unsignedt","unwrap","us","val;","valid","valu","value)","value.","value;","valuet(typet);","vararg","variad","void","void;","void_t","voidt","volatile;","vt","way","whether","within","work,","wrap","wrapper","x)","x,","y)","yield","zero","zero()","{","{}调用isvalid()返回的lambda表达式，代换后的结果为：","||","}","});","};","一点点分析。isdefaultconstructible和isvalid()都是常量表达式，可以在编译时计算。isdefaultconstructible是以lambda表达式[](auto","一般不提供默认模板实参，需要显示指定","一般和其它模板参数关系不大","一般和模板参数密切相关","一般实现在普通类或者类模板","一般是类型或者常量","一般来说是不能转换为数组类型和指针类型的，所以还需要如下特化：","一般通过成员函数实现","一般通过类型特征模板获取","上面的代码无法处理重载函数（可能是因为区分确定两个重载函数的地址），但是可以通过调用的方式来侦测：","下面是一个利用分支模板选择容纳n的最小整型的例子：","下面的偏特化模板可以获取容器中元素的类型：","不过在c++17中，对于自定义类型还可以写为inline的形式：","为了解决这个问题，需要把所有可能的失败挪到代换相关上下文中，而不是在函数体或者类定义中：","为每个类型成员都定义上述的模板过于麻烦了，可以使用宏来简化：","也可以用来检测多个条件：","也可以通过std::declval来实现上述类型特征模板（原理上都是产生某种类型的临时对象）：","书中的是“非其它”的实现方式：","传递只读类型的参数","但是c++只允许类的静态常量数据成员是整型或者枚举类型，对于浮点型，应该使用constexpr；对于自定义类型，只能通过静态函数的方式：","但是不便之处在于编译器无法进行类型推导了，这是因为rparam::type不是可推导的上下文，但是可以通过包装器（wrapper）包装一下：","但是这种方式要求t1和t2可以被默认构造，为了消除这个限制，可以使用std::declval：","但这还是可能报错，原因是虽然重载版本更为匹配，但是标准并没有规定此时是否需要实例化模板，如果实例化了，就有可能报错。原文：","使用19.4.2节中偏特化的方法可以侦测类中是否定义了size_type类型：","使用到的方法和19.4.1节中的类似。书中的代码有错误，调用test()时应该提供两个模板实参，这里是修改后的正确版本。","使用方式如下：","使用方法为：","使用泛型lambda表达式侦测类型成员","例如对于加法，最简单的实现为：","侦测不抛出异常的成员","侦测任意类型成员","侦测类型成员","侦测类成员","侦测非类型成员","值特征","假设有一个对容器中元素累加的模板：","其它类型特征模板","内置类型数量较少，可以通过穷举的方式提供所有的特化版本：","函数可能包含任意数量的参数，为此需要为类型特征模板提供一个参数包：","分别使用该模板对整型数组和字符进行累加：","分支型模板","判断内置类型","判断复合类型","判断枚举类型","判断类型是否相同","判断类类型","前面的累加模板都是通过指针实现的，标准库中更通用的方式是通过迭代器（书中的例子还是会导致溢出和截断）：","另一种基于谓词模板的判断方式如下：","另一种方式是为不同的类型t关联一个返回值的类型，这个相关联的类型可以视为t的类型特征。原文：","可以不作为模板参数传递","同时移除const和volatile限定：","同样的技巧也可以用于检测表达式：","后记","向函数传递只读类型的参数有两种方法，分别为传值和传常量引用，可以通过下面类型特征模板简单判断哪种方式开销更小：","和19.6.2节中使用宏定义模板最相近的方法是使用19.4.3节中的isvalid()：","因为这个模板只用在decltype和sizeof，所以标准库并不提供定义。原文：","固定类型特征","在作为模板参数的情况下一般具有默认值，调用时基本不需要提供模板实参，见19.1.3","在推导返回类型的过程中，如果a和b不能相加，则编译器会因为实例化plusresultt::type失败报错，因为此时是在实例化类成员的过程中，而不是在代换的过程中，所以sfinae规则并不适用。原文：","基于sfinae规则实现的偏特化也可以用于判断类型是否可以被默认构造：","基于sfinae规则实现的函数重载可以用于判断类型是否可以被默认构造：","基于sfinae规则实现的泛型lambda表达式也可以用于判断类型是否可以被默认构造，但是很复杂：","基于sfinae规则的模板还可以用来侦测某个类中是否定义了某个成员。","基于sfinae规则的泛型lambda表达式","基于sfinae规则的类型特征模板","基于sfinae规则的类型特征模板可以用来判断是否可以进行类型转换：","大多数情况下要通过模板参数传递才能发挥作用","如果t类型没有移动构造函数（或者拷贝构造函数），则表达式t(std::declval())是非法的，也就无法进行编译。借鉴19.6.3中的方法，可以在侦测移动是否抛出异常之前侦测是否可以移动：","如果想要获取某种整型的无符号类型，可以将模板写为下面的形式：","如果要判断某操作是否会抛出异常，例如移动构造函数是否会抛出异常，可以使用下面的模板：","如果要处理const、volatile和引用等修饰符，还需要很多特化版本，具体见书。","实现类型退化","对于为什么需要第二个可变参数特化模板我也没看懂。原文：","对于值特征，也需要显示写出::value，为了简便可以使用变量模板来代替：","将布尔值转换为类型","将布尔值转换为类型的好处是可以在编译时实现函数分发，相比于向函数中传递true和false从而实现在运行时执行不同分支的代码的方式来说会更快一些（我觉得是这样子）：","将类型特征作为模板参数","并用如下代码改写模板：","序列累加的例子","引用折叠规则适用于这里。由于void是不完整类型，所以需要实现以下特化（这里只是addlvaluereferencet<>的例子）：","引用类型","当模板参数为传值类型时，会发生类型退化：","当都通过模板参数传递类型特征和策略时，一般将策略放在类型特征之前，这是因为策略可能不使用默认模板实参，而类型特征一般使用默认模板实参。","成员指针类型","指针类型","提取策略的类型特征模板","数组类型","标准库中的类型特征模板","根据某种条件实例化主模板或者特化的模板称为分支模板，可以统一写为下面的形式：","模拟类型退化的模板为：","添加引用","然后将模板修改为：","现在只需要确定return后面的decltype的推导结果就可以了。注意到这是一个函数调用，参数为nullptr，将匹配isvalidimpl(void*):","用同样的方法也可以侦测类中的数据成员和成员函数：","由于char所表示的数据范围较小，累加的过程可能存在溢出或者截断，所以会出现负值。当然可以通过将返回类型也作为模板参数解决这个问题，但是会比较麻烦。","由于初值仍然为0，所以代码并不正确，有两种方法可以解决这个问题，一个是将初值作为策略的一部分，还有就是仿照标注库std::accumulate将初值作为参数。","移除const限定：","移除引用","移除限定符","第1个参数包含泛型lambda表达式，编译器将创建一个重载了函数调用运算符模板的闭包类型：","第2个模板参数类型为typet&&或者typet&&","第3个模板参数是decltype的推导结果，推导的对象为std::declval()(std::declval()...)。std::declval()会实例化闭包类型，但是并不会实例化函数调用运算符成员模板。std::declval()...将创建一个typet或者typet类型的临时对象，并用该临时对象作为参数调用闭包类型，这时才会实例化闭包类型中的函数调用运算符成员模板，该模板参数类型为typet或者typet。在推导返回类型的过程中，decltype(valuet(x))的结果为int或者int&，当尝试默认构造引用类型时就会失败，编译器转而寻求另一个版本的isvalidimpl<>，这将使得isdefaultconstructible返回std::false_type类型的临时对象。","策略还可以实现为类模板，然后将其作为模板的模板参数：","策略（policy）表示函数或者类型中可以配置的行为（个人认为重点在可配置）","简单的解决办法是再实现一个重载版本：","类中一般都包含成员，所以可以通过成员指针来判断类类型：","类型修饰模板可以移除和添加类型中的引用、移除限定符和实现类型退化（decay）。","类型修饰模板（transform","类型函数","类型函数是以类型为参数并返回一个类型或者值的函数，如果将sizeof视为函数的话，那么其就是一个类型函数，下面的代码可以认为是sizeof的函数版本：","类型分类","类型特征也可以作为模板参数：","类型特征可以通过模板特化实现：","类型特征和策略","类型特征和策略的区别","类型特征模板","类型特征模板也可以用来判断类型是内置类型、指针类型还是类类型。","类型特征模板的缺点","类型特征模板起作用的原因是定义了类型成员type，所以不得不显示的写出::type来获取类型特征，为了简便可以使用别名模板来代替：","类型特征的解决办法很好的解决了返回类型的问题，但是却不能保证初值total是一个合理值，为此可以再为类型t提供值特征：","类型特征（trait）表示模板参数的额外属性：","累加模板的过程可以抽象为遍历序列中的每个元素，并和当前得到的累加值进行加法求和，这里将求和操作称为策略（policy），因此可以将模板策略参数化，通过模板参数来控制求和、求积的过程：","组合使用类型特征和策略","结果类型模板","结果类型模板给出多个类型的运算结果。","编译器推导返回类型时，会先实例化plusresultt，如果第三个参数推导结果为true，则实例化主模板，代换顺利结束；否则实例化特化版本，由于特化版本没有type成员，则函数模板的实例化以sfinae规则结束。","编译基于sfinae规则的类型特征模板（sfina","编译试了下，必须要添加编译选项","获取容器中元素类型的模板","识别函数类型","谓词模板","谓词模板接受多个类型参数，返回一个布尔值。","输出为：","输出结果为：","这就会得到正确的输出：","这样issamet<>就可以通过继承的方式实现：","这里的复合类型是指指针类型、引用类型、成员指针类型和数组类型：","通过sfinae规则实现偏特化","通过sfinae规则实现函数重载","通过下面的模板可以实现将布尔值转换为类型：","通过类模板实现策略","通过迭代器实现累加","附录d中介绍了标准库中类型特征模板。"],"2022-03-02-ch20-overloading-on-type-properties.html":["!hashash>>","!israndomaccessiterator>","\"enableif.hpp\"","\"iscontextualbool.hpp\"","\"isconvertible.hpp\"","\"lessresult.hpp\"","\"min.hpp\"","#includ","&&","(","());","())>*);","(auto&","(best)","(element.first","(intention","(iterator&","(n","(which","(y","++x,","++x;","+=","...","//","0","0)","0;","1)>*);","20","20.1","20.2","20.3","20.3.1","20.3.2","20.3.3","20.3.4","20.4","20.4.1","20.4.2","20.5","20.6","20.7",":",":中可以作为隐式转换，称为特定语境下的类型转换（contextu",";","=","==",">","?","access","add","advanc","advance;","advanceiter()也可以借助类模板实现：","advanceiter(inputiterator&","advanceiter(iterator&","advanceiter(randomaccessiterator&","advanceiterimpl(iterator&","advanceiterimpl(x,","algorithm","appli","argument)","array&","base","basi","best","bestmatchinset","bestmatchinset<>的功能为找到最匹配的类型，这可以借助函数的重载机制：","bestmatchinsett","bestmatchinsett::type;","bidirect","bidirectional,","bidirectional_iterator_tag","bool","bool>,","captur","case","case:","chapter","class","class,","collect","complet","concept","const","const&","const&>","const;","constant","constexpr","constexpr(isbidirectionaliterator)","constexpr(israndomaccessiterator)","construct","contain","container()","container(iter","convert","converted），而isconvertible<>是借助decltype中的函数调用判断是否可以进行转换的，所以x7中的类型转换不起作用，为此需要引入iscontextualboolt<>：","convertible:","correspond","data)","data.back().second;","data.push_back(pair(key,","data:","data;","data[key];","declar","decltype(matchoverloads::match(declval()));","decltype(std::declval()","decltype(test(nullptr))::value;","declval()","defin","dictionari","dictionary>>","differencetyp","dispatch","distanc","each","easi","element","element.second;","ellipsi","employ","enableif","enableif,","enableif<>一般写在函数模板的返回类型处，对于没有返回类型的函数，enableif<>可以作为默认的模板实参：","enableif>","enableif>,","enableift","enableift::type;","failure.","false_typ","find","first,","forward_iterator_tag","function","function(s)","function.","general,","given","handl","hasless","identity;","implement","indic","inherit","input","input_iterator_tag","instanti","introduc","isbidirectionaliter","iscontextualbool","iscontextualboolt","iscontextualboolt::value;","isconvert","isconvertible::iterator_category,","isinputiter","israndomaccessiter","iter","iterators:","key)","key:","key;","last);","lessresult","lessresultimpl","lessresultimpl::value>","lessresultt","lessresultt::type;","linear","list.","long","make","map","match","match()","match(...);","match(t1);","matched:","matches,","matchoverload","matchoverloads::match;","matchoverloads;","matchoverloads<>","matchoverloads<>通过递归的方式重载了多个match()，每个函数接受不同类型的参数。当在decltype对match()调用进行推导的过程中，就可以实现最佳匹配。个人认为实例化的过程应该为：","min(t","n","n)","n,","n;","namespac","new","next","none","noth","object","on","oper","operator()","operator[](key","output_iterator_tag","overload","overload:","paramet","partial","pass","posit","primari","private:","produc","properti","public","public:","pull","random","random_access_iterator_tag","recurs","recursively,","rel","remain","requir","result","return","safe","search","select","sequence:","set","special","specializations.","specialization）是为某种特定类型设计的算法，通常比泛型算法性能高。在定义了特化的算法后，一般只需借助重载解析规则便可以自动调用特化的算法，例如：","static","std","std::bidirectional_iterator_tag,","std::bidirectional_iterator_tag>;","std::false_typ","std::input_iterator_tag)","std::input_iterator_tag,","std::input_iterator_tag>;","std::iterator_traits::difference_type;","std::iterator_traits::iterator_category());","std::random_access_iterator_tag)","std::random_access_iterator_tag>;","std::random_access_iterator_tag>>","std::true_typ","struct","subscript","summarize,","swap(array&","swap(t&","swap(x.len,","swap(x.ptr,","t","t&","t1","t;","tag","templat","template::iterator_category,","template<>","template>>","templates）。下面的代码不是可安全实例化的，因为无法保证类型t支持运算符，也无法保证结果可以转换为bool：","test(...);","test(identity()","time","tmp(x);","tmp;","trait","translat","true_typ","type","type.","typenam","typeoverload/advance2.hpp","typeoverload/advance3.hpp","typeoverload/container1.hpp","typeoverload/container4.hpp","typeoverload/enableif.hpp","typeoverload/iscontextualbool.hpp","typeoverload/lessresult.hpp","typeoverload/min.cpp","typeoverload/min2.hpp","typeoverload/min3.hpp","types,","types.","types...:","undefined):","unordered_map","us","valu","value&","value()));","vector>","void","x","x,","x1","x3报错的原因在于运算符不能比较两个临时对象，x4报错的原因在于没有匹配的运算符，x6报错的原因在于notboolconvertible不能隐式转换为bool类型。","y","y)","y.len);","y.ptr);","y;","{","}","};","《stl源码剖析》一书中介绍了大量有关这部分的内容。","两个advanceiter()模板只有模板参数名字不同，编译器将无法解析。","为了保证类型t支持运算符，需要实现lessresultt<>：","书中关于这一部分的解释：","以某些类型调用std::copy时最终会调用std::memcpy或者std::memmov","以某些类型调用std::fill时最终会调用std::memset","但也不是所有的特化算法都可以简单的转换为函数模板，例如下面的迭代器前进的例子：","使用concept可以最简单的实现启用和禁用模板，但可惜的是还没有支持：","借助c++17的编译时if可以避免使用enableif<>：","可安全实例化的模板","后记","启用和禁用函数模板","启用和禁用特化的类模板","和20.3.2一样，可以通过引入默认模板参数来匹配特化的类模板，本节中以实现一个字典为例：","回到第1步，引用bestmatchinsett::type得到最终结果","回到第2步，decltype中的推导会根据重载解析规则选择最匹配的match()，最终推导出bestmatchinset<>::type的类型","基于类型属性的类模板特化","基于类型属性的重载","多条件下的算法特化","如果将每一个模板参数都使用enableif进行限制，则当模板代换失败时sfinae规则会起作用，不会导致编译失败，这样的模板称为可安全实例化的模板（instanti","实例化bestmatchinset<>触发实例化bestmatchinsett<>","实例化bestmatchinsett<>时会检查type的定义，这会触发decltype中的推导，从而触发实例化matchoverload","实例化matchoverloads会递归实例化基类，然后在每个基类中定义match()，并在派生类中拉取基类的match()","对于双向迭代器，可以在线性时间内前进和后退","对于输入迭代器，只能在线性时间内前进","对于随机访问迭代器，可以在常量时间内前进和后退","将enableif作为默认模板参数","并改进min()的定义：","引入迭代器标签后就可以正确解析了：","最有意思的是x7。explicit修饰的类型转换只在条件表达式、逻辑运算符和条件运算符?","有些迭代器还可以后退，所以现在的需求变成了：","标准库中基于类型属性的重载","标准库中迭代器的分类如下：","注意同时也要禁用其它重载函数，否则会导致模糊调用。","测试代码：","算法特化","算法特化（algorithm","编译时if","通过enableif<>可以实现启用和禁用函数模板，原理依然是sfinae规则：","通过标签匹配类模板","通过标签实现函数模板的分发","避免调用平凡的析构函数","除了20.2中已经提到的迭代器分类外，标准库中基于类型属性的重载还包括："],"2022-03-03-ch21-templates-and-inheritance.html":["!(lh","!(x1","!=","\"","\"\\n\"));","\"gregor\"}","\"josuttis\"},","\"objectcounter.hpp\"","\"vandevoorde\"},","#defin","#endif","#ifndef","#includ","&","&&)","&(*lhs)","&(*rhs);","&person::firstname),","&person::lastname),","()","(*iter).*member;","(array","(base","(deriv","(if","(int)","(iteratorfacad","(objectcount","(t","(x","(x1","*","*()","*static_cast(this);","++()","++(int)","++count;","++iter;","+=(difference_typ","...","//","//input","0,","0;","1","2","21","21.1","21.1.1","21.1.2","21.2","21.2.1","21.2.2","21.2.3","21.3","21.3.1","21.3.2","21.4","21.5","21:",":","::live()","=","==",">()",">foo();",">mem;",">next;",">value;","[](difference_typ","a,","a,b,c,d","access","address","advance(iterator&","alia","alloc","allow","ambigu","anoth","any)","areequal(a,","areequal(array","array","asderived()","asderived().dereference();","asderived().increment();","asderived();","associ","author","auto","avoid","b)","b);","b,","base","base&","base()","base(b),","base*","base::*","base::foo()","base_member_pair_hpp","basememberpair","bc;","bidirect","blue","bool","breadslic","breadslicer>","c++","c++,","call","category;","caus","chapter","char","class","class,","color","compar","const","const&","const&)","constructor","convers","copi","core","count","count;","creat","current","current(current)","data","declar","decrement(iterator&","default","defaultpolici","defaultpolicy1;","defaultpolicy2;","defaultpolicy3;","defaultpolicy4;","defaultpolicyarg","defin","definit","delet","depend","dereference()","dereference(iter","deriv","derived&","derived::foo()","derived;","destructor","difference_typ","discrimin","discriminator,","discriminator<>","distanc","distance;","don’t","doubl","empti","empty,","emptyclass","emptythre","emptytoo","equalitycompar","equals(iterator&","equals(listnodeiter","equals(projectioniter","error:","even","exist","first()","firstname;","foo()","foo(s);","foo(w);","foo(wrapp","friend","green","gregor","have","i)","i,","i.advance(n);","i.decrement();","i.dereference();","i.increment();","il,","il.equals(ir);","implement","implicit","increment()","increment(iterator&","info_and_storage;","inherit","inherit/basememberpair.hpp","inherit/countertest.cpp","inherit/ebco1.cpp","inherit/ebco2.cpp","inherit/empty.cpp","inherit/equalitycomparable.cpp","inherit/iteratorfacadeaccessskel.hpp","inherit/iteratorfacadeskel.hpp","inherit/listnode.hpp","inherit/listnodeiterator0.hpp","inherit/objectcounter.hpp","inherit/person.hpp","inherit/projectioniterator.cpp","inherit/projectioniteratorskel.hpp","inherit/virtual.cpp","inherit/wrapper.cpp","inlin","input","int","int;","interfac","interface:","ir)","iter","iter(iter),","iter,","iter;","iterator&","iterator_categori","iteratorfacad","iteratorfacade,","iteratorfacade;","iteratorfacade<>通过下面的方式调用派生类中的实现：","iteratorfacadeaccess","iteratorfacadeaccess::dereference(asderived());","iteratorfacadeaccess::equals(lhs.asderived(),","iteratorfacadeaccess::increment(asderived());","iteratorfacadeaccess;","iterators:","josutti","label","label(\"\")","label()","label;","labeledpoint","labeledpoint()","labeledpoint(doubl","lastname;","lhs,","lhs.asderived().equals(rhs.asderived());","listnod","listnode*","listnodeiter","listnodeiterator(listnode*","live()","logic","m)","main()","make","mem(m)","mem;","member","member&","member()","member(member)","member)","member);","member;","mixins()...,","mixins...","mixins>","more","move","mypoint","mystr","n)","name","need","new","next","next;","nonempti","notvirtu","nullptr)","nullptr;","number","obj)","object","object(obj)","object;","objectcount","objectcounter()","objectcounter>","objects:","ok:","onc","oper","operations:","operator!=","operator!=(iteratorfacad","operator*()","operator++()","operator++(int)","operator==","operator==(iteratorfacad","optimiz","optimization，ebco）是指当同一类型的对象（也包括派生类对象）不会被分配到同一起始地址时可以不为空基类分配额外的空间。原文：","other)","other.current;","other.iter;","overrid","p1","p1,","p2","p2,","p3","p3,","p4","pattern，crtp）是指将派生类作为模板参数传递到基类中来为派生类提供一些功能，这样可以在避免使用虚函数的情况下实现多态。例如利用这种方式可以实现对象计数：","person","point","point()","point(),","point(doubl","point(x,","point;","pointer","points;","polici","policies::p1,","policies::p2,","policy1_i","policy2_i","policy3_i","policy4_i","policy;","policyselector","policyselector;","polygon","privat","private:","project(authors.end(),","project(iter","projectioniter","projectioniterator(iter","projectioniterator(iter,","protected:","provid","public","public:","random","recur","red","refer","reference;","requir","result(asderived());","result;","return","rhs)","rhs);","rhs.asderived());","s","s1,","s2;","s;","same","second()","size","sizeof(empty):","sizeof(emptyclass):","sizeof(emptythree):","sizeof(emptytoo):","space","specifi","standard","static","static_cast(*this);","std::copy(project(authors.begin(),","std::cout","std::forward_iterator_tag>","std::iterator_traits::difference_type;","std::iterator_traits::difference_type>","std::iterator_traits::iterator_category,","std::iterator_traits::value_type;","std::ostream&","std::ostream_iterator(std::cout,","std::remove_const::type;","std::remove_const::type;502","std::size_t","std::string","std::vector","struct","subobject","t","t&","t&,","t,","templat","template...","though","two","type","type.","typenam","unsign","us","valu","value*;","value;","value_typ","vandevoord","variou","via","virtual","void","w","w(s);","wrapper","wrapper(t","ws;","w关联的类是wrapper，其中定义了foo()，而s关联的类是s，没有定义foo()。","x","x(0.0),","x(x),","x,","x1,","x2)","x2);","x2;","y(0.0)","y(y)","y)","y),","y;","zero","{","{\"david\",","{\"douglas\",","{\"nicolai\",","{}","}","};","~listnode()","~objectcounter()","‘friend’","上面的代码很乱，完整代码应该为：","书中给了一种将模板实参和数据成员绑定在一起的方法，但是没想明白代码的使用场景：","书中给了一种解决办法：","但是输出却多了三行：","但是这个模板太通用了，可以挪到基类中然后通过crtp为特定的派生类所用：","例如实例化array时，实例化后的友元函数存在于全局命名空间中，可以访问array的protected和private成员，同时只是一个普通的函数，可以被重载。在c++支持函数模板重载后，这个“注入到全局命名空间”的技巧不适用了。现代c++中的名称查找是基于adl规则的：","参数化虚函数","双向迭代器应该支持decrement()","另一种实现方式是通过混入：","只包含类型成员、非虚成员函数和静态数据成员的类型为空类型，但是所占内存大小并不为0：","后记","在基类中调用派生类对象的接口要求派生类中的实现是public的，为此可以定义访问类iteratorfacadeaccess，然后在listnodeiterator中将iteratorfacadeaccess定义为友元来解决这个问题：","在我的机器上输出为：","基于crtp的混入","基于iteratorfacade<>的链表迭代器如下所示：","外观模式","外观模式中的基类定义了大量或者全部的接口，这些接口借助派生类的接口实现。外观模式可以通过crtp实现，本节中给出了一个迭代器外观类的例子：","奇异递归模板模式","奇异递归模板模式（curious","如果再为每个点增加颜色和标签等属性，同时还要保证可以在polygon中使用扩展的点，则可以从point派生出新的labeledpoint，并将polygon泛化为模板：","如果模板中有多个参数，且每个参数都有默认值，当前标准并不支持指定初始化靠后的模板参数，所以下面的代码得不到想要的结果：","如果编译器实现了空基类优化，则输出相同（但是不为0）；否则不同，在我的机器上输出为：","完整代码","实现关系运算符时，一般会只实现==和，!=、、>和>=都通过组合来实现。如果很多类型都有这种需求，则可以泛化为模板：","将成员作为基类","巴顿","所有迭代器应该都支持dereference()、increment()和equals()","接口隐藏","早期c++无法对函数模板进行重载，巴顿","有了iteratorfacade<>后可以很容易的将构建迭代器适配器，例如通过对象的迭代器构建成员的迭代器：","模板和继承","模板实参指定初始化","混入","混入也可以和crtp结合来进行定制：","混入也可以将成员函数变为虚函数，但是感觉很混乱：","混入（mixins）是一种通过反转继承关系的方式来对类型进行定制的方法。假如现在有一个point类和polygon类：","用户代码调用iteratorfacade<>中的各种运算符，而这些运算符调用派生类的接口实现：","看一个例子：","空基类优化","空基类优化（empti","空基类的布局","诺克曼技巧","诺克曼技巧通过将函数模板实现为友元来用来解决这个问题：","还有一个例子：","这是因为我机器上的std::copy通过减法计算了两个迭代器指向的person::lastname的距离，大小是6个std::string，而不是3个person，所以会多输出三行。","迭代器适配器","通过crtp实现关系运算符","链表迭代器","随机访问迭代器应该支持advance()和measuredistance()"],"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":["!","!(f1","!=","\"functionptr.hpp\"","\"isequalitycomparable.hpp\"","#includ","&&","(*f)(int))","(auto","(f1","(int","(other.bridge)",");","*this;","++i)","//","0","0;","1","2","22","22.1","22.2","22.3","22.4","22.5","22.6","22.7","22:","3","4","4:",":","=","==",">clone();",">equals(f2.bridge);",">functor);",">functor;",">invoke(std::forward(args)...);","[&values](int","arbitrari","args)","assign","bool","bool()","bool:","bridg","bridge(nullptr)","bridge(other.bridge)","bridge(std::forward(f));","bridge/forupto1.cpp","bridge/forupto2.hpp","bridge/forupto3.hpp","bridge/forupto4.cpp","bridge/functionptr","bridge/functionptr.hpp","bridge/functorbridge.hpp","bridge/isequalitycomparable.hpp","bridge/specificfunctorbridge.hpp","bridge/tryequals.hpp","bridge;","call","chapter","check","class","clone()","clone()接口用来实现拷贝，invoke()接口用来实现调用，所以functionptr<>中的拷贝构造和调用就可以像下面这样实现：","const","const&","const*","const;","constexpr","construct","constructors:","conv(bool);","convert","cpinv.hpp","decltype(conv(!(std::declval()","decltype(test(nullptr,","declval()","delet","destructor:","differ","dynam","dynamic_cast(fb))","elements:","equal:","equals(functorbridg","equals(t","explicit","f","f(i);","f)","f);","f1","f1,","f1.bridg","f2)","f2);","f2;","fallback:","false;","false_typ","fb)","forupto(5,","forupto(int","fp1,","fp2)","fp2.bridge);","friend","function","functionptr","functionptr&","functionptr()","functionptr(f&&","functionptr(functionptr","functionptr(functionptr&","functionptr(functionptr&&","functionptr(static_cast(other))","functionptr::functionptr(f&&","functionptr::functionptr(functionptr","functionptr::operator()(args...","functionptr;","functionptr<>只包含一个functorbridge<>类型的指针bridge。","functionptr<>通过任意函数对象进行构造的代码为：","functor","functor(std::forward(args)...);","functor(std::forward(functor))","functor)","functor;","functorbridg","functorbridge*","functorbridge<>实现为一个抽象基类：","funtionptr<>的特性包括：","i)","init.hpp","insert","invocation:","invoke(args...","isequalitycompar","n,","n;","never","new","notequalitycompar","notequalitycomparable();","nullptr))::value;","nullptr;","objects:","oper","operator!=(functionptr","operator()(args...","operator=(f&&","operator=(functionptr","operator=(functionptr&&","operator==(functionptr","operators:","other)","other);","other.bridg","other.bridge;","overrid","partial","pass","polymorph","primari","print","printint(int","printint);","private:","public","public:","r","return","see","specfb","specialization:","specificfunctorbridg","specificfunctorbridge(functor);","specificfunctorbridge(functorfwd&&","specificfunctorbridge*","specificfunctorbridge;","specificfunctorbridge<>保存了函数的类型f，但是functionptr::bridge是抽象基类functorbridge<>的指针，无法访问specificfunctorbridge::functor，所以函数的类型不可见了，只能进行调用，这就是将静态多态的类型信息擦除转换为动态多态的方式。","static","std::cout","std::decay_t;","std::declval())))","std::declval())),","std::except","std::false_typ","std::function","std::swap(fp1.bridge,","std::true_typ","struct","swap(*this,","swap(functionptr&","t","templat","template:","template::value>","test","test(...);","test(decltype(conv(std::declval()","throw","tmp(other);","tmp(std::forward(f));","tmp);","tmp);522","true_typ","tryequal","tryequals::equals(functor,","type","us","valu","values.push_back(i);","values;","virtual","void","void*","x1","x1,","x2)","x2;","{","||","}","});","};","~functionptr()","~functorbridge()","下面是一个可以接收任意函数对象并调用的模板：","为了能够接收任意函数对象，需要将functorbridge<>的派生类实现为specificfunctorbridge<>以接收任意函数对象：","书中的代码判断有错误，应该是只有在两个函数都不为空时才调用equals()进行比较。然后在functorptr<>中添加接口，并在specificfunctorbridge<>中实现：","从函数对象到函数指针再到std::function","但是这就不能传递lambda对象了（因为是类），为此可以使用std::function：","可以为空","可以拷贝、移动和赋值","可选的桥接","后记","基本每一次调用forupto()都会实例化新的函数，这会增加代码体积，解决方法是不实现为模板而是通过函数指针：","如果还需要判断两个functionptr<>是否会调用同一函数，就需要为functionptr<>重载==运算符：","性能方面的考虑","最终虚函数equals()实现为：","本章中实现的functionptr<>虽然是模板，最终却是通过bridge变量实现的函数调用，完整了静态多态到动态多态的转换，这样做是否值得需要同时考量虚函数调用的开销和调用函数对象的开销。","本章实现了functionptr<>，类似于std::function。","本章接下来实现一个可以替代std::funtion的funtionptr<>：","根据以上需求，实现的functionptr<>如下：","桥接接口","桥接静态和动态多态","泛化的函数指针","类型擦除","调用保存任意的可调用对象","这里的问题在于要求functor必须实现了==运算符，这对函数指针没有问题，有问题的是lambda表达式，为了避免编译错误，可以通过基于sfinae规则的类型特征模板解决："],"2022-03-05-ch23-metaprogramming.html":["\"","\"ifthenelse.hpp\"","\"sqrt1.hpp\"","#defin","#endif","#ifndef","#includ","&&","((p%i)","(lo+hi+1)/2;","(midsquar","(modifi","(n::valu","(p==2)","(std::size_t","(with","(x","*","*a","*b","+","/","//","0","0)","0;","1","1/3","1/3000","18","1994","1;","1>::pri)","2/3","23","23.1","23.1.1","23.1.2","23.1.3","23.1.4","23.2","23.3","23.3.1","23.4","23.5","23.6","23.7","3","4","42;","7.5","77;",":","::valu","=","==","a*3","a,","a.f();","a;","ad","alia","array","auto","b","b)","b*2000","b;","be","bodi","both","bounds):","c","c++","case","caus","chapter","class","code","compil","comput","condnul","condnull::valu","condnull::value;","consist","const","const&","const&)传递value时，就需要为value分配地址了，value不再是编译期间的常量了。","constexpr","continu","conveni","convert","criteria","criterion","d","d(void*);","d;","declar","defin","den","denomin","differ:","dotproduct(std::array","dotproduct::result(a+1,b+1);","dotproductt","dotproductt::result(x.begin(),","double;","doublifi","doublify::longtype,","durat","duration(val);","duration(valuetyp","duration>(4);","duration>(7.5);","duration>(x);","duration>(y);","e","e*3","e;","end","enum","equal","error,","erwin","execut","f","f()","fine","foo(int","fraction","full","fulli","function","gener","given","half","halv","handl","hi","higher/low","i;","ifthenelse,","ifthenelse,sqrt>,","implement","import","inlin","instanc","instance.","instanti","instantiated.","int","interv","interval:","is_prim","is_prime2?p:0),i","is_prime::pri","iter","k","larg","larger","last","lay","lhs,","lhs.value()","lo","longtyp","look","loop","m;","main","main()","meta/duration.hpp","meta/durationadd.hpp","meta/pow3const.hpp","meta/pow3enum.hpp","meta/ratio.hpp","meta/ratioadd.hpp","meta/removeallextents.hpp","meta/sqrt1.cpp","meta/sqrt1.hpp","meta/sqrt2.hpp","meta/sqrtconstexpr.hpp","meta/unruh.cpp","metaprogram","metaprogramming）是在编译期间以类型作为参数产生新类型的技术，下面的是一个利用模板递归实例化技术提取变量类型的例子：","metaprogramming）是在编译期间对变量进行求值的技术。c++11引入的constexpr解决了大量需要在编译期间求值的问题，c++14开始支持复杂的控制结构，下面是一个在编译时计算平方根的例子：","metaprogramming）是在编译期间生成代码并在运行期间进行求值的技术。例如要计算向量点积，通常会将代码写为下面的样子：","mid","mid;","midpoint,","midsquar","millisecond","n;","new","nomin","nth","num","number","numer","operator+(dur","origin","ouch;","out","partial","point","pow3","pow3::valu","pow3::value;","pri","primari","prime","prime_print","print","private:","program","program.”","public:","r1::den","r1::den;","r1::num","r2::den","r2::den;","r2::num","ratio","ratio::den>;","ratio;","ratioadd","ratioaddimpl","ratioaddimpl::type;","ratios:","realli","recurs","rememb","removeallext","removeallextentst","removeallextentst::type;","result","result(t*","result(t*,","result{};","return","rhs)","rhs.value()","root","root:","round","run","s","s;","search","second","simplifi","special","sqrt","sqrt(n)","sqrt(t","sqrt::valu","sqrt::value;","sqrt<>的例子表明模板元编程是可以实现任意计算的。","sqrt>;","squar","static","std::array","std::cout","step","struct","subt","subt::value.","subt::value;","sum","synonym","system","t","t*","t*)","t;","tatic","templat","template:","template<>","template>","therefore,","time","troubl","trouble::longtyp","trouble::longtype>;","two","type","type:","type;","typedef","typenam","t{};","u1::den","u1::num","u2::den","u2::num;","u:","u::type;","unit","unittyp","unruh)","unruh提出的元编程例子：","unsign","up","us","usage:","v","val","val(v)","val;","valu","value()","value;","valuetyp","void","void*","vt","vt::den","want.","whichev","without","words,","write","x","x)","x,","x:","y","y)","y.begin());","yield","{","{pri=0};","{pri=1};","||","}","};","“program","书中给出的一段解释解答了一个让我疑惑很久的问题。原文：","但是实际实例化的过程并没有这么简单，这是因为sqrt::value包含两个分支，编译期间无法根据条件优化掉无效的分支，最终的结果是一个超长的条件判断表达式。虽然是通过二分法计算平方根，但是实际实例化的类模板为o(2logn)个。不仅如此，当使用::运算符引用value时，还需要实例化整个类。不过好在可以借助ifthenelse<>实现分支优化：","值元编程","值元编程（valu","假设有下面的递归模板：","元编程","元编程中的反射","元编程是对程序进行编程，也就是在编程系统对源代码进行构建的过程中产生出新代码、实现新功能的技术。原文：","反射（reflection），通过代码在编译期间侦测程序的特性","后记","在没有constexpr之前，通过元编程计算平方根的方法为：","对不同单位下的值运算进行混合元编程","当使用如下代码实例化上一节的计算平方根的代码时：","循环中包含跳转，所以编译器可能会进行循环展开优化，从而形成一系列的乘法求和运算，这种优化也可以通过元编程来实现：","想当然的会认为sqrt::value的递归过程为：","早期c++只支持枚举类型作为元编程中的常量，例如下面计算3的幂的例子：","最早由erwin","本来编译器是不需要为pow3::value分配地址的，但是当向void","枚举值和常量值","混合元编程","混合元编程的另外一个应用是对具有不同单位的值求和，具体为在编译期间确定求和结果的类型，并在运行期间进行计算，例如：","混合元编程（hybrid","然后从c++98开始，可以使用类内静态常量参与元编程计算：","现代c++中的元编程","生成（generation），在编译器期间生成额外的代码","直到c++17允许内联静态数据成员后，才解决了这个问题（但是原理书上没说）。","看到这里我一下子就想起来了标准库中关于时间的模板std::chrono。ratio<>是一个单位类型，ratioaddimpl<>对两个具有不同单位的单位元进行求和得到新的单位元类型。duration表示u单位下的数值，该数值用内置类型t表示，最终的加法是对两个不同单位下的数值进行求和。下面是测试代码：","类型元编程","类型元编程（type","计算完整性","计算（computation），通过递归实例化或者常量表达式在编译期间进行求值","跟踪递归实例化的过程","这个程序会在编译错误中打印出所有的小于18的素数。。。","这也就是说实例化ifthenelse<>时只会实例化ifthenelset<>，因为引用了ifthenelset<>::type。在后面引用subt::value时，才会实例化type的具体类型（也就是sqrt或者sqrt）。联想到第14章开头提到过，编译器只在获取类大小或者访问类成员时才实例化类模板，也印证了这个说法。","递归实例化和递归模板","递归实例化的开销","通常元编程可以包含下面三部分内容：","随着实例化trouble<>的n的增大，trouble::longtype的名字也会越来越长，这对编译器是一个很大的负担，因此编译器都对模板名字进行了压缩。"],"2022-03-06-ch24-typelists.html":["\"identity.hpp\"","\"insert","#includ","(an","(insert","//","0;","1>","24","24.1","24.2","24.2.1","24.2.2","24.2.3","24.2.4","24.2.5","24.2.6","24.2.7","24.3","24.3.1","24.4","24.5","24.6",":","::valu",";","=","==",">",">::valu",">>>;","accumul","accumulate>::valu","accumulatet","accumulatet,","accumulatet::type;","accumulatet;","addconst","addconstt","addconstt::type;","auto","back","basi","best","best>;","bool","case","case:","chapter","char;","class","compare,","compare>","compare>,","compare>>::type;","comput","con","cons;","cons>>>;","const;","constexpr","cons风格的类型列表","contend","contender,","cttypelist","ctvalu","ctvalue,","ctvalue;","ctvalue>","ctvalue>;","element","element,","empti","expect","f,","f>::type>","failed\");","false;","false>","first","first,","front","front,","front;","front>","front>;","frontt","frontt::type;","frontt;","frontt>","gener","greaterthant,","greaterthant;","head","head;","headt;","i,","i;","i>","identityt,","ifthenelse=","ifthenelse>::value,","ifthenelset=","insertionsort","insertionsort;","insertionsortt","insertionsortt::type;","insertionsortt;","insertsort","insertsortedt","insertsortedt,","insertsortedt::type;","insertsortedt;","integ","isempti","isempty::value>","isempty>","largertypet","largertypet,","largesttyp","largesttypeacc","largesttypeacct","largesttypeacct::type;","largesttypeacct;","largesttypet","largesttypet::type;","largesttypet;","largesttypet>","largesttypet>::type;","list","list):","list:","list::head;","list::tail;","list;","metafun,","metafun>","metafun>::type,","metafun>::type>","multipli","multiplyt,","multiplyt::type;","multiplyt;","n","newelement>","newhead","newtail","nil","nthelement","nthelementt","nthelementt,","nthelementt::type;","operation:","popback","popbackt","popbackt::type;","popfront","popfront;","popfrontt","popfrontt::type;","popfrontt;","popfrontt>","prime","private:","public","public:","push","pushback","pushbackrect","pushbackrect::type;","pushbackrect;","pushbackt","pushbackt,","pushbackt::type;","pushbackt;","pushbackt>,","pushfront","pushfront;","pushfrontt","pushfrontt,","pushfrontt::type;","pushfrontt;","recurs","rest","rest>;","result","revers","reverse<>也可以用来实现popback<>（感觉有些多此一举）：","reverse>>;","reverset","reverset::type;","reverset;","second;","select","selectt::type;","selectt;","selectt>","sizeof(best)),","sizeof(rest)),","sizeof(t)","sizeof(u),","sizeof...(values)","smallerth","sort","sorted):","sortedinteg","sortedtyp","st","static","static_assert(std::is_same_v>,","std::cout","struct","t","t,","tail","tailt;","templat","template::value>","template<>","transform","transformt","transformt,","transformt::type;","transformt;","true;","type","typelist","typelist,","typelist...>;","typelist/accumulate.hpp","typelist/addconst.hpp","typelist/cons.hpp","typelist/consfront.hpp","typelist/consisempty.hpp","typelist/conslisttest.hpp","typelist/conspopfront.hpp","typelist/conspushfront.hpp","typelist/cttypelist.hpp","typelist/ctvalue.hpp","typelist/ctvalue17.hpp","typelist/genericlargesttype.hpp","typelist/genericpushback.hpp","typelist/insertionsort.hpp","typelist/insertionsorttest.hpp","typelist/insertsorted.hpp","typelist/largesttype.hpp","typelist/largesttypeacc.hpp","typelist/largesttypeacc0.hpp","typelist/multiply.hpp","typelist/nthelement.hpp","typelist/select.hpp","typelist/transform.hpp","typelist/typelist.hpp","typelist/typelistfront.hpp","typelist/typelistisempty.hpp","typelist/typelistpopback.hpp","typelist/typelistpopfront.hpp","typelist/typelistpushback.hpp","typelist/typelistpushfront.hpp","typelist/typelistreverse.hpp","typelist/valuelist.hpp","typelist/valuelisttest.hpp","typelist/variadictransform.hpp","typelist::type...>;","typelist;","typenam","u>","us","valu","value;","valuelist","valuelist;","valuelisttest()","void","{","}","};","两种方法虽然效果一样，但是在编译时间上有很大差别，原因在于第一种方法只需要实例化多个typelist<>就可以，而第二种方法还会实例化pushbackrect<>、pushfrontt<>、frontt<>和popfrontt<>。","书中还给出了一个根据索引提取类型列表中指定类型的例子：","从c++17开始，由于auto可以用来推导非类型模板参数的类型，所以ctvalue<>还有更简单的定义：","但是也可以通过front<>、pushfront<>、popfront<>和isempty<>实现：","使用auto推导非类型模板参数","假如c++不支持可变参数模板，那么类型列表就只能写成lisp中的样子了：","利用popfront<>和递归可以实现获取类型列表中第n个类型的算法：","利用参数包展开优化算法","反转算法","反转算法的一种实现方式是通过front<>取出类型列表首部类型，然后递归反转剩下的类型列表，最后再进行组合：","变换元函数metafun<>可以是下面的形式：","变换算法","变换算法是将类型列表中的类型进行变换生成新的类型列表的算法，实现方法是先对首部类型进行类型变换，然后递归的对去除首部的类型列表进行变换，最终再拼接：","后记","在有序类型列表中插入类型的模板insertsortedt<>依然是通过递归的方式实现的：","在类型列表首部添加一个新的类型：","如果编译时值列表中的值都是同一类型的话，那么也可以使用下面的模板：","定义了isempty<>、frontt<>、popfrontt<>、pushfrontt后就可以进行插入排序了：","定义了这些基础操作后，就可以进行插入排序了：","对于24.2.5中的变换算法，还可以利用参数包展开来进行优化：","对前几个素数的编译时值列表求积的代码为：","当compare::value为true时，在排序后的类型列表中t会出现在u的前面，测试代码如下：","当向largesttypeacc<>传递空类型列表时会出现编译错误，改进方法如下：","或者不借助typelist<>，直接实现valuelist<>：","插入排序","插入排序的思路是首先取出类型列表的首部类型，然后对剩下的类型列表进行排序，最终再将首部类型插入到合适的位置：","查找算法","查找类型列表中最大位宽的算法如下：","移除类型列表中第一个类型：","类型列表","类型列表就是存储类型的列表，和std::list类似也可以进行添加和删除等操作，但是区别在于添加操作不会对原始列表进行修改，而是创建一个新的列表，最常见的方式是通过模板实现：","类型列表算法","索引算法","累加算法","累加算法也可以用来查找类型列表中位宽最大的类型：","累加算法可以在遍历类型列表中的每一个类型的过程中使用类型函数f进行计算：","获取类型列表中第一个类型：","这个名字有点绕，实际意思就是在编译时存储值的列表，为此需要为每个值构造一个类型：","追加算法","追加算法和pushfrontt<>类似：","递归终止条件模板可能会导致编译错误，为此可以添加isempty<>进行封装：","非类型的类型列表"],"2022-03-07-ch25-tuples.html":["!std::is_final::value>","\"ctvalue.hpp\"","\"hello,","\"tupleelt1.hpp\"","\"tuplestorage3.hpp\"","#1","#2","#3","#4","#5","#includ","&&","'.'","'0'","'0')","'1',","'a'","'b':","'c',","'x':","(&arr)[n])","());","(42,77),","(arr[1])","(c","(c)","(default:","(disabl","(n","(sinc","(std::size_t","(t1);","*>(this)","*this;","+","++numcopies;","...","//","0,","0;","0b","0x","0x,","10;","16;","1;","2","2.2f,","2.5,","25","25.1","25.1.1","25.1.2","25.2","25.2.1","25.2.5","25.3","25.3.1","25.3.1、25.3.2、25.3.3中没有给出别名模板，配套代码中也缺少省略的内容，完整的反转算法如下：","25.3.2","25.3.3","25.3.4","25.3.5","25.3.6","25.4","25.5","25.5.1","25.5.2","25.6","25.7","2;","3.14,","42,","4的本意是通过一系列的值初始化元组，5的本意是从其它的元组初始化，所以应该在两个模板构造函数中添加std::enable_if来保证参数包的大小是相同的：","7.7);","8;",":","::numcopi","=","==",">",">=",">decltype(applyimpl(f,",">decltype(f(get(t)...))",">get();","_c()","a()","add","alway","ambigu","apply(f","apply(tupl","apply,","apply;","apply>","applyimpl(f","applyimpl(f,","arr[0]","array","assert(c","auto","auto&","b","back:","base","basi","binari","bool","break;","c","c)","c++14),","case","case:","chapter","char","class","compar","compare,","compare>::templ","compare>并不是模板，所以需要再次引用嵌入的类模板apply<>，同时提示编译器apply<>是模板。","compil","comput","const","const&","const&)","const&)，用t初始化t2时4比5的匹配度更高，编译器将匹配构造函数4，这就导致了在构造head的过程中出现类型转换的错误。","const&,","const&...","const*>(this)","constexpr","constructors:","convert","copies;","copycount","copycounter()","copycounter(copycount","copycounter,","copycounter>","copycountertest()","correspond","ctvalue({cs...})>{};","ctvalue>","d","decimal)","decltype(getheight(t))","decltype(maketuple(get(t)...))","decltype(reverseimpl(t,","default:","default;","determin","digit","element","element:","element>","elements>","elems)","empti","empty:","equival","extract","f(get(t)...);","f,","f>","false;","float","front","front:","front>;","frontt::type;","frontt;","frontt>","get()","get(*this);","get(copies));","get(copies),","get(tupl","get(tuple&","gethead()","getheight(t);","getheight(tupleelt&","gettail()","handl","head","head&","head(head),","head(other.gethead()),","head(std::forward(vhead)),","head,","head;","headelt","hexadecim","inlin","insertionsort,","insertionsort<>中第一个参数是需要排序的值列表，第二个参数是比较值列表的元函数。因为不是简单的比较值列表中索引的大小，而是比较元组中具有该索引的类型的大小，因此需要将额外的参数tuple和比较函数smallerthant<>进行组合。此外由于insertionsort<>中第二个参数依然是模板（模板的模板参数），而metafunofnthelementt,","int","isempti","isempty>","isfirst","iter","letters:","lhs,","lhs.gethead()","lhs.gettail()","literals):","main()","makeindexlist","makeindexlist()))","makeindexlist());","makeindexlistt","makeindexlistt::type;","makeindexlistt>>","maketuple(0,","maketuple(get(copies),","maketuple(get(t)...);","maketuple(types&&...","metafunct","metafunofnthelementt","metafunofnthelementt,","multipli","nthelement>","numcopi","octal","offset","oper","operator\"\"","operator==(tupl","operator==(tuple<>","operator[](ctvalue)","other)","over","pars","parseint(char","point","popback","popback(tupl","popback>","popbackt","popbackt::type;","popfront","popfront(tupl","popfront>","popfrontt::type;","popfrontt;","popfrontt>","potenti","prefix","printtuple(std::ostream&","printtuple(strm,","privat","private:","public","public:","pushback","pushback(reverse(t.gettail()),","pushback(tupl","pushback(tuple.gettail(),","pushback(tuple<>","pushback>,","pushbackt,","pushbackt::type;","pushbackt;","pushfront","pushfront(tupl","pushfront,","pushfrontt,","pushfrontt::type;","pushfrontt;","recurs","remov","replicatedindexlist","replicatedindexlist());","replicatedindexlistt::type;","replicatedindexlistt;","replicatedindexlistt>","requir","result","result;","return","revers","reverse(copies);","reverse(popfront(reverse(tuple)));","reverse(t);","reverse(tupl","reverse(tuple<>","reverse>","reverse>()))","reverse>());","reverse>>;","reverseimpl()中第二个参数没有名字，因为在函数体中并不需要使用该参数，主要作用是通过该参数推导indices。如果没有该参数，则必须要通过显示实例化模板的方式显式指定。","reverseimpl()只是通过一个递减的值列表选择出元组中的元素，其核心是提取算法：","reverseimpl(t,","reverseimpl(tupl","reverset","reverset::type;","reverset;","rhs)","rhs.gethead()","rhs.gettail();","select(t,","select(tupl","singl","sizeof(t)","skip","smallerth","sort","sort(tupl","splat(tupl","static","static_cast","static_cast('0');","static_cast('a')","static_cast(this)","std::cout","std::ostream&","std::string(\"hello\"));","std::string{\"hello\"});","storag","strm","strm,","strm;","struct","switch","t","t&","t(1,","t(17,","t(std::forward(other))","t)","t);","t,","t.gethead());","t.gethead();","t1;","t1的大小是5字节，说明继承链中的空元组的存储空间被优化了。由于上例中的a和b也是空类型，所以可以改进tupleelt<>来将a和b所占用的存储空间也优化掉：","t2","t2(t);","t2的初始化会报错，显示无法将tuple转换为long类型。","t;","t[2_c];","t[3_c];","t[ctvalue{}];","tail","tail(other.gettail())","tail(std::forward(vtail)...)","tail(tail)","tail(tail...)","tail)","tail;","te)","te.get();","templat","template::valu","template::value>","template<>","template>","time:","toint(char","true)","true;","tupl","tuple&","tuple()","tuple(head","tuple(tupl","tuple(tuple.gethead(),","tuple(value);","tuple(vhead&&","tuple)","tuple);","tuple,","tuple...>(std::forward(elems)...);","tuple.gettail();","tuple:","tuple;","tuple<>","tupleelt","tupleelt()","tupleelt(u&&","tupleelt,","tupleelt;","tupleget","tupleget::apply(t);","tupleget::apply(t.gettail());","tuples/apply.hpp","tuples/compressedtuple1.cpp","tuples/constantget.hpp","tuples/copycounter.hpp","tuples/copycountertest.hpp","tuples/indexlistreverse.hpp","tuples/literals.hpp","tuples/makeindexlist.hpp","tuples/maketuple.hpp","tuples/popback.hpp","tuples/popfront.hpp","tuples/pushback.hpp","tuples/pushfront.hpp","tuples/reverse.hpp","tuples/select.hpp","tuples/splat.hpp","tuples/tuple0.hpp","tuples/tupleelt1.hpp","tuples/tupleelt2.hpp","tuples/tupleeq.hpp","tuples/tupleget.hpp","tuples/tupleio.hpp","tuples/tuplesort.hpp","tuples/tuplesorttest.hpp","tuples/tuplestorage1.hpp","tuples/tuplestorage2.hpp","tuples/tuplestorage3.hpp","tuples/tupletypelist.hpp","type","typenam","typename...","types:","unsign","us","v","v>","v>(value,","valu","value(std::forward(other)","value(std::forward(other))","value)","value));","value:","value;","valuelist)","valuelist;","vhead,","void","vtail&&...","vtail)","whether","world!\");","wrapper","{","}","};","上一节中的反转算法效率可以通过统计拷贝的次数来测量：","下标运算","下面分析下构造函数的重载解析过程。1和2参数数量不匹配，3中head为long，不能匹配tuple。4实例化后的构造函数为tuple&>(tuple&)，5实例化后的构造函数为tuple(tupl","下面是一个将i重复n次的索引序列，可以用来生成由元组中第i个元素重复n次的新元组：","下面是元组的编译时算法，主要用来确定类型：","下面的程序可以用来测试优化后的存储空间：","为了利用空基类优化，就不能将tuple::tail作为成员，而应该作为基类：","为了将元组传递给接收可变参数的函数，可以利用和select()中同样的方式将参数包展开：","书中提到了其它几个构造函数，但是配套代码中没有，下面的是我自己写的：","优化","值操作算法","元组","元组中的元素通过tupleget<>提取：","元组也可以定义下标运算符，内部借助get()实现：","元组和上一章实现的类型列表typelist<>类似，都存储了一系列的类型，但不同的是元组中还包括类型所对应的值，因此元组所支持的算法既要在编译时确定类型，又需要在运行时对值进行计算。","元组和空基类优化","反转算法","反转算法通过递归的方式实现：","后记","和前一节类型操作算法对应的值算法如下：","因为优化后的元组是私有继承的方式，所以需要将get()声明为友元。","基本操作","基本设计","如果要对元组中的元素按照大小进行排序进行排序，可以先对下标进行排序，然后再应用select()：","存储","将元组像参数包一样展开","常量时间的get()","拷贝次数过多主要是由于pushback()的递归，每次在构造tuple::tail时都会发生拷贝。更有效率的方式是使用maketuple()进行构造，类似下面的代码：","最简单的方式还是将元组拆分为头和尾的形式进行存储：","有了反转算法后，就可以实现弹出最后一个元素的算法了：","本章实现了tuple<>，类似于std::tuple。","构造valuelist<>的makeindexlist()代码如下：","构造函数","比较","比较操作判断两个元组类型是否相同：","注意replicatedindexlistt<>的主模板和特化模板之间的模板形参有区别。","由于get(*this)是编译期间确定的值，所以参数也必须是一个编译期间的值。可以发现ctvalue<>的写法有些复杂，所以可以借助字面值运算符模板：","由于tupleelt<>的实现方法是通过继承，因此可以利用派生类到基类的转换实现常量时间的get()：","算法","类似std::make_tuple，还可以通过maketuple()构造元组：","类型操作算法","索引列表","索引列表借助上一章的valuelist<>实现：","输出","这样拷贝次数就都降低为1次了，但是上面的写法很麻烦，所以应该将索引序列变成非类型的模板参数包，也就是索引列表。","这虽然解决了初始化顺序的问题，但是当多重继承的基类相同时就会出现歧义，为了解决这个问题，可以在tupleelt<>中加入一个高度信息：","这里只有原始的类模板，没有给出别名模板。","通过索引列表实现反转","重排和选择","问题在于采用继承的方式会先初始化基类，虽然没什么问题，但是看起来有些别扭，解决办法是通过多重继承："],"2022-03-08-ch26-discriminated-unions.html":["!v.is())","\"accumulate.hpp\"","\"commontype.hpp\"","\"findindexof.hpp\"","\"variant.hpp\"","#includ","&","&&","&&;","&;","(!source.empty())","()","();","(copiednoncopyable)","(empty())","(field.is())","(getderived().getdiscriminator()","(noncopy","(noncopyable&&)","(sizeof...(tail)","(t","(t&&","(v.is())","(v.templat","(v2.is())","(variant","(variant&&","(variant.templ","(variantchoice::destroy()","*getderived().templ","*static_cast(this);","*thi","*this;","+",",","...);","//","0)","0;","1;","26","26.1","26.2","26.3","26.3中的is()和get()可以用来查询和提取可识别联合体中的类型，但是这将会导致冗长的判断语句，例如打印可识别联合体：","26.4","26.4.1","26.4.2","26.4.3","26.5","26.5.1","26.5.2","26.6","26.7","26:","627",":","=","==",">",">getdiscriminator()",">setdiscriminator(0);",">templat",">~t();","access","accumulate,","address","alignas(types...)","argument","argument,","assert(is());","assign","assum","auto","base","basi","bool","buffer","buffer;","buffer[sizeof(largestt)];","c++17,","call","case:","catch","caus","chapter","char","class","class;","common","commontyp","commontypet","commontypet,","commontypet::type;","compil","comput","const","const&","const&)","const&);","const&;","const*","const;","constexpr","copiednoncopy","copiednoncopyable();","d)","d;","decltype(declval()(declval()));","decltype(true?","declval()","declval());","default;","delete:","deriv","derived&","destroy()","destroy();","differ","discrimin","discriminator)","discriminator:","discriminator;","each","element","empty()","emptyvari","emptyvariant();","explicitli","false;","field(17);","findindexoft","findindexoft,","findindexoft;","friend","front>();","front>;","get()","get()));","getbufferas()","getbufferas();","getderived()","getderived().destroy();","getderived().setdiscriminator(discriminator);","getderived().templ","getderived();","getdiscriminator()","getrawbuffer()","given","head","head;","ifthenelse,","indic","initi","int","is()","is())","issu","largestt","largesttype>;","main()","matches,","move","n+1>>","nc;","new","new(getderived().getrawbuffer())","noncopy","noncopyable&","noncopyable()","noncopyable(noncopy","noncopyable(noncopyable&&)","object","on","operator=","pass","place","placement","point","print(v);","print(vari","printimpl(v","printimpl(v);","printimpl,","privat","produc","protected:","provid","public","public:","r","r;","recogn","recurs","result","results[]","resulttyp","return","same","see","set","setdiscriminator(unsign","solut","source)","source);","source.visit([&](auto","static","static_cast(","std::common_type_t...>;","std::cout","std::declval;","std::except","std::forward(variant).templ","std::forward(vis)(","std::forward(vis),","std::integral_constant,","std::launder","std::launder()","std::launder(),","std::launder().","std::launder(reinterpret_cast(buffer));","std::move()","std::move(source).visit([&](auto&&","std::move(value);","storage;","store","struct","succeed:","t","t&","t&&","t(std::move(value));","t(value);","t*","t,","t:","t>::valu","t>::value,","tail;","templat","template::value>","template<>","through","throw","tri","true;","tupl","type","type:","typelist());","typelist)","typelist...>;","typenam","types...>(v);","types:","union","unsign","us","v","v(1.5);","v(17);","v)","v.visit([](auto","v1((short)123);","v2(v1);26.6","v2;","v3(std::move(v1));","v4(std::move(v1));","v;","valu","value)","value);","value;","variant","variant&","variant();","variant(doubl","variant(double&&);","variant(int","variant(int&&);","variant(str","variant(string&&);","variant(vari","variant(variant&&","variant,","variant/commontype.hpp","variant/findindexof.hpp","variant/printrec.cpp","variant/variant.cpp","variant/variant.hpp","variant/variantchoice.hpp","variant/variantchoiceassign.hpp","variant/variantchoicedestroy.hpp","variant/variantchoiceinit.hpp","variant/variantcopyassign.hpp","variant/variantcopyctortmpl.hpp","variant/variantdefaultctor.cpp","variant/variantdefaultctor.hpp","variant/variantdestroy.hpp","variant/variantdestroy17.hpp","variant/variantempty.hpp","variant/variantexception.cpp","variant/variantget.hpp","variant/variantis.hpp","variant/variantmovector.hpp","variant/variantpromote.cpp","variant/variantstorage.hpp","variant/variantstorageastuple.hpp","variant/variantstorageasunion.hpp","variant/variantvisit.hpp","variant/variantvisitimpl.hpp","variant/variantvisitresult.hpp","variant/variantvisitresultcommon.hpp","variant/variantvisitresultstd.hpp","variant/visit.cpp","variant::destroy()","variant::empty()","variant::get()","variant::is()","variant::operator=","variant::variant()","variant::variant(vari","variant::variant(variant&&","variant::visit(visitor&&","variant;","variant<>中的成员函数将在后面的小节中详细说明。","variantchoic","variantchoice()","variantchoice(t","variantchoice(t&&","variantchoice...","variantchoice::destroy()","variantchoice::destroy()...","variantchoice::discriminator;","variantchoice::operator=","variantchoice::operator=...;","variantchoice::operator=...拉取了基类中的赋值运算符：","variantchoice::variantchoice(t","variantchoice::variantchoice(t&&","variantchoice::variantchoice...;","variantchoice::variantchoice...拉取了所有基类的构造函数，例如variant继承了下列构造函数：","variantchoice;","variantchoiceassign.hpp","variantchoicedestroy.hpp","variantchoiceinit.hpp","variantcopyassign.hpp","variantcopyctor.hpp","variantcopyctortmpl.hpp","variantdefaultctor.hpp","variantdestroy.hpp","variantget.hpp","variantis.hpp","variantmovector.hpp","variantstorag","variantstorage,","variantstorage;","variantstorage<>","variantvisit.hpp:","variantvisitimpl(*this,","variantvisitimpl(std::forward(variant),","variantvisitimpl(std::move(*this),","variantvisitimpl(v&&","vis)","vis)&","vis,","visit(visitor&&","visitelementresult","visitelementresult<>得到所有可能的返回类型形成类型列表，最终通过类型列表的累加算法accumulate<>推导公共返回类型。当然也可以使用std::is_common_type_t来简化：","visitor","visitor&&","visitresult","visitresult;","visitresultt","visitresultt::type;","void","void*","{","{616","}","});","};","~variant()","为此c++17提供了std::launder()的解决办法，它以一个地址作为参数，只是简单的返回该地址，同时提示编译器这两个地址所存储的对象可能已经不同了。原文：","从另一个类型的可识别联合体初始化：","但是tuple<>的方法占用了过多的存储空间，union的方式无法使用继承，书中最终采用的方式是使用一个足够大的缓冲区来容纳所有可能的类型，并通过variantstorage::discriminator标识缓冲区中的数据应该解释为哪种类型（下标从1开始，0表示未存储数据），代码如下：","公共返回类型","初始化","判断可识别联合体是否存储值的empty()定义如下：","可以分别通过tuple<>和union来实现可识别联合体：","可以通过递归解决这个问题：","可识别联合体","可识别联合体中存储了一组可能类型之一的值，但是和传统的联合体不同的是可识别联合体知道当前其中存储的是什么类型，也就可以提高安全性。本章实现了variant<>，类似于std::variant，一个简单的应用如下：","可识别联合体初始化后也可以通过某种类型的值进行赋值，为此也通过use","可识别联合体可以被默认构造，但是并不是不存储值，而是用第一个类型的默认值初始化，这样就尽量避免了不存储值的特殊情况：","可识别联合体可以通过某种类型的初值初始化，为此通过use","可识别联合体的初始化和赋值","可识别联合体的定义如下：","后记","在c++17中也可以写为下面的形式：","在指定了返回类型r的情况下，返回类型就是r，而当未指定返回类型时（也就是r仍然为默认模板实参computedresulttype，参见26.2），就要推导可识别联合体中所有可能类型的值调用访问函数的返回类型的公共类型。","基类variantstorage为可识别的联合体提供存储，其余基类variantchoice...为可识别联合体提供标识——这是一种嵌套的展开参数包的方式，展开后将继承多个variantchoice<>，其中第一个模板参数是types中的每一个类型，第二个模板参数是types中的所有类型。将type...作为第二个模板参数传入到variantchoice<>中以使getdrived()返回派生类的引用用到了crtp技术。","如果为每一个简单的操作都实现类似的函数则要编写很多代码，解决办法是将访问函数作为参数：","如果原地析构正常完成而原地构造抛出了异常，则可识别联合体将处于未存储值的状态，例子如下：","如果访问函数有返回类型，就要保证无论可识别联合体中是什么类型，访问函数的返回值都可以转换为该类型，否则将不能编译，为此需要实现visitresult<>：","存储","所以只需要实现variantchoice<>的构造函数：","拷贝初始化最终转换为了26.4.1中的初始化：","拷贝和移动初始化","推导所有可能类型的公共返回类型的模板代码为：","提取操作从可识别联合体中获取某种类型的值：","提高运行效率的方法之一是尽量避免在内存中复制值，为此编译器将假设某些值在一段时间之内是不会变的，但是可识别联合体中的原地析构和构造可能让编译器做出错误的判断，从而引发各种bug。","最后是测试代码：","本章中的实现的variant<>在实例化时不能使用相同的类型，但是std::variant可以。","析构","析构时需要根据当前存储的类型释放缓冲区：","析构的最后将variantstorage::discriminator设置为了0，表示可识别联合体中未存储任何类型的值。","查询和提取","查询操作判断可识别联合体中存储的是否是某一种类型的值：","测试代码如下：","移动初始化类似：","移动赋值运算符一般要考虑自赋值的问题，因为当旧值和新值相同时，销毁后赋值的操作可能导致内存问题。不过在可识别联合体中不存在这个问题，因此类型相同时将调用类型的移动构造函数，自赋值的问题将被该类型的移动构造函数解决。","自赋值问题","设计","访问函数","访问函数的返回类型","赋值","赋值和构造类似，书中只有拷贝构造：","赋值抛出异常的问题","这种初始化方式可能会发生类型转换以匹配构造函数，测试代码如下：","这里使用的是原地new运算符，即在指针所指向的内存中构造t类型的对象。","这里的析构也是原地析构，即析构后不释放缓冲区。因为可识别联合体中存储的肯定是某种类型的数据，所以有且只有一个variantchoice::destroy()返回true。为了强制析构，可以将所有的destroy()都调用一遍：","通过某种类型的值初始化、赋值和析构","默认构造函数"],"2022-03-09-ch27-expression-templates.html":["\"exprops1a.hpp\"","\"sarray1.hpp\"","\"sarray2.hpp\"","\"sarrayops1.hpp\"","\"sarrayops2.hpp\"","#includ","(&orig!=this)","(a1","(access","(array","(int","(op1","(op1.size()==0","(rep","(sarray","(std::size_t","(std::size_t)","(t","(x[idx]*y[idx])。","*","*=","*this;","+","+=","...","//","0;","1.2*x","1.2*x返回array,","1.2;","27","27.1","27.2","27.2.1","27.2.2","27.2.3","27.2.4","27.2.5","27.3","27.4",":","=","?","a)","a,","a1","a1(a),","a1;","a1[a2[idx]];","a2","a2(b)","a2.size();","a2;","a_add","a_add,array>,","a_add<>和a_mult<>是不能出现在表达式的左边的，因为其中的下标运算符返回的是过期值，但是某些表达式模板应该是可以返回左值的，例如a_subscript<>：","a_add<>和a_mult<>的模板参数op1和op2既可以是数组，也可以是数组的运算结果，书中为了统一，定义了新的数组表示类模板array<>，其中仍然使用sarray<>来存储数据：","a_mult","a_mult,","a_scalar","a_scalar::operator[]返回s只是为了方便。","a_scalar;","a_subscript","a_trait","a_traits::exprref","a_traits>","addit","array","array&","array,","array,r2>>","array,r2>>(a_mult,r2>(a_scalar(s),","array:","array>","array>(a_add(a.rep(),b.rep()));","array>(a_mult(a.rep(),","array>>","arrays:","assert","assert(a.size()==b.size());","assert(size()==b.size());","assert(size()==orig.size());","assign","b)","b.rep()));","b[idx]会由于b[idx]的递归而最终展开为(1.2*x[idx])","chapter","class","comput","const","const&","const&;","constant","constexpr","constructor","const版本的array::operator[]返回decltype(auto)的原因是a_mult::operator[]和a_add::operator[]可能返回临时量，此时推导结果为非引用类型。","copi","copy(orig);","creat","data","decltype(auto)","default","delete[]","destructor:","each","element","explicit","expr_rep(rb)","expr_rep(s)","expr_rep;","express","exprref","exprtmpl/exprarray.hpp","exprtmpl/exprops1.hpp","exprtmpl/exprops1a.hpp","exprtmpl/exprops2.hpp","exprtmpl/exprops3.hpp","exprtmpl/exprscalar.hpp","exprtmpl/sarray1.cpp","exprtmpl/sarray1.hpp","exprtmpl/sarray2.cpp","exprtmpl/sarrayops1.hpp","exprtmpl/sarrayops2.hpp","first","free","gener","helper","idx","idx)","includ","index","init","init()","init();","initi","inner","int","k","main()","maximum","memori","multipl","node","object","op1(a),","op1.size()","op1.size()!=0","op1.size()==op2.size());","op1;","op1[idx]","op2","op2(b)","op2.size();","op2.size()==0","op2;","op2[idx];","oper","operand","operations,","operator*","operator+","operator=","operator[]","ordinari","orig)","partial","possibl","primari","private:","process","product","protected:","public:","rb)","refer","rep","repres","represent","request","result(a.size());","return","s(v)","s)","s,","s;","same","sarray","sarray&","sarray::operator*=","sarray::operator+=","sarray>,","sarray>>>","sarray>>类型的临时对象","sarray>>类型的对象，虽然还是临时对象，但是该临时对象中是x的引用，不会带来拷贝","scalar","scalar,","scalar:","scalars:","second","select","size","size()","special","std::size_t","storage(new","storage;","storage[idx];","storage_size(orig.size())","storage_size(s)","storage_size;","subscript","sum","t","t&","t[orig.size()]),","t[s]),","templat","template>","tmp","tmp(x);","tmp;","to)","trait","two","type","typenam","us","v)","valu","variabl","void","whether","x","x(1000),","x*i","x*y;","x*y产生临时量和读写次数多的原因在于编译器是根据表达式的优先级进行计算的，如果将整个表达式的计算推迟到最终的赋值运算，就可以生成最优的代码了，也就是在计算1.2*x","x*y产生了6000次读和3000次写","x*y的过程中保留结果的生成过程，这可以通过下面的类型保留：","x*y返回array,","x*y返回的临时对象类型为：","y(1000);","y;","zero","{","||","}","};","~sarray()","临时量和循环分割","减少到只有2000次读和1000次写。","创建了3个临时量，大小都为1000","后记","在引入表达式模板之前，先看一个数组运算的例子：","实际上27.2.4的分析并不是正确的，因为[]的在递归的过程中会进行函数调用，但是因为函数都很短小，所以内联可以解决问题。同时表达式模板还要求赋值的过程是不能覆盖后续计算需要的原数据。","将表达式作为模板实参","接下来会调用array的成员模板operator=，循环中的expr_rep[idx]","改进后的代码为：","数组类型","早期的解决办法是使用运算赋值运算符来避免创建临时量以节省构造和析构：","由于运算符的优先级没有改变，因此编译器的计算顺序如下：","算法不够高效的原因在于：","缺点在于写起来很繁琐。最理想的方式是编译器可以将代码转化为下面的形式：","表达式x","表达式模板","表达式模板a_add<>、a_mult<>和a_scalar<>定义如下：","表达式模板用来支持针对整个数组的数值运算。","表达式模板的性能和限制","表达式模板的赋值操作","表达式模板的运算符","表达式模板的运算符只需要将表示计算结果的数组以引用的方式传递到返回值中就可以了：","表达式求值","这个模板只支持a_subscript::a2中存储的是整数，或许在对称密码算法置换中用到。"],"2022-03-09-ch28-debugging-templates.html":["!=","\"tracer.hpp\"","#includ","&&","&input[9]+1);","(10","(int","(n_creat","(t","(t&","(typenam","*p","++i;","++n_created;","//","0)","0,","0;","1,","10","11","2,","27","28","28.1","28.2","28.3","28.4","28.5","28.6","3,","33","4,","5,","6,","7,","8","9","9,",":","=","==",">","array,","array[i]","assign","assignments()","assum","before)","bool","bool()","by:","c++11引入的static_cast关键字可以在编译时进行检查，例如可以使用下面的类型特征模板检查类型是否可以解引用：","call","chapter","class","clear","clear(p);","client","compar","comparison","comparisons()","const&","const&)","const&);","const&,","const*","const*,","const;","constexpr","constraint），这一类限制由于缺少特定的构造函数或者成员函数导致，第二类是语义限制，比如在要求模板实参支持运算符的语法限制下，可能就要求模板实参是具有偏序关系的。","constructor","convert","convertibletoboolarchetyp","core","core(p);","creations()","debug","debugging/hasderef.hpp","debugging/tracer.hpp","debugging/tracertest.cpp","decltype(test(nullptr))::value;","declval()","deref(typenam","destructions()","destructor","env)","equalitycomparable,","equalitycomparablearchetyp","exist","false_typ","find(equalitycomparablearchetyp","find(t","gener","generation(1)","generation;","hasderefer","i(&input[0],","i;","i=0;","identity;","ignore(*ptr);","ignore(t","index","initi","inlin","input:","input[]","int","int,","int;","integ","long","main()","mainclient;","max_live()","maximum","meaning:","middl","middle(i);","n","n,","n_assign","n_assigned;","n_compar","n_compared;","n_creat","n_created;","n_destroy","n_destroyed;","n_max_liv","n_max_live)","n_max_live;","number","o","object","oper","operator==(","oracl","p)","perform","pointer","prepar","print","private:","ptr)","public:","recomput","result","return","same","sampl","shallowcheck","shell","shell(mainclient);","sort","sorttrac","sorttracer'","static","std::cerr","std::false_typ","std::sort()","std::true_typ","std=c++17，在我的机器上输出为（只保留了关键部分）：","struct","t","t::index","templat","temporari","test(...);","test(identity())>*);","time","tracer","tracertest","tracertest.cpp","true_typ","two","type","typenam","up","update_max_live()","update_max_live();","us","v","valu","value(v),","value)","value;","values:","void","while(i","{","{}","}","};","一种可以检查语义的东西，姑且就叫神谕吧~","一般来说文档中会对模板实参提出需要满足的限制，因此可以根据这些限制构造一个测试类型（archetype）来测试。例如对于下面的模板代码：","下面是一个测试std::sort的追踪器：","前面的方法可以有效解决编译时问题，但是还有运行时的问题需要解决，为此可以设计一个追踪器（tracer）作为模板实参来记录模板代码的执行过程，通常追踪器也是测试类型。","可以构造下面的测试类型来测试：","后记","在实例化的过程中会报错，因为模板中使用的是!=运算符，而不是==。解决办法是重载!=运算符，或者修改实现（但最好不要这么做）。同样的方法也可以测试==运算符转换为bool类型的要求。","当模板代码嵌套层数过多时就会引发难以查找的错误：","模板对于开发者和使用者都会带来问题：对于模板的设计者，该如何保证模板针对任意类型的实参都有效？对于模板使用者，实例化出错时该如何进行调试？本章将模板实参的限制分为了两类，第一类是语法限制（syntact","模板调试","浅层初始化","测试代码如下：","测试类型","编译命令为g++","追踪器","错误原因在于从middle<>传入的int在clear<>中无法解引用。为了防止调用层数过多引起的错误，可以插入一些无用的代码进行浅层实例化：","静态断言"],"2022-01-05-appB-value-categories.html":["(and","(sinc","(that","(thi","(which","...","//","2nd","=","accept","allow","alway","appendix","appli","array","auto","b","b.1","b.1.1","b.2","b.2.1","b.3","b.4","better","bind","c++11","c++11后的值类型","c++14","c++17","c++17,","c++17.","c;","call","case,","categori","check","class","code","compil","conceptu","consid","const","const&)","const&);","construct","constructor","context:","conversion），这种转换保证了左值可以当作右值使用，以及机器会执行一条装载指令。","copi","copy.","copyabl","creat","declar","delet","delete;","denot","determin","did,","directli","doesn’t","elid","error","error:","exampl","example,","example.","express","f()","f(c);","f(std::move(v));","f(v);","f(x","f(x&&);","f(x());","first","generated).","glvalue，全称gener","guarantee)","hand","hence,","initi","instead,","int","int&","int&&","is,","issu","itself","lambda表达式","languag","lref1","lref2","lref3","lvalu","lvalue();","lvalue，glvalue中非xvalue的部分","lvalue，会被存储的值，包括lvalue和xvalu","made,","make_n()","make_n();","match","materi","materialization）","mean","modifi","movabl","move","n","n();","n(n","n(n&&)","n,","n.","n;","name","need","needed.","nfg","nonmodifi","n{};","object","ok","ok:","on","oper","optimization,","pass","point.","possibl","practice).","pre","previou","prior","produc","prvalu","prvalue();","prvalue.","prvalue，全称pur","public:","refer","result","return","rref1","rref2","rref3","rvalu","rvalues.","rvalue，包括xvalue和prvalu","rvalue，求值结果被用来初始化一个对象，或者是运算符的求值结果","second","side。不过后来在c语言中某些被const修饰的变量也可以存在于内存或者寄存器中，但却是不可修改的。c++扩展了右值的含义，对于类的右值，其也是可以在=左边的，此时的=应该理解为重载的=运算符。","side，相应的，右值（rvalue）来源于在=右边的值，r表示right","std::is_same_v","still","storag","subscripted）","temporari","temporary.","them,","therefor","those","though.)","true","type","unfortunately,","v;","valid","valu","value）更合适，这样左值的含义就更加广泛了：","value，可以被重用的值，具有固定的生命周期，姑且称为到期值","void","x","xrvalu","xvalu","xvalue();","xvalue)","xvalue，全称expir","yield","y中，y发生了的左值到右值的隐式转换（lvalu","{","}","};","上面的代码是可以直接在n中构造对象的，但是在c++17之前，这是一个优化措施，语言不能提供保证，并且因为n{}是一个右值，在要调用类n的移动构造函数来初始化n时还会报错，这是因为移动构造函数被删除了。原文：","下面是c++11扩展后的值类型：","不返回引用的函数返回值","临时实体化是左值到右值转换的逆转换，可以将prvalue转换为xvalue，也就是用rvalue临时初始化一个xvalue，一般发生在下面的情况中：","临时实体化（temporari","传统意义下的左值和右值","使用sizeof和typeid对纯右值进行求值","值类型","内置算术运算符的结果","到期值的例子：","双括号版本的decltype((x))的结果为：","取地址运算符的结果","变量和函数变量","右值就是纯粹数学意义上的、不会被存储的、只能使用一次的值。总之，所有的临时量都是右值，但是引用右值的引用不是右值。原文：","右值的例子：","大多数字面值","如果x为xvalue，则为type&&","如果x为左值，则为type&","如果x为纯右值，则为type","字符串字面值","对于两个左值x和y，在表达式x","对对象类型的右值引用的强制类型转换的结果","左值到右值的转换","左值的例子：","左值（lvalue）是在内存或者寄存器中的值。起初这种说法来源于c语言中在=左边的值，l表示left","引用类型","引用绑定到纯右值","或许将左值中的l理解为局部化变量（localiz","指针解引用后的对象","指针解引用的结果","放入std::initializer_list中的纯右值","数据成员","最后是一个值类型的例子：","纯右值数组转换为指针","表达式中的变量","表达式的最终求值结果，或者表达式被转换为void","访问类的纯右值成员","返回右值引用的函数，例如std::move","返回左值引用的函数","返回左值引用的函数返回值","这里有一个有趣的例子：","通过decltype识别值类型","通过下标访问的纯右值数组（an"],"2022-03-02-appC-overload-resolution.html":["\"hello\"});","\"initializer\",","\"list\"});","#1","#2","#3","#4","#5","#6","#includ","&&;","&;","'c';","(#2","(#4","(#6","();","(*funcptr)(vector","(double,","(int","(machine*","(matrix*","(see","(std::size_t)","(std::size_t);",")","*thi",",","...","//","0;","1.2;","2,","2});","3,","3.4);","4,","5);","5)包含三个参数：funcobj、3和5。如果解析为函数调用运算符，则后两个参数都需要进行标准转换；而如果解析为functype类型的函数指针，则需要将funcobj隐式转换为函数指针类型——二者对比没有更为匹配的重载函数。","5});",":","=","access","activate(indirectfunctor","allow","ambigu","ambiguity!","another,","appendix","arr1({1,","arr1({10u,","arr2(array)","arr2({\"hello\",","arr2({10,","array","array(std::initializer_list)","badstr","badstring(char","base","below)","better","bignum","bignum(doubl","bignum(long","bignum(std::str","bizarre(t&&,","bizarre(val,","bn1(100103);","bn1;","bn2(\"7057103224.095764\");","buffer","byte","c","c.1","c.2","c.2.1","c.2.2","c.3","c.3.1","c.3.2","c.3.3","c.3.4","c.3.5","c.3.6","call","candid","candidate.","char","char&","char*","charact","check(bool);","check(m);","check(void*);","class","cmplx)","commonprocess","conflict","consid","const&","const&)","const&);","const*","const*);","const;","convers","conversion)","correspond","count(int);","count(object);","deduc","deduct","defin","deriv","doesn’t","doubl","double&","double&&","double&&);","double();","double)","dump","ellipsis)","error:","explicit","f(7);","f(int);","f(std::initializer_list)","f(t);","f1();","f1(4);","f1(double);","f1(int);","f2()","f2(char);","f2(int);","f2(true);","f3()","f3(...);","f3(7);","f3(x);","funcobj(3,","funcobj)","functyp","functype*()","impli","implicit","indirectfunctor","initdemo()","int","int);","interfac","k","long();","lvalu","m)","machin","machine)","main()","match","n);","null","numelems(matrix","numelems(vector","numelems;","object)","ok:","old","on","oper","operator()(double,","operator[]","overload","overload/initlist.cpp","overload/initlistctor.cpp","overload/initlistovl.cpp","ovl(std::initializer_list)","paramet","perfect","possibl","print","process(deriv","promot","public","public:","rearrang","refer","report(int","report(int&);","report(int);","requir","resolut","return","rule","rvalu","s","s&","s()","s().f1();","s().f2();","s().f3();","select","serialize(commonprocesses*);","serialize(interface*);","serialize(machine);","short()","standard","std::cout","str(\"correkt\");","str[5]","str[5]包含*this和5两个参数，如果解析为badstring::operator[]，由于std::size_t一般为无符号类型，所以5需要进行类型提升转换；而如果解析为语言内置的下标运算符，由于其参数类型一般为ptrdiff_t（也就是int），则只需要隐式将*this转换为char*即可——二者对比没有更为匹配的重载函数。","strange(1.2,","strange(t&&,","strange(val,","string:","stronger","struct","subscripting:","t","t&&);","templat","termin","through","type","us","user","val","val);","valu","vec)","void","wors","x","x&和x&&，如果重载了以x和x&为参数的函数，则有可能出现模糊调用：","x(int);","{","{}中的参数可以转换为std::initializer_list、通过std::initializer_list构造的对象、通过多个参数构造的对象和聚合类型的对象：","}","};","下面是一个例子：","从c++11开始，某一类型x可以匹配的类型包括x、x&、const","任何情况下，非模板函数的匹配度都比模板实例化后的函数匹配度高：","任意指针类型到void*类型的转换","关于指针的标准转换包括：","其它重载情景","具有继承关系的类之间的转换总是在具有更近继承关系的类之间进行：","函数和代理函数","初始化列表的转换","判断最匹配的函数是否被删除","剔除不匹配的函数形成可行函数集合","匹配构造函数","只考虑以std::initializer_list为唯一非默认模板参数的构造函数","和变参函数的匹配，任意参数都可以和变参函数匹配（除了具有非平凡的构造函数的类类型）","基类成员指针到派生类成员指针的转换","如果一个函数更为匹配，那么每一个参数都至少应该和另外一个函数一样或者更为匹配。原文：","如果可行函数集合中既包括静态成员函数，也包括非静态成员函数，则重载解析规则会忽略this参数。","如果第1阶段没有匹配的函数，则尝试将初始化列表分割为多个参数来构造对象","完美匹配导致的模糊调用","完美匹配，形参和实参类型一样，或者形参类型是实参类型的引用（也可以包含const或者volatile）","实例化函数模板","实参和形参的匹配程度优先级如下：","当一个类重载了函数调用运算符，或者可以隐式转换为函数指针或者函数引用类型时，可能导致模糊调用：","当用初始化列表构造对象时，重载解析分为两个阶段（例外的情况是初始化列表为空时会将跳过第1阶段）：","成员函数中的隐含参数","指针到bool类型的转换","指针转换","根据名称形成重载函数集合","此外这些规则是在模板参数推导之后起作用的：","注意，类型提升转换的优先级高于标准转换的优先级：","派生类指针到基类指针的转换","确定是否存在最匹配的调用目标","第3种和第4种转换的优先级比第2种转换的优先级高，第2种转换比第1种转换的优先级高：","简化的重载解析规则","经用户定义转换后的匹配，也包括隐式转换，例如通过构造函数转换","经过标准转换后的匹配，例如整型转化为浮点型，派生类转换为公有继承的基类","经过简单转换后的匹配，例如数组退化为指针，指针变为const指针","经过类型提升转换后的匹配，即位宽较小的类型提升为位宽较大的类型","获取函数指针","调用非静态成员函数时，参数种包含隐含参数*this，为左值引用类型（如果是const成员函数则为常量左值引用类型），*this的解析过程和其它参数类似，因此可能会导致模糊调用：","这一部分应该是在第16章之后的，不过忘记了。","这个例子和c.2.1中的原理是类似的。funcobj(3,","重载细节","重载解析规则","重载解析规则应用在调用具名函数时，大致分为以下几个步骤：","重载解析规则的应用范围","隐式转换可以由一系列转换组成，但是最多只能包含一个用户定义的转换。例如下面的代码包含三个隐式转换，但是只有一个用户定义的隐式转换：","隐式转换序列","非模板和特化模板的匹配","默认情况下this为引用类型，但是从c++11开始可以显示声明为引用类型，同时允许右值对象调用隐式声明为左值引用类型的成员函数，例如："]},"length":31},"tokenStore":{"root":{"0":{"8":{"1":{"5":{"docs":{},"_":{"docs":{},"b":{"7":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}}}},"docs":{}},"docs":{}},"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.002726446531354135},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.011764705882352941},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.013544018058690745},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.017114914425427872},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"x":{"7":{"docs":{},"f":{"docs":{},"}":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},"f":{"docs":{},"f":{"0":{"0":{"docs":{},"_":{"docs":{},"b":{"7":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}}}},"docs":{}},"docs":{}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},".":{"0":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},")":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"且":{"docs":{},"没":{"docs":{},"有":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"能":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"f":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"只":{"docs":{},"能":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},"1":{"0":{"0":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"8":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":2.0060240963855422},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},".":{"1":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"2":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"3":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}},".":{"1":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"docs":{}}},"4":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"5":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"6":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"docs":{}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}},"1":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":2.5012886597938144},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},".":{"1":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},".":{"1":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"2":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"3":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"docs":{}}},"2":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},".":{"1":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"2":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"3":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"docs":{}}},"4":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"5":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"6":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"7":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"docs":{}}},"2":{"0":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":2.5006882312456984},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},".":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},".":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"4":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"5":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}}},"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},".":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"4":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"5":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}}},"4":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},".":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"4":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"5":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"6":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}}},"5":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},".":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}}},"6":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"3":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":2.501592356687898}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},".":{"1":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"2":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},".":{"1":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"2":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"4":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"docs":{}}},"3":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},".":{"1":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"2":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"3":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}},"4":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"5":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"6":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"7":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"docs":{}}},"4":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},".":{"1":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"2":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"docs":{}}},"5":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"docs":{}}},"4":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":3.3348577235772354}},".":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"2":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},".":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"2":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"docs":{}}},"3":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},".":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"2":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"3":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"docs":{}}},"4":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},".":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"2":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"3":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"docs":{}}},"5":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},".":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"2":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"docs":{}}},"6":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"7":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"8":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"docs":{}}},"5":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":2.0005941770647655}},"}":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},".":{"1":{"0":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"4":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"5":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"6":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"4":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"5":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"6":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"4":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"7":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"8":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},".":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"4":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"9":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}},"6":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":2.5009041591320074}},".":{"1":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},".":{"1":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"2":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{}}},"2":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},".":{"1":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"2":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"3":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"4":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"5":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{}}},"3":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},".":{"1":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"2":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"3":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"4":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{}}},"4":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"5":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"6":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"7":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":2.503076923076923}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},".":{"1":{"0":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"1":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"2":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"3":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"4":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"5":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"6":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"7":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"8":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"9":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"docs":{}}},"8":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":2.0017391304347827},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},".":{"1":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"2":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"3":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"4":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"5":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"6":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"7":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"docs":{}}},"9":{"7":{"docs":{},")":{"docs":{},".":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"9":{"4":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}},"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":2.500302938503484}},".":{"1":{"0":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"4":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"4":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"节":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"t":{"2":{"docs":{},"需":{"docs":{},"要":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"才":{"docs":{},"能":{"docs":{},"相":{"docs":{},"加":{"docs":{},"求":{"docs":{},"和":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"存":{"docs":{},"在":{"docs":{},"+":{"docs":{},"未":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"4":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"4":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"5":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"6":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"4":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"7":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"8":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"4":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"5":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"节":{"docs":{},"中":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"不":{"docs":{},"太":{"docs":{},"容":{"docs":{},"易":{"docs":{},"直":{"docs":{},"接":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"还":{"docs":{},"有":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"支":{"docs":{},"持":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"9":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"docs":{}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":2.501904761904762},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},".":{"1":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},".":{"1":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"3":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"docs":{}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},"*":{"docs":{},"x":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372}},"返":{"docs":{},"回":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"3":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},".":{"1":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"3":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"docs":{}}},"4":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"5":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"6":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},".":{"1":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"3":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"docs":{}}},"7":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"]":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},">":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},":":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0054249547920434},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},"s":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"/":{"3":{"0":{"0":{"0":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}},"docs":{}},"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}},"docs":{}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}},"2":{"0":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":2.0009727626459144}},".":{"1":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"2":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"3":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},".":{"1":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"2":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"3":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"4":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"docs":{}}},"4":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},".":{"1":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"2":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"docs":{}}},"5":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"6":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"7":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"docs":{}}},"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":2.5006038647342996}},".":{"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},".":{"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"2":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"docs":{}}},"2":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},".":{"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"2":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"3":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"docs":{}}},"3":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},".":{"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"2":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"docs":{}}},"4":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"5":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"docs":{}},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"2":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":1.6679738562091502}},".":{"1":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"2":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"3":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"4":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"5":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"6":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"7":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"docs":{}},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":3.334403997144896}},".":{"1":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},".":{"1":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"2":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"4":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}}},"2":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},".":{"1":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}}},"4":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"5":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"6":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"7":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}}},"4":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":3.334249084249084}},".":{"1":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"2":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},".":{"1":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"2":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"3":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"4":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"5":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"6":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"7":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"docs":{}}},"3":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},".":{"1":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"docs":{}}},"4":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"5":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"6":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"docs":{}}},"5":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":3.333907386146192}},".":{"1":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},".":{"1":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"2":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"docs":{}}},"2":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},".":{"1":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"5":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"docs":{}}},"3":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},".":{"1":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"、":{"2":{"5":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},"、":{"2":{"5":{"docs":{},".":{"3":{"docs":{},".":{"3":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"给":{"docs":{},"出":{"docs":{},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"配":{"docs":{},"套":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"也":{"docs":{},"缺":{"docs":{},"少":{"docs":{},"省":{"docs":{},"略":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"反":{"docs":{},"转":{"docs":{},"算":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"2":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"3":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"4":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"5":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"6":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"docs":{}}},"4":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"5":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},".":{"1":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"2":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"docs":{}}},"6":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"7":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"docs":{}}},"6":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":2.500840336134454}},".":{"1":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"2":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"3":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"中":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"查":{"docs":{},"询":{"docs":{},"和":{"docs":{},"提":{"docs":{},"取":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"将":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"冗":{"docs":{},"长":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"语":{"docs":{},"句":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"打":{"docs":{},"印":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},".":{"1":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"2":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"3":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"docs":{}}},"5":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},".":{"1":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"2":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"docs":{}}},"6":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"7":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"docs":{}},":":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"7":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":2.5011286681715577},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},".":{"1":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"2":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},".":{"1":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"2":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"3":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"4":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"5":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"docs":{}}},"3":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"4":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"docs":{}}},"8":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":2.502444987775061}},".":{"1":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"2":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"3":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"4":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"5":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"6":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"docs":{}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":2.5010615711252653},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{"./":{"ref":"./","tf":0.1}}},".":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"1":{"0":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"1":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},".":{"1":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"2":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{}}},"2":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},"f":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}},"3":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},".":{"1":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{}}},"4":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"5":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"6":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"7":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"8":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"9":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{}},":":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"n":{"docs":{},"d":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0054249547920434},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}},"*":{"docs":{},"p":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"/":{"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"3":{"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"5":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":2.0019083969465647},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677}},".":{"0":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643}}}}},"1":{"4":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"2":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"3":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"4":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}},"5":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"docs":{}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"x":{"3":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"4":{"0":{"0":{"docs":{},"u":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565}}},"1":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"2":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},".":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"docs":{}},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"4":{"docs":{},".":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"docs":{}}},"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":2.5014064697609},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},")":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"三":{"docs":{},"参":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"7":{"docs":{},".":{"2":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"而":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}},">":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}},".":{"0":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},".":{"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"2":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"3":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}}},"2":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"3":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"4":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},".":{"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"2":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"3":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"4":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"5":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}}},"5":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}},"的":{"docs":{},"本":{"docs":{},"意":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"元":{"docs":{},"组":{"docs":{},"，":{"5":{"docs":{},"的":{"docs":{},"本":{"docs":{},"意":{"docs":{},"是":{"docs":{},"从":{"docs":{},"其":{"docs":{},"它":{"docs":{},"的":{"docs":{},"元":{"docs":{},"组":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"5":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":2.5007987220447285},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}},".":{"1":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"2":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"3":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"4":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"5":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},".":{"1":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"2":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"6":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"7":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"8":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"、":{"3":{"docs":{},"和":{"5":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"则":{"docs":{},"后":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"标":{"docs":{},"准":{"docs":{},"转":{"docs":{},"换":{"docs":{},"；":{"docs":{},"而":{"docs":{},"如":{"docs":{},"果":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"—":{"docs":{},"—":{"docs":{},"二":{"docs":{},"者":{"docs":{},"对":{"docs":{},"比":{"docs":{},"没":{"docs":{},"有":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}}},"6":{"2":{"7":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"docs":{}},"8":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":2.0016666666666665}},".":{"1":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"2":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"3":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"4":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"5":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"6":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"docs":{}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},",":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"7":{"7":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":2.501801801801802}},".":{"1":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"2":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},")":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"两":{"docs":{},"参":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"三":{"docs":{},"参":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"中":{"docs":{},"的":{"docs":{},"r":{"docs":{},"t":{"docs":{},"没":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"推":{"docs":{},"导":{"docs":{},"其":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"匹":{"docs":{},"配":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},".":{"1":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"2":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"3":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"docs":{}}},"3":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"4":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},".":{"1":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"docs":{}}},"5":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"6":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"7":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"docs":{}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933}}}},"8":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":2.0019120458891013},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},".":{"1":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"2":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"3":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"4":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},".":{"1":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"docs":{}}},"5":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"6":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"docs":{}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"9":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":2.001277139208174},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"%":{"2":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"docs":{}}}},"3":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}},"docs":{}}}},"4":{"docs":{},"!":{"docs":{},"=":{"0":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}}},"docs":{}}}},"docs":{}},".":{"1":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},".":{"1":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"2":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"docs":{}}},"2":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"3":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"4":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"5":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"6":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"docs":{}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},",":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"docs":{},"c":{"1":{"0":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"1":{"docs":{},"(":{"2":{"2":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}},"docs":{}}},"2":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"m":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}},"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"(":{"2":{"2":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}},"docs":{}}},"2":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}},"(":{"2":{"2":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}},"docs":{}}},"3":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"4":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"5":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"6":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"7":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.04819277108433735},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.020700636942675158},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.008318478906714201},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":2.5015408320493067}},"+":{"1":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{},"+":{"0":{"3":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"docs":{}},"1":{"1":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"中":{"docs":{},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"移":{"docs":{},"动":{"docs":{},"语":{"docs":{},"义":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"（":{"docs":{},"没":{"docs":{},"错":{"docs":{},"就":{"docs":{},"是":{"docs":{},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"个":{"docs":{},"点":{"docs":{},"）":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"或":{"docs":{},"者":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"检":{"docs":{},"查":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"检":{"docs":{},"查":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"4":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"开":{"docs":{},"始":{"docs":{},"支":{"docs":{},"持":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"7":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},"支":{"docs":{},"持":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}},"开":{"docs":{},"始":{"docs":{},"支":{"docs":{},"持":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"元":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"作":{"docs":{},"用":{"docs":{},"于":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"带":{"docs":{},"_":{"docs":{},"v":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{},"来":{"docs":{},"简":{"docs":{},"化":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"产":{"docs":{},"生":{"docs":{},"布":{"docs":{},"尔":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"型":{"docs":{},"别":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"i":{"docs":{},"f":{"docs":{},"语":{"docs":{},"句":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"回":{"docs":{},"顾":{"docs":{},"第":{"4":{"docs":{},"章":{"docs":{},"中":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"i":{"docs":{},"f":{"docs":{},"的":{"docs":{},"改":{"docs":{},"写":{"docs":{},"版":{"docs":{},"本":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{},"化":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"以":{"docs":{},"下":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"形":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004}}},"之":{"docs":{},"前":{"docs":{},"要":{"docs":{},"求":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"要":{"docs":{},"完":{"docs":{},"全":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"有":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"中":{"docs":{},"取":{"docs":{},"消":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}}}},"docs":{}},"9":{"8":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.1},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"设":{"docs":{},"置":{"docs":{},"了":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"对":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"修":{"docs":{},"改":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"在":{"docs":{},"解":{"docs":{},"析":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"就":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"必":{"docs":{},"等":{"docs":{},"到":{"docs":{},"两":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"在":{"docs":{},"解":{"docs":{},"析":{"docs":{},"时":{"docs":{},"就":{"docs":{},"能":{"docs":{},"发":{"docs":{},"现":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"要":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"特":{"docs":{},"化":{"docs":{},"和":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"就":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"一":{"docs":{},"般":{"docs":{},"要":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"针":{"docs":{},"对":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"还":{"docs":{},"有":{"docs":{},"很":{"docs":{},"多":{"docs":{},"问":{"docs":{},"题":{"docs":{},"没":{"docs":{},"有":{"docs":{},"规":{"docs":{},"定":{"docs":{},"，":{"docs":{},"取":{"docs":{},"决":{"docs":{},"于":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"书":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"支":{"docs":{},"持":{"3":{"docs":{},"种":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"docs":{},"c":{"docs":{},"风":{"docs":{},"格":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"5":{"docs":{},".":{"4":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"四":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"声":{"docs":{},"明":{"docs":{},"在":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"编":{"docs":{},"译":{"docs":{},"的":{"docs":{},"很":{"docs":{},"慢":{"docs":{},"，":{"docs":{},"预":{"docs":{},"编":{"docs":{},"译":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"技":{"docs":{},"术":{"docs":{},"就":{"docs":{},"是":{"docs":{},"提":{"docs":{},"取":{"docs":{},"公":{"docs":{},"共":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"提":{"docs":{},"前":{"docs":{},"编":{"docs":{},"译":{"docs":{},"好":{"docs":{},"。":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"可":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"名":{"docs":{},"称":{"docs":{},"分":{"docs":{},"类":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}},"名":{"docs":{},"称":{"docs":{},"分":{"docs":{},"类":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"之":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"源":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"解":{"docs":{},"析":{"docs":{},"是":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},">":{"docs":{},">":{"docs":{},"总":{"docs":{},"是":{"docs":{},"会":{"docs":{},"被":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"右":{"docs":{},"移":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"在":{"docs":{},"其":{"docs":{},"中":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"格":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"只":{"docs":{},"在":{"docs":{},"需":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"类":{"docs":{},"大":{"docs":{},"小":{"docs":{},"或":{"docs":{},"者":{"docs":{},"访":{"docs":{},"问":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"时":{"docs":{},"才":{"docs":{},"会":{"docs":{},"对":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}},"在":{"docs":{},"检":{"docs":{},"查":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"时":{"docs":{},"，":{"docs":{},"总":{"docs":{},"是":{"docs":{},"假":{"docs":{},"设":{"docs":{},"为":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.011428571428571429},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.008438818565400843},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.04666666666666667},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.006535947712418301},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0045207956600361665},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.011597938144329897},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}},":":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"s":{"docs":{},"e":{"1":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"2":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.006888633754305396}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.014652014652014652},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.008610792192881744},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}}},".":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":2.502680965147453}}},"y":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}},"c":{"docs":{},"h":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"u":{"docs":{},"s":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"p":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":2.5},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":2.5},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":2},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":2.5},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":2.5},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":2},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":2.5},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":2},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":2},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":2},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":2.5},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":2.5},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":2.5},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":3.333333333333333},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":2},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":2.5},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":2.5},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":2},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":2.5},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":2},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":2.5006038647342996},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":1.6679738562091502},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":3.333333333333333},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":3.333333333333333},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":3.333333333333333},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":2.500840336134454},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":2.5},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":2.5}}}}}},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.009541984732824428},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0035650623885918},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"*":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}},"]":{"docs":{},"’":{"docs":{},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"非":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"而":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"会":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"且":{"docs":{},"三":{"docs":{},"参":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"又":{"docs":{},"返":{"docs":{},"回":{"docs":{},"了":{"docs":{},"该":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"导":{"docs":{},"致":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"中":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"悬":{"docs":{},"垂":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"t":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"p":{"docs":{},"f":{"docs":{},"为":{"docs":{},"f":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"{":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},">":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},"&":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"n":{"docs":{},"g":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"m":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"e":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"x":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"i":{"docs":{},"l":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":2.0038240917782026},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}},"u":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.008565310492505354},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}},"o":{"docs":{},"s":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.00641025641025641}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},">":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"再":{"docs":{},"次":{"docs":{},"引":{"docs":{},"用":{"docs":{},"嵌":{"docs":{},"入":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"提":{"docs":{},"示":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"o":{"docs":{},"n":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}}}}}}}},"a":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"&":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"t":{"1":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"docs":{}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"n":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"s":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.010615711252653927},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.019083969465648856},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00718849840255591},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.011666666666666667},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.009009009009009009},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0053475935828877},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.010434782608695653},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.009057971014492754},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.0196078431372549},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.00975889781859931},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0058823529411764705},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.011286681715575621},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"&":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.013333333333333334},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.01910828025477707},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.015267175572519083},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.011251758087201125},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.011980830670926517},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.009009009009009009},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.009560229445506692},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.008939974457215836},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.022608695652173914},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.018115942028985508},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.01437908496732026},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.03214695752009185},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.01680672268907563},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.03724604966139955},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.007334963325183374},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.008492569002123142},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00718849840255591},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}}},"传":{"docs":{},"递":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"分":{"docs":{},"配":{"docs":{},"地":{"docs":{},"址":{"docs":{},"了":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"不":{"docs":{},"再":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"了":{"docs":{},"。":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"用":{"docs":{},"t":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"t":{"2":{"docs":{},"时":{"4":{"docs":{},"比":{"5":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"4":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"导":{"docs":{},"致":{"docs":{},"了":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}},"，":{"docs":{},"常":{"docs":{},"量":{"docs":{},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}},"和":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"优":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"非":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}},"折":{"docs":{},"叠":{"docs":{},"后":{"docs":{},"模":{"docs":{},"板":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}},"&":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"，":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"后":{"docs":{},"模":{"docs":{},"板":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}},"比":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}},",":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"*":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0036352620418055137},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}},"和":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"为":{"docs":{},"(":{"docs":{},"a":{"2":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{}}}}},"docs":{}}}}}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},",":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},">":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.022944550669216062},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.007270524083611027},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.005836575875486381},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.014989293361884369},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.010073260073260074},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004018369690011481},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"用":{"docs":{},"于":{"docs":{},"提":{"docs":{},"示":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"被":{"docs":{},"计":{"docs":{},"算":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"，":{"docs":{},"功":{"docs":{},"能":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"只":{"docs":{},"是":{"docs":{},"迫":{"docs":{},"使":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"条":{"docs":{},"件":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"v":{"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},",":{"docs":{},"t":{"docs":{},">":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"v":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"会":{"docs":{},"被":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"为":{"docs":{},"假":{"docs":{},"，":{"docs":{},"则":{"docs":{},"要":{"docs":{},"求":{"docs":{},"以":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"存":{"docs":{},"在":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"得":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}},"是":{"docs":{},"在":{"docs":{},"两":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"中":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}}},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"o":{"docs":{},"r":{"1":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"s":{"docs":{},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"类":{"docs":{},"限":{"docs":{},"制":{"docs":{},"由":{"docs":{},"于":{"docs":{},"缺":{"docs":{},"少":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"导":{"docs":{},"致":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"类":{"docs":{},"是":{"docs":{},"语":{"docs":{},"义":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"在":{"docs":{},"要":{"docs":{},"求":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"支":{"docs":{},"持":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"语":{"docs":{},"法":{"docs":{},"限":{"docs":{},"制":{"docs":{},"下":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"就":{"docs":{},"要":{"docs":{},"求":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"是":{"docs":{},"具":{"docs":{},"有":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"。":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"3":{"docs":{},"]":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"4":{"docs":{},"]":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"不":{"docs":{},"会":{"docs":{},"因":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"换":{"docs":{},"错":{"docs":{},"误":{"docs":{},"而":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"只":{"docs":{},"能":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"没":{"docs":{},"有":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{},"]":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"docs":{}},"(":{"docs":{},"&":{"docs":{},"a":{"docs":{},")":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"b":{"docs":{},")":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},")":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"docs":{}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0048638132295719845},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"第":{"docs":{},"二":{"docs":{},"条":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"，":{"docs":{},"t":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"还":{"docs":{},"会":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"左":{"docs":{},"值":{"docs":{},"）":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"引":{"docs":{},"用":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"规":{"docs":{},"则":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},"，":{"docs":{},"明":{"docs":{},"显":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"想":{"docs":{},"要":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}}},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"返":{"docs":{},"回":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"和":{"docs":{},"a":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"可":{"docs":{},"能":{"docs":{},"返":{"docs":{},"回":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"非":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"s":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},">":{"docs":{},">":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"风":{"docs":{},"格":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"是":{"docs":{},"指":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"所":{"docs":{},"需":{"docs":{},"要":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"t":{"2":{"docs":{},">":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.005591054313099041},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},">":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},">":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"(":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"d":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"x":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},"s":{"docs":{},".":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"指":{"docs":{},"针":{"docs":{},"、":{"docs":{},"引":{"docs":{},"用":{"docs":{},"、":{"docs":{},"数":{"docs":{},"组":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"、":{"docs":{},"模":{"docs":{},"板":{"docs":{},"标":{"docs":{},"识":{"docs":{},"等":{"docs":{},"）":{"docs":{},"从":{"docs":{},"而":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"代":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"视":{"docs":{},"为":{"docs":{},"代":{"docs":{},"换":{"docs":{},"相":{"docs":{},"关":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"i":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"e":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"转":{"docs":{},"换":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"左":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"当":{"docs":{},"作":{"docs":{},"右":{"docs":{},"值":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"机":{"docs":{},"器":{"docs":{},"会":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"条":{"docs":{},"装":{"docs":{},"载":{"docs":{},"指":{"docs":{},"令":{"docs":{},"。":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}}}},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"是":{"docs":{},"借":{"docs":{},"助":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"x":{"7":{"docs":{},"中":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"不":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"引":{"docs":{},"入":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"p":{"docs":{},"i":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.010615711252653927},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.006389776357827476},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.013333333333333334},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.012612612612612612},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.013404825737265416}},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"d":{"docs":{},"e":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},".":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"l":{"docs":{},"l":{"1":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"2":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"3":{"docs":{},"]":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"docs":{}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"&":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.010434782608695653},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"o":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}},"n":{"docs":{},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.019130434782608695}},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"i":{"docs":{},"n":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}},"e":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},"o":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"o":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":2.523354564755839},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.009541984732824428},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.019968051118210862},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.03614457831325301},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.011597938144329897},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0364762560220234},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.030254777070063694},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.025914634146341462},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.009506833036244802},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.028933092224231464},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.021538461538461538},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.020869565217391306},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004241139048773099},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.014591439688715954},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.03683574879227053},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.011764705882352941},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0641025641025641},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0269804822043628},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.010084033613445379},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.01580135440180587},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.014669926650366748},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.01386748844375963}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"”":{"docs":{},"?":{"docs":{},"）":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}},"）":{"docs":{},"有":{"docs":{},"时":{"docs":{},"指":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"指":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"类":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"l":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301}},"接":{"docs":{},"口":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"接":{"docs":{},"口":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"和":{"docs":{},"调":{"docs":{},"用":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"像":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"样":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.014331210191082803},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"o":{"docs":{},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"&":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"s":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}},"风":{"docs":{},"格":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"处":{"docs":{},"理":{"docs":{},"起":{"docs":{},"来":{"docs":{},"非":{"docs":{},"常":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"由":{"docs":{},"传":{"docs":{},"值":{"docs":{},"和":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"时":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"单":{"docs":{},"独":{"docs":{},"重":{"docs":{},"载":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.007961783439490446},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"p":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}},";":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}}},"*":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006194081211286993},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.007961783439490446},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},">":{"docs":{},"*":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"&":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},".":{"1":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"2":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},".":{"1":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"2":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"docs":{}}},"3":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},".":{"1":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"2":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"3":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"4":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"5":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"6":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"docs":{}}},"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"<":{"docs":{},">":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"{":{"docs":{},"x":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.008695652173913044}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.010434782608695653}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}}}}}}}}}}}},"x":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},"e":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.003663003663003663},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"(":{"docs":{},"{":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"}":{"docs":{},")":{"docs":{},">":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"x":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"e":{"1":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"2":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"3":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.1}}}}},"r":{"docs":{},"r":{"1":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"2":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"3":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"docs":{},"o":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.007207207207207207},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.033205619412515965},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.01032346868547832},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.009506833036244802},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.009041591320072333},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}}},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"，":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"）":{"docs":{},"”":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"就":{"docs":{},"被":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"了":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"读":{"docs":{},"作":{"docs":{},"s":{"docs":{},"f":{"docs":{},"e":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},".":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"n":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"1":{"1":{"docs":{},":":{"5":{"3":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"docs":{}},"docs":{}}},"3":{"docs":{},":":{"3":{"0":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"2":{"2":{"docs":{},":":{"2":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"docs":{}},"docs":{}}},"8":{"docs":{},":":{"4":{"9":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}}}},"docs":{}},"docs":{}}},"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"docs":{}}}}}}},"docs":{}}}}}},"?":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"t":{"docs":{},"u":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":2.5022573363431153},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},"r":{"docs":{},"b":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"s":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"/":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"a":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"docs":{}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"docs":{}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},".":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"l":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"s":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"r":{"docs":{},"a":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"c":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},"l":{"docs":{},"i":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"e":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"+":{"docs":{},"+":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0074309978768577496},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}},"是":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"任":{"docs":{},"何":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"传":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"将":{"docs":{},"其":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"中":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"初":{"docs":{},"值":{"docs":{},"来":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.032908704883227176},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.03435114503816794},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.029552715654952075},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.00902061855670103},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0035650623885918},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"s":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},".":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}}}}}},"s":{"docs":{},"(":{"docs":{},"{":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"}":{"docs":{},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},"}":{"docs":{},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"z":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0074309978768577496},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299}}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}},"docs":{}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"取":{"docs":{},"消":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"但":{"docs":{},"还":{"docs":{},"是":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"大":{"docs":{},"括":{"docs":{},"号":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"即":{"docs":{},"使":{"docs":{},"没":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"列":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"s":{"docs":{},"e":{"docs":{},"w":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"s":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"s":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0030193236714975845},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"o":{"docs":{},"o":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}}}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}},"o":{"docs":{},"y":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}},"s":{"docs":{},"i":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},"n":{"docs":{},"d":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004241139048773099}}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"<":{"docs":{},">":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":2}}}}}}},"d":{"docs":{},",":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}},"i":{"docs":{},"f":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667}}}}},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"<":{"docs":{},">":{"docs":{},"一":{"docs":{},"般":{"docs":{},"写":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"处":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"<":{"docs":{},">":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876}},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"）":{"docs":{},"包":{"docs":{},"括":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"实":{"docs":{},"体":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}}},"u":{"docs":{},"m":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.007494646680942184}}}},"v":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.009779951100244499}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}}}}}}},"t":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"t":{"docs":{},"c":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"中":{"docs":{},"的":{"docs":{},"x":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"x":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"x":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"了":{"docs":{},"推":{"docs":{},"导":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"h":{"1":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"i":{"docs":{},"f":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}},"2":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"i":{"docs":{},"f":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}},"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"?":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}},",":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"s":{"docs":{},":":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"l":{"docs":{},"o":{"docs":{},"_":{"docs":{},"b":{"7":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}}}}}},"a":{"docs":{},"d":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.006314580941446613},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"l":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.008036739380022962},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"t":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.003444316877152698}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152}}}}},"n":{"docs":{},"c":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"e":{"docs":{},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"m":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"#":{"docs":{},"#":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"r":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"#":{"docs":{},"#":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"n":{"docs":{},"d":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"l":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"l":{"docs":{},"f":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"v":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"l":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"m":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"(":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"2":{"0":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}}},"docs":{}}}}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}}}}}}},"docs":{}},"4":{"0":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}},"docs":{}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.01904761904761905},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.008492569002123142},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.019083969465648856},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.009584664536741214},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.010810810810810811},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.015463917525773196},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.01169993117687543},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.022292993630573247},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.009146341463414634},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.016636957813428402},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0325497287522604},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.009230769230769232},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004241139048773099},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.007494646680942184},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0057405281285878304},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.005042016806722689},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.019559902200488997},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.026194144838212634}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}},"r":{"docs":{},"n":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"e":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}}},"v":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"a":{"docs":{},"l":{"docs":{},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"g":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}},"生":{"docs":{},"效":{"docs":{},"；":{"docs":{},"在":{"docs":{},"两":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}},"s":{"docs":{},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785}}}},"2":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"3":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}}}}},"docs":{}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"&":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"&":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"，":{"docs":{},"而":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"是":{"docs":{},"s":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"(":{"docs":{},"&":{"docs":{},")":{"docs":{},"[":{"4":{"docs":{},"]":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"docs":{}}}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0059417706476530005},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"*":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},"*":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"}":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},")":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"形":{"docs":{},"参":{"docs":{},"比":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"形":{"docs":{},"参":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"而":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"形":{"docs":{},"参":{"docs":{},"却":{"docs":{},"比":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"形":{"docs":{},"参":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"这":{"docs":{},"里":{"docs":{},"存":{"docs":{},"在":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"}":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.007662835249042145},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.014331210191082803},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":3.34400406504065},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},",":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"）":{"docs":{},"和":{"docs":{},"未":{"docs":{},"知":{"docs":{},"特":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}},"指":{"docs":{},"将":{"docs":{},"被":{"docs":{},"实":{"docs":{},"参":{"docs":{},"替":{"docs":{},"代":{"docs":{},"后":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"s":{"docs":{},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}},"c":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"e":{"docs":{},".":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"只":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"声":{"docs":{},"明":{"docs":{},"和":{"docs":{},"匿":{"docs":{},"名":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"和":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"值":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"值":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"是":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"值":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"元":{"docs":{},"组":{"docs":{},"中":{"docs":{},"具":{"docs":{},"有":{"docs":{},"该":{"docs":{},"索":{"docs":{},"引":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"比":{"docs":{},"较":{"docs":{},"函":{"docs":{},"数":{"docs":{},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"进":{"docs":{},"行":{"docs":{},"组":{"docs":{},"合":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"由":{"docs":{},"于":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"i":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"统":{"docs":{},"一":{"docs":{},"对":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"内":{"docs":{},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}},"(":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"d":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.012224938875305624}},"e":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.030120481927710843},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"(":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":2.5006038647342996}},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}},"e":{"docs":{},"b":{"docs":{},"c":{"docs":{},"o":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"docs":{}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}}}}}},":":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"[":{"docs":{},"]":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":2.500302938503484},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0048638132295719845},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"c":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"i":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"(":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"l":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}}},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.007334963325183374}}},"=":{"0":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"docs":{}},"d":{"docs":{},"x":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.011286681715575621}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"）":{"docs":{},"：":{"docs":{},"模":{"docs":{},"板":{"docs":{},"名":{"docs":{},"称":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"结":{"docs":{},"合":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"t":{"docs":{},"y":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}},"s":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"u":{"1":{"docs":{},"、":{"docs":{},"u":{"2":{"docs":{},"和":{"docs":{},"u":{"3":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"推":{"docs":{},"导":{"docs":{},"就":{"docs":{},"会":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"具":{"docs":{},"有":{"docs":{},"同":{"docs":{},"一":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"v":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}},"_":{"docs":{},"v":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},"e":{"2":{"docs":{},"?":{"docs":{},"p":{"docs":{},":":{"0":{"docs":{},")":{"docs":{},",":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"docs":{}}}}},"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"e":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"(":{"4":{"3":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"docs":{}},"docs":{}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"a":{"docs":{},"m":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"{":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"u":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}}}}}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}}}}}}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}},"<":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.003663003663003663}}}}}}}}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"(":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"&":{"docs":{},"&":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.005836575875486381},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.005434782608695652},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"s":{"docs":{},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.005836575875486381},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.006642512077294686}},"e":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"<":{"docs":{},">":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"h":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}},"’":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},"c":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}},"[":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"docs":{}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"]":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"l":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"是":{"docs":{},"左":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"t":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"引":{"docs":{},"用":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"p":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"，":{"docs":{},"而":{"2":{"docs":{},"是":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"t":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"p":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"。":{"docs":{},"综":{"docs":{},"上":{"docs":{},"，":{"docs":{},"引":{"docs":{},"用":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"规":{"docs":{},"则":{"docs":{},"也":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}},"_":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"=":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},">":{"docs":{},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"=":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},">":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"&":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"docs":{}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}},"r":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}}},"n":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.007621951219512195},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.005836575875486381},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.0160857908847185}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.1}}},"]":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.008939974457215836},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"a":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"n":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"y":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":2.0019083969465647},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"p":{"docs":{},"y":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}},"d":{"docs":{},"e":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"*":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"{":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"1":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"2":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"docs":{}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"w":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"y":{"docs":{},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"e":{"docs":{},"w":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0058823529411764705}},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}},"l":{"docs":{},"i":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},".":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}},"x":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}}}},"u":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.011450381679389313},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.009779951100244499}},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}},"s":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.011450381679389313},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"r":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"+":{"5":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"docs":{}},"[":{"docs":{},"]":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"l":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},")":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"，":{"docs":{},"也":{"docs":{},"只":{"docs":{},"能":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.013618677042801557},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}},"比":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0041293874741913286},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":2.5031847133757963},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"y":{"docs":{},"）":{"docs":{},"原":{"docs":{},"则":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.01264591439688716},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},":":{"docs":{},":":{"docs":{},"e":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"]":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"t":{"docs":{},"h":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"+":{"1":{"docs":{},">":{"docs":{},">":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"docs":{}},"c":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"e":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"n":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"f":{"docs":{},"g":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"p":{"1":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"两":{"docs":{},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"比":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"（":{"docs":{},"具":{"docs":{},"体":{"docs":{},"规":{"docs":{},"则":{"docs":{},"见":{"1":{"6":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"3":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"(":{"docs":{},"p":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"根":{"docs":{},"据":{"docs":{},"模":{"docs":{},"板":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"不":{"docs":{},"是":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"4":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},"a":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"g":{"docs":{},"e":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},"s":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.1}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":2.0019083969465647},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.004753416518122401},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0036352620418055137},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"）":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},"：":{"docs":{},"模":{"docs":{},"板":{"docs":{},"声":{"docs":{},"明":{"docs":{},"和":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"后":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"）":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.005755831566192063},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"s":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.008333333333333333},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.010810810810810811},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},"r":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}}}}}}},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}},"c":{"docs":{},"k":{"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563}}},"2":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0055058499655884375},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"n":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703}}},"）":{"docs":{},"。":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"称":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"t":{"docs":{},"h":{"docs":{},"s":{"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"2":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"）":{"docs":{},"将":{"docs":{},"接":{"docs":{},"口":{"docs":{},"与":{"docs":{},"实":{"docs":{},"现":{"docs":{},"分":{"docs":{},"离":{"docs":{},"开":{"docs":{},"。":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"通":{"docs":{},"过":{"docs":{},"该":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"单":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"功":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"分":{"docs":{},"若":{"docs":{},"干":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"接":{"docs":{},"口":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"每":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"。":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"）":{"docs":{},"是":{"docs":{},"指":{"docs":{},"将":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"来":{"docs":{},"为":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"些":{"docs":{},"功":{"docs":{},"能":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"实":{"docs":{},"现":{"docs":{},"多":{"docs":{},"态":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"对":{"docs":{},"象":{"docs":{},"计":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.012307692307692308}},"(":{"docs":{},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"o":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}},"i":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317}},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"s":{"docs":{},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}}}}},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}}},"x":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"s":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"!":{"docs":{},"=":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"i":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"l":{"docs":{},"y":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"h":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":2},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":1.6679738562091502}}}}}}},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"1":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"2":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"docs":{}}}}}}},"y":{"1":{"docs":{},"_":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"2":{"docs":{},"_":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"3":{"docs":{},"_":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"4":{"docs":{},"_":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"w":{"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"e":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}},"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":2}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}},"r":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.02109704641350211},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}}}}}},"(":{"docs":{},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"为":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"e":{"docs":{},"d":{"docs":{},"(":{"7":{"docs":{},".":{"5":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"docs":{}}},"docs":{}}}}}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},",":{"2":{"docs":{},",":{"0":{"docs":{},",":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"r":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"t":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}},"(":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"v":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}},"(":{"docs":{},"c":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}},"docs":{}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.003444316877152698},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"e":{"docs":{},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0074309978768577496},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.0056433408577878106},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.018461538461538463},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004544077552256892},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"e":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165}}}}}}}}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}}},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":2},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"m":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},".":{"docs":{},"”":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"c":{"docs":{},"e":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"s":{"docs":{},"s":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":2}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"e":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"s":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":2},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},")":{"docs":{},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.024128686327077747}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}}},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"，":{"docs":{},"全":{"docs":{},"称":{"docs":{},"p":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0048638132295719845},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.016304347826086956},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.01098901098901099},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0074309978768577496},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00878594249201278},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.007731958762886598},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0041293874741913286},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.014331210191082803},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.009146341463414634},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.006535947712418301},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0108499095840868},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.008695652173913044},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.002726446531354135},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.010700389105058366},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.016908212560386472},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.009150326797385621},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.022893772893772892},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.013777267508610792},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.007563025210084034},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.009029345372460496},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.012224938875305624},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}}}}}}},"s":{"docs":{},"h":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172}},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},">":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}},"<":{"docs":{},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}},">":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},"i":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"{":{"3":{"docs":{},".":{"1":{"4":{"1":{"5":{"9":{"2":{"6":{"5":{"3":{"5":{"8":{"9":{"7":{"9":{"3":{"2":{"3":{"8":{"5":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"e":{"docs":{},"c":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"d":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"f":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"c":{"docs":{},"k":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"，":{"docs":{},"则":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"认":{"docs":{},"为":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"为":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"和":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"相":{"docs":{},"乘":{"docs":{},"。":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"[":{"3":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}}},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.007334963325183374}},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"却":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"进":{"docs":{},"行":{"docs":{},"构":{"docs":{},"造":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"来":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"时":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"l":{"docs":{},"i":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.02},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}}}}}},",":{"docs":{},"”":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}}}}}}}}}},"b":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"/":{"2":{"docs":{},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"docs":{}},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}},"(":{"docs":{},"{":{"0":{"docs":{},"x":{"7":{"docs":{},"f":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"docs":{}}},"docs":{}}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"docs":{}}}}}}}}}},"d":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"d":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}},"f":{"docs":{},"e":{"docs":{},"w":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"i":{"docs":{},"i":{"docs":{},"e":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"m":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"p":{"docs":{},"p":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"v":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"r":{"1":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"2":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.009150326797385621},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.1}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"c":{"docs":{},"h":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"f":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"e":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.012612612612612612},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.020700636942675158},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.005434782608695652},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.013544018058690745},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.021447721179624665},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.009244992295839754}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},".":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"s":{"docs":{},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"）":{"docs":{},"，":{"docs":{},"实":{"docs":{},"参":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"常":{"docs":{},"量":{"docs":{},"左":{"docs":{},"值":{"docs":{},"、":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"左":{"docs":{},"值":{"docs":{},"和":{"docs":{},"可":{"docs":{},"移":{"docs":{},"动":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"即":{"docs":{},"使":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"之":{"docs":{},"前":{"docs":{},"叫":{"docs":{},"做":{"docs":{},"通":{"docs":{},"用":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"?":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":2.5}}},"”":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}},"(":{"docs":{},"r":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165}},"(":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"i":{"docs":{},"n":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0140485312899106},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0419047619047619},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.024416135881104035},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.02862595419847328},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.009845288326300985},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.019968051118210862},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.014414414414414415},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.015296367112810707},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.00902061855670103},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0053475935828877},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0189873417721519},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.009230769230769232},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01217391304347826},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.005755831566192063},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.021135265700483092},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.02483660130718954},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.03501722158438576},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.018487394957983194},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.019187358916478554},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.014669926650366748},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406}}}}}}}}}}},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"v":{"docs":{},"(":{"docs":{},"t":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"v":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}},"<":{"docs":{},">":{"docs":{},"通":{"docs":{},"过":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"移":{"docs":{},"除":{"docs":{},"了":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"限":{"docs":{},"定":{"docs":{},"，":{"docs":{},"还":{"docs":{},"通":{"docs":{},"过":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"d":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},"r":{"docs":{},"k":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"a":{"docs":{},"x":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"s":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"l":{"docs":{},"v":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"u":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":2.5015408320493067}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0067226890756302525},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}}}}}}}}}}}},"t":{"docs":{},"*":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"s":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.008241758241758242},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.007462686567164179},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"x":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"<":{"docs":{},">":{"docs":{},"（":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"有":{"docs":{},"些":{"docs":{},"多":{"docs":{},"此":{"docs":{},"一":{"docs":{},"举":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"中":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"名":{"docs":{},"字":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"体":{"docs":{},"中":{"docs":{},"并":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"该":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"该":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"显":{"docs":{},"示":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"显":{"docs":{},"式":{"docs":{},"指":{"docs":{},"定":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"减":{"docs":{},"的":{"docs":{},"值":{"docs":{},"列":{"docs":{},"表":{"docs":{},"选":{"docs":{},"择":{"docs":{},"出":{"docs":{},"元":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"其":{"docs":{},"核":{"docs":{},"心":{"docs":{},"是":{"docs":{},"提":{"docs":{},"取":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"u":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"）":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}},"h":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}},"a":{"docs":{},"w":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}},"n":{"docs":{},"g":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"m":{"1":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"2":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}},"3":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"4":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"5":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"6":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}},"docs":{}},"*":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"c":{"docs":{},"i":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959}},"i":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"e":{"docs":{},"f":{"1":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"2":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"3":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"docs":{}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},"e":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"s":{"docs":{},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"p":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}},"求":{"docs":{},"值":{"docs":{},"结":{"docs":{},"果":{"docs":{},"被":{"docs":{},"用":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"是":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"求":{"docs":{},"值":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}}}}}}},"_":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}},"b":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"s":{"0":{"3":{"docs":{},"[":{"docs":{},"]":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}},"docs":{}},"1":{"1":{"docs":{},"[":{"docs":{},"]":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}},"7":{"docs":{},"[":{"docs":{},"]":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},".":{"docs":{},"x":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},".":{"docs":{},"x":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"3":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.012612612612612612},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.006535947712418301},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.009041591320072333},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.1},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0053533190578158455},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},".":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}},"p":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},"(":{"docs":{},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"x":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"t":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"(":{"docs":{},")":{"docs":{},":":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":2.0016666666666665}}}}}},"e":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.012605042016806723}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0067226890756302525}}}}}}}},"m":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"x":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"z":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"r":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.007334963325183374}},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}}},"i":{"docs":{},"c":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006194081211286993},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.007782101167315175},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.005434782608695652},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":1.675816993464052},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.016059957173447537},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.010073260073260074},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004018369690011481},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.034229828850855744}},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"v":{"docs":{},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},",":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},">":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{},">":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},"(":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"docs":{},"a":{"docs":{},"'":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"c":{"docs":{},"k":{"2":{"docs":{},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}},"3":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}},"4":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.054140127388535034},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.030534351145038167},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0231629392971246}},"&":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.006389776357827476}}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},")":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738}}}}}}}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"<":{"docs":{},">":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},">":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"不":{"docs":{},"能":{"docs":{},"直":{"docs":{},"接":{"docs":{},"访":{"docs":{},"问":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"私":{"docs":{},"有":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"访":{"docs":{},"问":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"方":{"docs":{},"便":{"docs":{},"起":{"docs":{},"见":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"友":{"docs":{},"元":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}}}}},"d":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},":":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},".":{"docs":{},".":{"docs":{},".":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"4":{"docs":{},",":{"2":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},")":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"7":{"docs":{},".":{"5":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"。":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"docs":{}}},"docs":{}}}}}}},"u":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.011182108626198083},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.018083182640144666},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0036352620418055137},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.010924369747899159},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.01078582434514638}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"还":{"docs":{},"原":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"不":{"docs":{},"创":{"docs":{},"建":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"使":{"docs":{},"用":{"docs":{},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"q":{"docs":{},"u":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},">":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.025225225225225224},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406}}}},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.007207207207207207}}},"{":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.0056433408577878106}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"f":{"docs":{},"p":{"1":{"docs":{},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}},"docs":{}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},"<":{"docs":{},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"可":{"docs":{},"以":{"docs":{},"取":{"docs":{},"出":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"取":{"docs":{},"出":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.006361708573159649},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"求":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"（":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"不":{"docs":{},"太":{"docs":{},"好":{"docs":{},"解":{"docs":{},"释":{"docs":{},"，":{"docs":{},"意":{"docs":{},"会":{"docs":{},"一":{"docs":{},"下":{"docs":{},"）":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004}}}}}}}}}},"<":{"docs":{},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"_":{"docs":{},"v":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},">":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"o":{"docs":{},"p":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"处":{"docs":{},"理":{"docs":{},"可":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}},"的":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"是":{"docs":{},"包":{"docs":{},"装":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"中":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},">":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"docs":{}},"docs":{}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"&":{"docs":{},"]":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}},"_":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}},">":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}}}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"对":{"docs":{},"象":{"docs":{},"来":{"docs":{},"包":{"docs":{},"装":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"新":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"以":{"docs":{},"值":{"docs":{},"得":{"docs":{},"方":{"docs":{},"式":{"docs":{},"传":{"docs":{},"入":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"来":{"docs":{},"将":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"原":{"docs":{},"始":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"5":{"0":{"2":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"docs":{}},"docs":{}},"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},">":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"c":{"docs":{},"x":{"docs":{},"x":{"1":{"1":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},")":{"docs":{},"}":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"}":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"n":{"docs":{},"o":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.034482758620689655}},"’":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"(":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}}}},"r":{"docs":{},"b":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"(":{"docs":{},"_":{"docs":{},"i":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},"}":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},"(":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}}}}}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},">":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.006058770069675856},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},".":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},">":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"4":{"2":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"docs":{}},"docs":{}}}}}}}}}}},"在":{"docs":{},"我":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"输":{"docs":{},"出":{"docs":{},"为":{"docs":{},"（":{"docs":{},"只":{"docs":{},"保":{"docs":{},"留":{"docs":{},"了":{"docs":{},"关":{"docs":{},"键":{"docs":{},"部":{"docs":{},"分":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"s":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}},"{":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}},"&":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},":":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"m":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.019120458891013385},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.011011699931176875},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.009554140127388535},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0059417706476530005},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.021538461538461538},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.03180854286579824},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.013618677042801557},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.027837259100642397},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.015567765567765568},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.005166475315729047},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"u":{"docs":{},"r":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"e":{"docs":{},":":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"k":{"docs":{},"t":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}},"[":{"5":{"docs":{},"]":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"包":{"docs":{},"含":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"和":{"5":{"docs":{},"两":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"一":{"docs":{},"般":{"docs":{},"为":{"docs":{},"无":{"docs":{},"符":{"docs":{},"号":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"5":{"docs":{},"需":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"类":{"docs":{},"型":{"docs":{},"提":{"docs":{},"升":{"docs":{},"转":{"docs":{},"换":{"docs":{},"；":{"docs":{},"而":{"docs":{},"如":{"docs":{},"果":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"语":{"docs":{},"言":{"docs":{},"内":{"docs":{},"置":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"其":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"一":{"docs":{},"般":{"docs":{},"为":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"_":{"docs":{},"t":{"docs":{},"（":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"将":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{},"即":{"docs":{},"可":{"docs":{},"—":{"docs":{},"—":{"docs":{},"二":{"docs":{},"者":{"docs":{},"对":{"docs":{},"比":{"docs":{},"没":{"docs":{},"有":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},".":{"2":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"docs":{}}},"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"e":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"e":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}},"e":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"为":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"，":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"值":{"docs":{},"为":{"7":{"docs":{},".":{"5":{"docs":{},"，":{"docs":{},"t":{"docs":{},"为":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"和":{"docs":{},"s":{"docs":{},"，":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"t":{"docs":{},"为":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"m":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"p":{"docs":{},"l":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"f":{"docs":{},"e":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.020316027088036117}},"&":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"*":{"docs":{},"=":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}},"+":{"docs":{},"=":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}},">":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},">":{"docs":{},">":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"还":{"docs":{},"是":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"该":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"是":{"docs":{},"x":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":2.503616636528029},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.00545289306270827},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.008565310492505354},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"）":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"。":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"、":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"代":{"docs":{},"换":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"参":{"docs":{},"数":{"docs":{},"得":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"原":{"docs":{},"始":{"docs":{},"模":{"docs":{},"板":{"docs":{},"称":{"docs":{},"为":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"某":{"docs":{},"种":{"docs":{},"特":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"比":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"算":{"docs":{},"法":{"docs":{},"性":{"docs":{},"能":{"docs":{},"高":{"docs":{},"。":{"docs":{},"在":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"后":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"只":{"docs":{},"需":{"docs":{},"借":{"docs":{},"助":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"规":{"docs":{},"则":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"动":{"docs":{},"调":{"docs":{},"用":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},".":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"s":{"docs":{},".":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}},"e":{"docs":{},"?":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}},"f":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"c":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}},"f":{"docs":{},"w":{"docs":{},"d":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}}}}}}}},"*":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"<":{"docs":{},">":{"docs":{},"保":{"docs":{},"存":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"f":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"是":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"基":{"docs":{},"类":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"访":{"docs":{},"问":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"了":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"静":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"信":{"docs":{},"息":{"docs":{},"擦":{"docs":{},"除":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"动":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"。":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}},"f":{"docs":{},"b":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}}}}},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"[":{"docs":{},"]":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"d":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"作":{"docs":{},"为":{"docs":{},"常":{"docs":{},"量":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.011286681715575621}},"(":{"docs":{},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.0056433408577878106}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}}},">":{"0":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"docs":{}}}}}}},"u":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"求":{"docs":{},"出":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"量":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}},"t":{"docs":{},")":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}},"o":{"docs":{},"o":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},"u":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{},"后":{"docs":{},"来":{"docs":{},"在":{"docs":{},"c":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"某":{"docs":{},"些":{"docs":{},"被":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"内":{"docs":{},"存":{"docs":{},"或":{"docs":{},"者":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"，":{"docs":{},"但":{"docs":{},"却":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"修":{"docs":{},"改":{"docs":{},"的":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"了":{"docs":{},"右":{"docs":{},"值":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"类":{"docs":{},"的":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"其":{"docs":{},"也":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"=":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"=":{"docs":{},"应":{"docs":{},"该":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"重":{"docs":{},"载":{"docs":{},"的":{"docs":{},"=":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"。":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"，":{"docs":{},"右":{"docs":{},"值":{"docs":{},"（":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},"来":{"docs":{},"源":{"docs":{},"于":{"docs":{},"在":{"docs":{},"=":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"r":{"docs":{},"表":{"docs":{},"示":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"s":{"docs":{},".":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"d":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"l":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"c":{"docs":{},"h":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"c":{"docs":{},"e":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},":":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}},"m":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},"y":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"_":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}},"(":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},".":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"2":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"3":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"docs":{}}}},"v":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"y":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"c":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}},"o":{"docs":{},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"特":{"docs":{},"性":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"规":{"docs":{},"则":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"就":{"docs":{},"是":{"docs":{},"代":{"docs":{},"换":{"docs":{},"相":{"docs":{},"关":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"（":{"docs":{},"i":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}},"’":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},"t":{"docs":{},"h":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"z":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},"(":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0041293874741913286},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.007900677200902935}},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},":":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"s":{"docs":{},":":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},":":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},":":{"docs":{},"i":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}},"*":{"docs":{},"p":{"docs":{},"m":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0081374321880651},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"{":{"1":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"docs":{}},"docs":{}},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"，":{"docs":{},"而":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"可":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"（":{"docs":{},"参":{"docs":{},"见":{"1":{"5":{"docs":{},".":{"2":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}},"t":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},"x":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0053533190578158455}},"e":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"表":{"docs":{},"明":{"docs":{},"模":{"docs":{},"板":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"任":{"docs":{},"意":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"。":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}},"&":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"t":{"1":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0041592394533571005},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}},"大":{"docs":{},"小":{"docs":{},"是":{"5":{"docs":{},"字":{"docs":{},"节":{"docs":{},"，":{"docs":{},"说":{"docs":{},"明":{"docs":{},"继":{"docs":{},"承":{"docs":{},"链":{"docs":{},"中":{"docs":{},"的":{"docs":{},"空":{"docs":{},"元":{"docs":{},"组":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"被":{"docs":{},"优":{"docs":{},"化":{"docs":{},"了":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"上":{"docs":{},"例":{"docs":{},"中":{"docs":{},"的":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"也":{"docs":{},"是":{"docs":{},"空":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"改":{"docs":{},"进":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"来":{"docs":{},"将":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"所":{"docs":{},"占":{"docs":{},"用":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"也":{"docs":{},"优":{"docs":{},"化":{"docs":{},"掉":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"{":{"docs":{},"}":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.01904761904761905},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0053475935828877},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"&":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},":":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034}}},"和":{"docs":{},"t":{"3":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"&":{"docs":{},")":{"docs":{},"[":{"docs":{},"]":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}},"docs":{}}},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"{":{"docs":{},"}":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"显":{"docs":{},"示":{"docs":{},"无":{"docs":{},"法":{"docs":{},"将":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0035650623885918}},"&":{"docs":{},"&":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"{":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"4":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"5":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.03238095238095238},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.009541984732824428},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.009584664536741214},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.03783783783783784},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.007621951219512195},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.013071895424836602},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.005755831566192063},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.008754863813229572},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0053533190578158455},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0057405281285878304},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.009779951100244499},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.2},"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":2.5247619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":2.5392781316348194},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":2.0248091603053435},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":2.5253164556962027},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0439297124600639},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.02},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.021621621621621623},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.03441682600382409},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":2.0140485312899106},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":2.0060240963855422},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.019329896907216496},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.08396421197522368},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":2.5445859872611467},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.057926829268292686},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":2.041592394533571},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.05605786618444846},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.07692307692307693},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":2.0156521739130433},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.03938200545289306},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.05058365758754864},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":2.5223429951690823},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.027450980392156862},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.033190578158458245},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.07783882783882784},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.04535017221584386},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.047058823529411764},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":2.5191873589164784},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":2.5293398533007334},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}},"e":{"docs":{},">":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0036352620418055137},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004018369690011481},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},">":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}},",":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},".":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},".":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"<":{"docs":{},">":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0216998191681736},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.006361708573159649},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.007494646680942184},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004592422502870264},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},">":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003938200545289306},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},">":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.003663003663003663},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"i":{"docs":{},">":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}},"”":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"）":{"docs":{},"、":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}},"。":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}},"和":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"类":{"docs":{},"类":{"docs":{},"的":{"docs":{},"统":{"docs":{},"称":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},")":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"s":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"不":{"docs":{},"是":{"docs":{},"可":{"docs":{},"安":{"docs":{},"全":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"支":{"docs":{},"持":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"也":{"docs":{},"无":{"docs":{},"法":{"docs":{},"保":{"docs":{},"证":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},".":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.0160857908847185}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}},"y":{"docs":{},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423}},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"会":{"docs":{},"先":{"docs":{},"以":{"docs":{},"参":{"docs":{},"数":{"docs":{},"t":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"t":{"docs":{},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"u":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"推":{"docs":{},"迟":{"docs":{},"到":{"docs":{},"了":{"docs":{},"引":{"docs":{},"用":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"的":{"docs":{},"时":{"docs":{},"刻":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}},")":{"docs":{},">":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"i":{"docs":{},"n":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":2}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"&":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"表":{"docs":{},"明":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"*":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0081374321880651},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":2.0038240917782026},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.013618677042801557},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"w":{"docs":{},"o":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.009523809523809525},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.0056433408577878106},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00718849840255591},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.007207207207207207},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.03614457831325301},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.009506833036244802},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.017267494698576188},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":2.009727626459144},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004830917874396135},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.016059957173447537},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.024725274725274724},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.007462686567164179},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.010924369747899159},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.019157088122605363},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.012307692307692308},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.00969403211148137},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.006423982869379015},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.031135531135531136},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004592422502870264},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"明":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"标":{"docs":{},"识":{"docs":{},"符":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}},"的":{"docs":{},"这":{"docs":{},"种":{"docs":{},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"用":{"docs":{},"于":{"docs":{},"使":{"docs":{},"用":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"打":{"docs":{},"印":{"docs":{},"容":{"docs":{},"器":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"s":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},".":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563}},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}},">":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.020434227330779056},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},")":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"和":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"）":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"，":{"docs":{},"并":{"docs":{},"为":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}},"替":{"docs":{},"换":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":3.334249084249084}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},">":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"/":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"1":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"docs":{}},"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}}}},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},".":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"docs":{}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"docs":{}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"o":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"(":{"docs":{},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172}}}}},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003938200545289306}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"b":{"docs":{},"l":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"d":{"docs":{},"a":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"s":{"docs":{},"k":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"i":{"docs":{},"l":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},">":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"t":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.005166475315729047},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"g":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.003444316877152698},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},">":{"docs":{},",":{"docs":{},"(":{"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}}},"会":{"docs":{},"被":{"docs":{},"展":{"docs":{},"开":{"docs":{},"为":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"v":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"n":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"p":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563}},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":2.5015146925174188},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"s":{"docs":{},"）":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},"/":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"5":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"6":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"v":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"c":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"docs":{}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.007334963325183374}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},":":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":2.5},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}},"u":{"docs":{},"e":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.007731958762886598},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"e":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}},"(":{"1":{"7":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"docs":{},"&":{"docs":{},"b":{"docs":{},")":{"docs":{},"[":{"docs":{},"m":{"docs":{},"]":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}},")":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"可":{"docs":{},"以":{"docs":{},"默":{"docs":{},"认":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"用":{"docs":{},"零":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"内":{"docs":{},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"且":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"还":{"docs":{},"要":{"docs":{},"求":{"docs":{},"类":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"中":{"docs":{},"的":{"docs":{},"强":{"docs":{},"制":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"省":{"docs":{},"略":{"docs":{},"（":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},"*":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.007462686567164179}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"，":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"*":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{},"也":{"docs":{},"只":{"docs":{},"是":{"docs":{},"声":{"docs":{},"明":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},">":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.009779951100244499}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"针":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"?":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"r":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},".":{"docs":{},")":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"w":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}},"e":{"docs":{},"e":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"e":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"m":{"docs":{},".":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"m":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"(":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"*":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}},"l":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"t":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},")":{"docs":{},";":{"5":{"2":{"2":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"docs":{}},"docs":{}},"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}},"{":{"3":{"docs":{},".":{"1":{"4":{"1":{"5":{"9":{"2":{"6":{"5":{"3":{"5":{"8":{"9":{"7":{"9":{"3":{"2":{"3":{"8":{"5":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}}}}}},"}":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"s":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0041592394533571005},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":3.353999234596249},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.007462686567164179}}},"<":{"docs":{},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.005166475315729047}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"(":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},">":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"{":{"1":{"docs":{},",":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}}},"docs":{}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}}},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.003444316877152698}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},">":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}}},"u":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}}}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"docs":{}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"0":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"docs":{}}},"q":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"docs":{}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0051499545592244775},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}},"t":{"docs":{},">":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"[":{"2":{"docs":{},"_":{"docs":{},"c":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"3":{"docs":{},"_":{"docs":{},"c":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"docs":{},"c":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"{":{"docs":{},"}":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}},"s":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"\"":{"1":{"docs":{},"\"":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"\"":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"6":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}},"docs":{}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"\"":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"t":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"docs":{}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"\"":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"\"":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}},"docs":{}}},"o":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"\"":{"docs":{},"）":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"点":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"\"":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"u":{"docs":{},"t":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785}}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}},"9":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}},"a":{"docs":{},"y":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"docs":{}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"\"":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}},"docs":{}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"docs":{}}}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"docs":{}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"以":{"4":{"2":{"docs":{},"和":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422}}},"_":{"docs":{},"b":{"7":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{}}},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}}}}}}}}},"i":{"docs":{},"\"":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.010810810810810811}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"!":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"o":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"\"":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}},"s":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"docs":{}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"docs":{}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},"+":{"docs":{},"+":{"docs":{},"\"":{"docs":{},"的":{"docs":{},"。":{"docs":{},"模":{"docs":{},"板":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"外":{"docs":{},"部":{"docs":{},"链":{"docs":{},"接":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"有":{"docs":{},"例":{"docs":{},"外":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}},"\"":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"g":{"docs":{},"u":{"docs":{},"y":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"}":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"1":{"docs":{},"a":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}},"docs":{}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}},"c":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}}}}}},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}},"j":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"\"":{"docs":{},"}":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"}":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},"\"":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.005042016806722689}}}}}}}}}}}}}}},"#":{"1":{"0":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"1":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.009146341463414634},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.006329113924050633},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.02465331278890601}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}},"2":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.009146341463414634},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.006329113924050633},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.020030816640986132}},"a":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"b":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"3":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"4":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}},"5":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}}},"6":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"7":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"8":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"9":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.02095238095238095},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.021231422505307854},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.02099236641221374},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.010383386581469648},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.025},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0140485312899106},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.024484536082474227},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.009945750452079566},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.02434782608695652},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.027567403817025143},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.01264591439688716},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.008454106280193236},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.013071895424836602},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.007462686567164179},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.019327731092436976},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.014672686230248307},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.014669926650366748},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.01848998459167951}}}}}}},"f":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003332323538321721},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004241139048773099},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003332323538321721},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"'":{"0":{"docs":{},"'":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"1":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}},"docs":{},"b":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}},"e":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"i":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"o":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"u":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},".":{"docs":{},"'":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"a":{"docs":{},"'":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},"c":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"x":{"docs":{},"'":{"docs":{},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}},"(":{"1":{"0":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"docs":{},".":{"0":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"docs":{}}},"4":{"2":{"docs":{},",":{"7":{"7":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"docs":{}},"docs":{}}},"docs":{}},"7":{"docs":{},".":{"5":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422}}}},"docs":{}}},"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.015471167369901548},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876}},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.009554140127388535},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.011450381679389313},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0067226890756302525}},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},">":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}},"b":{"docs":{},"i":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714}}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"u":{"docs":{},"s":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}},"g":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}}},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"c":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"d":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"&":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}},"i":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"*":{"docs":{},"*":{"docs":{},"*":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},")":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"而":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"相":{"docs":{},"对":{"docs":{},"于":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"则":{"docs":{},"是":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"（":{"docs":{},"具":{"docs":{},"体":{"docs":{},"规":{"docs":{},"则":{"docs":{},"见":{"1":{"6":{"docs":{},".":{"2":{"docs":{},".":{"3":{"docs":{},"）":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"将":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"f":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}}}}}}}}}}}}}},">":{"0":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"docs":{}},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714}}}}}}}}},"y":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"*":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"*":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}}}}}},"l":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"n":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.009727626459143969},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"o":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},":":{"docs":{},":":{"docs":{},"x":{"docs":{},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}},"t":{"1":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.01904761904761905},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"&":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"2":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},":":{"docs":{},":":{"docs":{},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"t":{"3":{"docs":{},"*":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"docs":{}}}}}}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.013333333333333334},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.008492569002123142},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.011251758087201125},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.009560229445506692},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.002726446531354135},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"*":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}},"&":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"(":{"docs":{},"&":{"docs":{},"a":{"docs":{},")":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},")":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}}}}}}}},"&":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"&":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"o":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}},"s":{"docs":{},"*":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"a":{"docs":{},"t":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"i":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"s":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.006389776357827476}}}},"r":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"&":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855}},",":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}},"&":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.020316027088036117}},"y":{"docs":{},"p":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}},")":{"docs":{},"，":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"值":{"docs":{},"为":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"\"":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"也":{"docs":{},"为":{"docs":{},"空":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372}}}}}}}},"u":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}},"a":{"1":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"l":{"docs":{},"l":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"s":{"docs":{},"o":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.007207207207207207}}}}},"r":{"docs":{},"g":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422}},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"docs":{}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},"n":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"d":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}},"(":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"s":{"1":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"docs":{}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}}}}}}}}}}}},"p":{"docs":{},"%":{"docs":{},"i":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"f":{"1":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"docs":{},"o":{"docs":{},"o":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}},"o":{"docs":{},"+":{"docs":{},"h":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"/":{"2":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}},"docs":{}}}},"docs":{}}}}}}},"!":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}}}}}}}}}}}}}}}},"&":{"docs":{},"a":{"3":{"docs":{},")":{"docs":{},"[":{"4":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}},"docs":{}}}},"docs":{},"r":{"docs":{},"g":{"1":{"docs":{},")":{"docs":{},"[":{"docs":{},"l":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"docs":{}}}}},"2":{"docs":{},")":{"docs":{},"[":{"docs":{},"l":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"docs":{}}}}},"docs":{}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},")":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"x":{"0":{"docs":{},")":{"docs":{},"[":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}},"docs":{}},")":{"docs":{},"[":{"2":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"2":{"0":{"docs":{},"]":{"docs":{},"，":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"t":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"2":{"0":{"docs":{},"]":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"4":{"docs":{},"]":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"docs":{}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"!":{"docs":{},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}},"p":{"1":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"docs":{}}}}}}}}}}},"docs":{}}},"p":{"docs":{},"o":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}},"s":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"%":{"2":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},"!":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},"docs":{}}}},"docs":{},"d":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},"!":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"docs":{}}}}},"=":{"docs":{},"=":{"2":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"docs":{}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"x":{"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"&":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"&":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}},":":{"docs":{},":":{"docs":{},"*":{"docs":{},"p":{"docs":{},")":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}}}}}}}}},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"*":{"docs":{},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}},"“":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"”":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"v":{"2":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},"(":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}},"*":{"docs":{},")":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}}},"a":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"p":{"docs":{},"f":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"*":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}},"f":{"docs":{},")":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"*":{"docs":{},")":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"两":{"docs":{},"个":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"(":{"docs":{},"a":{"1":{"docs":{},")":{"docs":{},"和":{"docs":{},"(":{"docs":{},"a":{"2":{"docs":{},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"可":{"docs":{},"以":{"docs":{},"代":{"docs":{},"换":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"反":{"docs":{},"过":{"docs":{},"来":{"docs":{},"不":{"docs":{},"能":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"得":{"docs":{},"到":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"p":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"y":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}},"#":{"2":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"4":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"6":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"docs":{}}},"*":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.010706638115631691},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"b":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}},"e":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}}}}}},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"s":{"docs":{},"，":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.005042016806722689},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.009244992295839754}},"s":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004592422502870264},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"o":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004}}}}}},"a":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"q":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"=":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},">":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"/":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.05714285714285714},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.09023354564755838},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.10114503816793893},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.03938115330520394},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.09105431309904154},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.06333333333333334},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.09549549549549549},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.06883365200764818},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.024265644955300127},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.0783132530120482},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.1095360824742268},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.08671713695801789},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.052547770700636945},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.07926829268292683},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.061200237670825906},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.05605786618444846},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.052307692307692305},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.10608695652173913},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.061193577703726146},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.048638132295719845},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.042270531400966184},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.050980392156862744},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.057815845824411134},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.05036630036630037},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.04822043628013777},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.05798319327731093},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.0744920993227991},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.04645476772616137},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.06166219839142091},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.10785824345146379}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"/":{"7":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"3":{"9":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"3":{"5":{"docs":{},":":{"0":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}}}},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"8":{"7":{"docs":{},":":{"3":{"4":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"5":{"4":{"docs":{},":":{"0":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"2":{"8":{"3":{"docs":{},":":{"1":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"_":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"1":{"0":{"4":{"docs":{},":":{"4":{"2":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"6":{"1":{"docs":{},":":{"2":{"3":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"3":{"9":{"3":{"2":{"docs":{},":":{"2":{"8":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"6":{"4":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"7":{"1":{"docs":{},":":{"0":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"5":{"9":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},":":{"1":{"0":{"5":{"docs":{},":":{"4":{"5":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"6":{"docs":{},":":{"4":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"7":{"docs":{},":":{"4":{"3":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"8":{"docs":{},":":{"4":{"6":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"9":{"docs":{},":":{"5":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"1":{"4":{"docs":{},":":{"4":{"5":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"5":{"docs":{},":":{"5":{"0":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"6":{"docs":{},":":{"4":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"7":{"docs":{},":":{"5":{"2":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"8":{"docs":{},":":{"4":{"6":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"9":{"docs":{},":":{"5":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"2":{"0":{"docs":{},":":{"5":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"1":{"docs":{},":":{"5":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"2":{"docs":{},":":{"4":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"3":{"docs":{},":":{"5":{"2":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"2":{"8":{"2":{"docs":{},":":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}},"3":{"7":{"5":{"docs":{},":":{"2":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}},"4":{"1":{"9":{"docs":{},":":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"2":{"3":{"docs":{},":":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"7":{"8":{"docs":{},":":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}},"6":{"7":{"9":{"docs":{},":":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"8":{"3":{"docs":{},":":{"7":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}},"9":{"8":{"docs":{},":":{"6":{"3":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"4":{"0":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"docs":{}},"docs":{}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},":":{"1":{"4":{"3":{"docs":{},":":{"1":{"2":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}},"docs":{}}},"docs":{}},"5":{"4":{"docs":{},":":{"3":{"1":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"4":{"7":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"8":{"docs":{},":":{"0":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0055058499655884375},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.013329294153286883},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.022946859903381644},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.01568627450980392},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.01098901098901099},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.012629161882893225},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.011286681715575621},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.009244992295839754}},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"1":{"docs":{},".":{"0":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}},"docs":{}}},"4":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095}}}},"7":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095}}},".":{"2":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"docs":{}}},"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095}}}}}},"s":{"1":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"docs":{}}},"<":{"docs":{},">":{"docs":{},"(":{"7":{"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"docs":{}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}},"s":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"c":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"x":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.00545289306270827},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.008565310492505354},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152}}}}}}}}}},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"特":{"docs":{},"定":{"docs":{},"语":{"docs":{},"境":{"docs":{},"下":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.013333333333333334},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.010615711252653927},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.009541984732824428},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.015471167369901548},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.011980830670926517},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.016216216216216217},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.01277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.011597938144329897},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.016517549896765314},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.014331210191082803},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.018292682926829267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0344622697563874},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.03074141048824593},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.036923076923076927},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01391304347826087},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.03695849742502272},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.016536964980544747},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.02355072463768116},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.02483660130718954},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.05460385438972163},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.07509157509157509},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.029850746268656716},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.023529411764705882},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.02144469525959368},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.029339853300733496},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.02680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.01078582434514638}},"=":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0030193236714975845},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.01045751633986928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},">":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.028333333333333332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435}}}},">":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.031928480204342274},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.006535947712418301},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.009727626459143969},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"*":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563}},"取":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"指":{"docs":{},"定":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}}},"]":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.033205619412515965}},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}},"c":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}},">":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}},"i":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"，":{"docs":{},"则":{"docs":{},"就":{"docs":{},"是":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"y":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"f":{"2":{"docs":{},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}},"docs":{}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}},"docs":{}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},">":{"docs":{},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}},"=":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}}}}}}},"~":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"1":{"0":{"docs":{},"]":{"docs":{},"和":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}},"docs":{}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"v":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}}}}}},"]":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}},"i":{"docs":{},"]":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"b":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"x":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"&":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"]":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}}}}}}}}}}},"\\":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004241139048773099}},"n":{"docs":{},"\"":{"docs":{},";":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"^":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"~":{"docs":{},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}}}}}}}}}}}}}}}}}},"a":{"1":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"[":{"0":{"docs":{},"]":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"7":{"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{},"a":{"2":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}}},"docs":{}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"2":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"[":{"0":{"docs":{},"]":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{},"]":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"没":{"docs":{},"有":{"docs":{},"办":{"docs":{},"法":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"代":{"docs":{},"换":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"办":{"docs":{},"法":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"代":{"docs":{},"换":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"将":{"docs":{},"会":{"docs":{},"失":{"docs":{},"败":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"docs":{},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0380952380952381},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.009230769230769232},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.007900677200902935}},"b":{"docs":{},",":{"docs":{},"c":{"docs":{},",":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0030193236714975845},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},":":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"p":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.009391093607997577}}},"u":{"docs":{},"m":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495}},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"_":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.006361708573159649}}}}}},"u":{"docs":{},"l":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004544077552256892}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"e":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},"d":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.009230769230769232},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},"r":{"docs":{},"]":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"&":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"a":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"b":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}},"o":{"docs":{},"n":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"b":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}},"b":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"(":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}},"l":{"docs":{},"!":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"和":{"docs":{},"显":{"docs":{},"示":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}},"x":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"1":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"2":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.012612612612612612},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.007619047619047619},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.007032348804500703},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006194081211286993},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":2.004159239453357},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0054249547920434},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"s":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},".":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},":":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"）":{"docs":{},"：":{"docs":{},"代":{"docs":{},"换":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"实":{"docs":{},"际":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"的":{"docs":{},"值":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.021621621621621623}}},"s":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.009845288326300985},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.009150326797385621}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},")":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"称":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"（":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"为":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"当":{"docs":{},"以":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"或":{"docs":{},"者":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"调":{"docs":{},"用":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"和":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"上":{"docs":{},"述":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"语":{"docs":{},"句":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"是":{"docs":{},"{":{"docs":{},"}":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"将":{"docs":{},"是":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"<":{"docs":{},">":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},":":{"docs":{},":":{"docs":{},"v":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"r":{"1":{"docs":{},"(":{"docs":{},"{":{"1":{"0":{"docs":{},"u":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}},"docs":{}}}},"2":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"{":{"1":{"0":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"docs":{}},"docs":{},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}},"a":{"docs":{},"y":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00718849840255591},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.012307692307692308},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.00545289306270827},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.016930022573363433},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"r":{"2":{"docs":{},">":{"docs":{},">":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"(":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"2":{"docs":{},">":{"docs":{},"(":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"&":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}},"a":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}},"b":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"s":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},":":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}},">":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"(":{"docs":{},"a":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"b":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}},">":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"[":{"0":{"docs":{},"]":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}},"docs":{}},"4":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"(":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"<":{"docs":{},">":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"e":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.013333333333333334},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.013666072489601902},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.004847016055740685},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.017130620985010708},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.011481056257175661},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"&":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"或":{"docs":{},"者":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},":":{"docs":{},":":{"docs":{},"*":{"docs":{},"p":{"docs":{},"m":{"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}}}}}},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"g":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"）":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}},"i":{"docs":{},"x":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":2.5},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":2.5}}}}}},"a":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"l":{"docs":{},"i":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"c":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"y":{"docs":{},".":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"(":{"docs":{},"f":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"f":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"(":{"docs":{},"!":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.008492569002123142},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}}}}}}}}},"c":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}},":":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"d":{"docs":{},"!":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"c":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},">":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"c":{"docs":{},"h":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},"s":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"i":{"docs":{},"a":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"s":{"docs":{},".":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}},"{":{"4":{"2":{"docs":{},",":{"4":{"5":{"docs":{},",":{"7":{"7":{"docs":{},"}":{"docs":{},"，":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"_":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"[":{"1":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}},"4":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}},"docs":{}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}},")":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"”":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"n":{"docs":{},"y":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}},"y":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},":":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}},"(":{"docs":{},"b":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"和":{"docs":{},"b":{"docs":{},"同":{"docs":{},"时":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"两":{"docs":{},"个":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"（":{"docs":{},"类":{"docs":{},"型":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},">":{"docs":{},"和":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"更":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"!":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"*":{"3":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}},".":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}}},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},">":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}},"<":{"docs":{},">":{"docs":{},"和":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"其":{"docs":{},"中":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"是":{"docs":{},"过":{"docs":{},"期":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"某":{"docs":{},"些":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"模":{"docs":{},"板":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"左":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"o":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"书":{"docs":{},"中":{"docs":{},"为":{"docs":{},"了":{"docs":{},"统":{"docs":{},"一":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"表":{"docs":{},"示":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"返":{"docs":{},"回":{"docs":{},"s":{"docs":{},"只":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}}}}}}}}}}},">":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}},"b":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.02857142857142857},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":2.502680965147453}},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.03428571428571429},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0045207956600361665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.013544018058690745}},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},",":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.008241758241758242},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0057405281285878304},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"c":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":2.5},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":2}},"s":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"3":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}},"4":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"docs":{}}}},"y":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}},"5":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"6":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"7":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"8":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"9":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"3":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"docs":{}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}},"n":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"docs":{}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"1":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"4":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"docs":{}},"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"n":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"docs":{}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"docs":{}}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}}}}}}}},"e":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0041293874741913286},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.00785024154589372},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.003444316877152698},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"各":{"docs":{},"个":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"b":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"*":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},":":{"docs":{},":":{"docs":{},"*":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"_":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"c":{"docs":{},"k":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"t":{"docs":{},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.009584664536741214},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.019120458891013385},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0035650623885918},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.00785024154589372},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.011764705882352941},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.01098901098901099},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004592422502870264},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0058823529411764705},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{},":":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"_":{"docs":{},"m":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"*":{"docs":{},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}}},">":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"m":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"t":{"docs":{},"h":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"s":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"x":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}},"d":{"docs":{},"i":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"y":{"docs":{},")":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}},"e":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"e":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034}},"(":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}},"s":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"为":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"这":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"机":{"docs":{},"制":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}},">":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"d":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.0160857908847185}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"）":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"{":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},"{":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}},"docs":{}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"c":{"docs":{},"e":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}},"e":{"docs":{},"r":{"docs":{},">":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"k":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":1.675816993464052}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}},"4":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}},"docs":{}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}},"s":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"s":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}},":":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},":":{"docs":{},":":{"docs":{},"i":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"x":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"[":{"4":{"2":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}},"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"会":{"docs":{},"由":{"docs":{},"于":{"docs":{},"b":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"而":{"docs":{},"最":{"docs":{},"终":{"docs":{},"展":{"docs":{},"开":{"docs":{},"为":{"docs":{},"(":{"1":{"docs":{},".":{"2":{"docs":{},"*":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},"*":{"2":{"0":{"0":{"0":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},".":{"1":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},".":{"1":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"docs":{}}},"2":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},".":{"1":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"docs":{}}},"3":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"4":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}}}},"n":{"1":{"docs":{},"(":{"1":{"0":{"0":{"1":{"0":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"2":{"docs":{},"(":{"docs":{},"\"":{"7":{"0":{"5":{"7":{"1":{"0":{"3":{"2":{"2":{"4":{"docs":{},".":{"0":{"9":{"5":{"7":{"6":{"4":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"docs":{}}},"d":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.008565310492505354},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"e":{"docs":{},"r":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}},"t":{"docs":{},"a":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.004817618719889883},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.010670731707317074},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338}},".":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},"b":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"(":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"b":{"docs":{},"(":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"f":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"docs":{}}},"v":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},")":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"t":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"docs":{},"+":{"docs":{},"u":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"?":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},"&":{"docs":{},"x":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}},"x":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"(":{"docs":{},"!":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},",":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"为":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"此":{"docs":{},"之":{"docs":{},"前":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"保":{"docs":{},"证":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"不":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"导":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"等":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"导":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"还":{"docs":{},"会":{"docs":{},"带":{"docs":{},"上":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"最":{"docs":{},"终":{"docs":{},"求":{"docs":{},"值":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495}},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"a":{"docs":{},"y":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"(":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},".":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"d":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.025225225225225224},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0172311348781937},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":2.001782531194296},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.007619047619047619}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"t":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003332323538321721},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},">":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004227053140096618}}},"y":{"1":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"2":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"3":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"4":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"i":{"docs":{},"n":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"i":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0055058499655884375},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.01676829268292683},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.006329113924050633},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"s":{"docs":{},"）":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"o":{"docs":{},"r":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}},"t":{"docs":{},"h":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":2.5}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.006642512077294686},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004227053140096618},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"e":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}}},":":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"[":{"docs":{},"]":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"3":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"docs":{}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"z":{"docs":{},"y":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"docs":{}}}}},"f":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"2":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"docs":{}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"&":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}}}}}}},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"o":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":2.5}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004227053140096618},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"e":{"docs":{},"和":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"不":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},">":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}},"&":{"docs":{},")":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"}":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"&":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"&":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}}}}},"n":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"’":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},",":{"docs":{},"d":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}},"e":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}}}}}}}}}}}}}}}}},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"b":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},"。":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},"e":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.005836575875486381}}}}}}}}},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155}},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":2.504201680672269}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}},"<":{"docs":{},">":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}},":":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.010434782608695653},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.010700389105058366},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}},"e":{"docs":{},"(":{"docs":{},"c":{"1":{"docs":{},",":{"docs":{},"c":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}},"docs":{}}}},"docs":{}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"1":{"docs":{},"&":{"docs":{},",":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"2":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}},"docs":{}}}}}}}}}},"docs":{},"&":{"docs":{},",":{"docs":{},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}}}}}}}}}}}}}}},"l":{"docs":{},",":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":2.5}},"l":{"docs":{},"i":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}},"y":{"docs":{},">":{"docs":{},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"d":{"docs":{},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}},"!":{"docs":{},"=":{"2":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"docs":{}}},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},":":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767}},":":{"docs":{},"x":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"=":{"2":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"docs":{}},"u":{"docs":{},"e":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"r":{"docs":{},"e":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"a":{"docs":{},"t":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}},">":{"docs":{},"(":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"7":{"docs":{},".":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"docs":{}}},"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"y":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":1.6679738562091502}},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"b":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"x":{"docs":{},"t":{"docs":{},"m":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01565217391304348}},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01565217391304348}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}}}}}}}}}}}}}},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}},"f":{"1":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},"(":{"4":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"t":{"1":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"2":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"v":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"2":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"(":{"docs":{},"b":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},")":{"docs":{},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"s":{"docs":{},"v":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"3":{"docs":{},"(":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"docs":{},"&":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"t":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"docs":{}},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.011666666666666667},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}}}},"d":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"o":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"(":{"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"docs":{}},"7":{"docs":{},".":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"docs":{}}},"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}},"a":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"t":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"&":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"m":{"docs":{},"c":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"c":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}},"docs":{}}}}},"docs":{}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"w":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"c":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"c":{"2":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"docs":{}}}}},"docs":{}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{},")":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"2":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"4":{"2":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"docs":{}},"docs":{},"t":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}}}}}},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959}},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"b":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"f":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"5":{"docs":{},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"!":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"r":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":2.5}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.006443298969072165},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.009635237439779766},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0048638132295719845},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00784313725490196},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"s":{"docs":{},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}},"”":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.011764705882352941}},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}}},"(":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"f":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"<":{"docs":{},">":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"。":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"任":{"docs":{},"意":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.009150326797385621}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301}},"e":{"docs":{},"*":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}},"<":{"docs":{},">":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"基":{"docs":{},"类":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"*":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"(":{"3":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"d":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":2.5},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}},"l":{"docs":{},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},"i":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":2.5}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.01307639366827254},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.00966183574879227},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"l":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"e":{"docs":{},"e":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},".":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.007662835249042145},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"n":{"docs":{},"d":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"(":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"e":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"(":{"1":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"docs":{}},"docs":{}}}}},"x":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}},"e":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0024235080278703423}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"c":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"y":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"i":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}},"u":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},".":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"docs":{}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.013333333333333334},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.007961783439490446},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.012195121951219513},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154}}}},"c":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"试":{"docs":{},"图":{"docs":{},"将":{"docs":{},"s":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"v":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}},"&":{"docs":{},"&":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"x":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667}},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},")":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"&":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"*":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0045207956600361665},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"*":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0045207956600361665}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},"s":{"docs":{},"*":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}}}}}}},"*":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"d":{"docs":{},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"e":{"docs":{},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"n":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"j":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"{":{"2":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"三":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"(":{"docs":{},"a":{"1":{"docs":{},"*":{"docs":{},")":{"docs":{},"、":{"docs":{},"(":{"docs":{},"a":{"2":{"docs":{},")":{"docs":{},"和":{"docs":{},"(":{"docs":{},"a":{"3":{"docs":{},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"显":{"docs":{},"然":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"不":{"docs":{},"够":{"docs":{},"特":{"docs":{},"化":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"要":{"docs":{},"比":{"docs":{},"较":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"3":{"docs":{},"特":{"docs":{},"化":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"双":{"docs":{},"向":{"docs":{},"代":{"docs":{},"换":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"a":{"3":{"docs":{},"是":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"，":{"docs":{},"单":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"a":{"1":{"docs":{},"不":{"docs":{},"能":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"—":{"docs":{},"—":{"docs":{},"这":{"docs":{},"条":{"docs":{},"规":{"docs":{},"则":{"docs":{},"也":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"比":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.004578754578754579},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"t":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"通":{"docs":{},"过":{"docs":{},"普":{"docs":{},"通":{"docs":{},"查":{"docs":{},"找":{"docs":{},"规":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"确":{"docs":{},"定":{"docs":{},"f":{"docs":{},"<":{"docs":{},">":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"而":{"docs":{},"对":{"docs":{},"于":{"docs":{},"g":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"其":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"n":{"docs":{},"中":{"docs":{},"，":{"docs":{},"其":{"docs":{},"后":{"docs":{},"的":{"docs":{},"会":{"docs":{},"被":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"小":{"docs":{},"于":{"docs":{},"号":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"就":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"1":{"docs":{},",":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"2":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},".":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}},"docs":{},"p":{"docs":{},"m":{"docs":{},"(":{"docs":{},"&":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"b":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}},"g":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"+":{"docs":{},"+":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"警":{"docs":{},"告":{"docs":{},"为":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"如":{"docs":{},"下":{"docs":{},"（":{"docs":{},"人":{"docs":{},"间":{"docs":{},"真":{"docs":{},"实":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":2.5},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"docs":{}},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"(":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004592422502870264},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"x":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.006888633754305396}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"&":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.006888633754305396}}}}}}}},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"b":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01217391304347826}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"2":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}},"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.03826086956521739}}}}}}},"u":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"e":{"docs":{},"）":{"docs":{},"的":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"我":{"docs":{},"根":{"docs":{},"据":{"docs":{},"原":{"docs":{},"文":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"写":{"docs":{},"代":{"docs":{},"码":{"docs":{},"测":{"docs":{},"试":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"命":{"docs":{},"令":{"docs":{},"为":{"docs":{},"g":{"docs":{},"+":{"docs":{},"+":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"全":{"docs":{},"称":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}},"(":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335}}}}}}}},"x":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"x":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.008333333333333333}}}},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"*":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"p":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"c":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}},"p":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"l":{"1":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"2":{"docs":{},")":{"docs":{},")":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"s":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.008492569002123142},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"g":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"的":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"(":{"docs":{},"\"":{"docs":{},"\"":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}},"r":{"docs":{},"g":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},"e":{"docs":{},"r":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"y":{"docs":{},"p":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}}}}}}}}},">":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"y":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"f":{"docs":{},"t":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"s":{"docs":{},"s":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}},"n":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.011472275334608031}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},"o":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095}},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}},"g":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"i":{"docs":{},"c":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"n":{"docs":{},"g":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.02444987775061125}},"e":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}},"}":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"s":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}},"o":{"docs":{},"p":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}},"k":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"u":{"docs":{},"p":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}},"，":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"）":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{},"当":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"非":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"在":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"和":{"docs":{},"类":{"docs":{},"中":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"查":{"docs":{},"找":{"docs":{},"该":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"被":{"docs":{},"这":{"docs":{},"些":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"和":{"docs":{},"类":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"一":{"docs":{},"样":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"s":{"docs":{},",":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"h":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565}},"e":{"docs":{},":":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"e":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01391304347826087}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}}}}}}},"a":{"docs":{},"r":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.008754863813229572}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}},")":{"docs":{},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"s":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0027529249827942187},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.003616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"(":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},":":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},":":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0027472527472527475}}},".":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"e":{"docs":{},"*":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":2.5}}},"y":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"）":{"docs":{},"是":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"编":{"docs":{},"程":{"docs":{},"的":{"docs":{},"典":{"docs":{},"型":{"docs":{},"代":{"docs":{},"表":{"docs":{},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"算":{"docs":{},"法":{"docs":{},"和":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"容":{"docs":{},"器":{"docs":{},"是":{"docs":{},"类":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"算":{"docs":{},"法":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"它":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"各":{"docs":{},"种":{"docs":{},"容":{"docs":{},"器":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"用":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"体":{"docs":{},"现":{"docs":{},"。":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.021447721179624665},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.007704160246533128}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},".":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}}},"，":{"docs":{},"g":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{},"非":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"被":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"e":{"docs":{},"f":{"1":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"2":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"3":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"docs":{}}}},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}},"m":{"0":{"3":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"docs":{}},"1":{"1":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"7":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"2":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"(":{"docs":{},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0038095238095238095},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0035650623885918},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.006329113924050633},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004830917874396135},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.005042016806722689},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.009244992295839754}},":":{"docs":{},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"]":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},":":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"*":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}},"x":{"3":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"2":{"0":{"docs":{},":":{"2":{"6":{"docs":{},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"docs":{}},"docs":{}}},"docs":{}},"3":{"0":{"docs":{},":":{"2":{"9":{"docs":{},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.049523809523809526},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"(":{"docs":{},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"a":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"b":{"docs":{},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.007619047619047619},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"i":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.015408320493066256}},":":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"d":{"docs":{},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}},"(":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.007782101167315175}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"t":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},"docs":{}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876}},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"<":{"docs":{},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"多":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"接":{"docs":{},"受":{"docs":{},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"当":{"docs":{},"在":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"对":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"调":{"docs":{},"用":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"个":{"docs":{},"人":{"docs":{},"认":{"docs":{},"为":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}},"n":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}},">":{"docs":{},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}},"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"t":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}}}},"y":{"docs":{},"b":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"d":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.03065134099616858},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.008258774948382657},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0036231884057971015}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"&":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"(":{"docs":{},"m":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.009541984732824428}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"e":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},"t":{"docs":{},"a":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":3.334403997144896}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"以":{"docs":{},"类":{"docs":{},"型":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"产":{"docs":{},"生":{"docs":{},"新":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"技":{"docs":{},"术":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"利":{"docs":{},"用":{"docs":{},"模":{"docs":{},"板":{"docs":{},"递":{"docs":{},"归":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"技":{"docs":{},"术":{"docs":{},"提":{"docs":{},"取":{"docs":{},"变":{"docs":{},"量":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"变":{"docs":{},"量":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"值":{"docs":{},"的":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"引":{"docs":{},"入":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"大":{"docs":{},"量":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"求":{"docs":{},"值":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"4":{"docs":{},"开":{"docs":{},"始":{"docs":{},"支":{"docs":{},"持":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"控":{"docs":{},"制":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"生":{"docs":{},"成":{"docs":{},"代":{"docs":{},"码":{"docs":{},"并":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"值":{"docs":{},"的":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"要":{"docs":{},"计":{"docs":{},"算":{"docs":{},"向":{"docs":{},"量":{"docs":{},"点":{"docs":{},"积":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"会":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"w":{"3":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}},"docs":{}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"2":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"r":{"docs":{},"u":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.003663003663003663}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"i":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}},"i":{"docs":{},"f":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"s":{"docs":{},"s":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"x":{"docs":{},"*":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"e":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"i":{"docs":{},"n":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}}}}}}},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}}}}},">":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}}}},"d":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}}}},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"d":{"docs":{},"l":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"p":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"y":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"t":{"docs":{},",":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154}}}}}},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"1":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}},"2":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.01910828025477707},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.011980830670926517},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00718849840255591}}}}}}}}}}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"_":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.006385696040868455}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},"y":{"docs":{},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"r":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}}},"l":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"s":{"docs":{},"g":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},"v":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"e":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":2.0116666666666667},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.013404825737265416}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"）":{"docs":{},"，":{"docs":{},"这":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"两":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}},"l":{"docs":{},")":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},"c":{"1":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"2":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}},"docs":{}},"k":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"1":{"6":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"docs":{}},"3":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"docs":{}},"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964}}}}}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"o":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"k":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0076481835564053535},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.009146341463414634},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0041592394533571005},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},":":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.025225225225225224},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.013764624913971095},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.013666072489601902},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0054249547920434},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0061633281972265025}}}},"n":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},".":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"e":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"c":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},"p":{"1":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"!":{"docs":{},"=":{"0":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"docs":{}}},"=":{"docs":{},"=":{"docs":{},"o":{"docs":{},"p":{"2":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}}}}},"docs":{}}}}}}}}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}},"2":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738}}},".":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"=":{"docs":{},"=":{"0":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"docs":{}}}}}}}}}},"(":{"docs":{},"b":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}}}}}}}},"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.01969057665260197}},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.01167728237791932},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.009057971014492754},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.009244992295839754}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0067226890756302525},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}},"=":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675}},"(":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"e":{"docs":{},"<":{"docs":{},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}},"f":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},"&":{"docs":{},"&":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.004219409282700422},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}},"\"":{"docs":{},"\"":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"[":{"docs":{},"]":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.007900677200902935},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}}}},"c":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}},"+":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"+":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}},"!":{"docs":{},"=":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}},"*":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}},"s":{"docs":{},":":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},":":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}},"n":{"docs":{},"d":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.012415349887133182}}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}},"i":{"docs":{},"z":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"e":{"docs":{},"b":{"docs":{},"c":{"docs":{},"o":{"docs":{},"）":{"docs":{},"是":{"docs":{},"指":{"docs":{},"当":{"docs":{},"同":{"docs":{},"一":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"（":{"docs":{},"也":{"docs":{},"包":{"docs":{},"括":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"分":{"docs":{},"配":{"docs":{},"到":{"docs":{},"同":{"docs":{},"一":{"docs":{},"起":{"docs":{},"始":{"docs":{},"地":{"docs":{},"址":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"基":{"docs":{},"类":{"docs":{},"分":{"docs":{},"配":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"(":{"docs":{},"*":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},",":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.003865979381443299}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01391304347826087},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.007334963325183374},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},":":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},">":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"s":{"docs":{},":":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},".":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}}}}},"s":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":2.5},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":2.0058365758754864},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":2.5015408320493067}},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}},"通":{"docs":{},"过":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"u":{"docs":{},"s":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.01045751633986928}},"e":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.006956521739130435}}}}}}}}},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"r":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}},"s":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"i":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},"e":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}}}}}}}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"e":{"docs":{},"r":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.003386004514672686}}}}},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.006535947712418301},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004018369690011481}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098}},"e":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.002296211251435132}}}}}}},"l":{"docs":{},"d":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"u":{"1":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"2":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},"s":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.005714285714285714},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.005307855626326964},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.005625879043600563},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.010383386581469648},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.015},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":2.0025542784163473},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.009554140127388535},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.010670731707317074},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.006535947712418301},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0081374321880651},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.012307692307692308},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.02817328082399273},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.013618677042801557},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.018719806763285024},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.014989293361884369},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.06135531135531135},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.012629161882893225},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.014285714285714285},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}}}}},"e":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"e":{"docs":{},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"p":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.013358778625954198},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.007494646680942184}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"o":{"docs":{},"n":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":2.503361344537815}}}},"q":{"docs":{},"u":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.006369426751592357},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"4":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},"docs":{}},"docs":{},")":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"e":{"docs":{},"d":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.004282655246252677},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}},"e":{"docs":{},"d":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}},"u":{"docs":{},"h":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}},"提":{"docs":{},"出":{"docs":{},"的":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.006097560975609756}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"v":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},">":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}}}},"v":{"1":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},")":{"1":{"2":{"3":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"2":{"docs":{},"(":{"docs":{},"v":{"1":{"docs":{},")":{"docs":{},";":{"2":{"6":{"docs":{},".":{"6":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"docs":{}}},"docs":{}},"docs":{}}}},"docs":{}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"3":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"docs":{}}}}}}}}}}}}}},"4":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"1":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"a":{"docs":{},"l":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"u":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.013333333333333334},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0021231422505307855},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0057251908396946565},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.00718849840255591},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":2.501801801801802},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.005154639175257732},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.008695652173913044},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.007573462587094819},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00392156862745098},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.014989293361884369},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.010073260073260074},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.004018369690011481},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.010084033613445379},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.011286681715575621},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":2.502680965147453},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},":":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}},"\"":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"}":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}},".":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.005166475315729047},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0031847133757961785}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"s":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},"v":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}},"e":{"docs":{},"&":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0028702640642939152},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.007563025210084034},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0033613445378151263}}},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"）":{"docs":{},"替":{"docs":{},"换":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"更":{"docs":{},"合":{"docs":{},"适":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"左":{"docs":{},"值":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"就":{"docs":{},"更":{"docs":{},"加":{"docs":{},"广":{"docs":{},"泛":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"y":{"docs":{},"p":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075}}}}},"&":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907}}},"*":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},";":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.003663003663003663},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}},":":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"重":{"docs":{},"用":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"具":{"docs":{},"有":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"生":{"docs":{},"命":{"docs":{},"周":{"docs":{},"期":{"docs":{},"，":{"docs":{},"姑":{"docs":{},"且":{"docs":{},"称":{"docs":{},"为":{"docs":{},"到":{"docs":{},"期":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.008333333333333333}},"中":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"需":{"docs":{},"要":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"默":{"docs":{},"认":{"docs":{},"不":{"docs":{},"传":{"docs":{},"递":{"docs":{},"右":{"docs":{},"值":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"。":{"docs":{},"当":{"docs":{},"使":{"docs":{},"用":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"时":{"docs":{},"，":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"左":{"docs":{},"值":{"docs":{},"，":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"属":{"docs":{},"性":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"默":{"docs":{},"认":{"docs":{},"传":{"docs":{},"递":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"该":{"docs":{},"值":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"作":{"docs":{},"为":{"docs":{},"某":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"实":{"docs":{},"参":{"docs":{},"时":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"后":{"docs":{},"该":{"docs":{},"值":{"docs":{},"可":{"docs":{},"能":{"docs":{},"就":{"docs":{},"失":{"docs":{},"效":{"docs":{},"了":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}}}},"(":{"docs":{},"v":{"docs":{},")":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"r":{"1":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"2":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"docs":{},"i":{"docs":{},"a":{"docs":{},"d":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":2.5014064697609},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}},"b":{"docs":{},"l":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.008333333333333333},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.004817618719889883},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"e":{"docs":{},"/":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.010924369747899159}},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"1":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"docs":{}},"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"小":{"docs":{},"节":{"docs":{},"中":{"docs":{},"详":{"docs":{},"细":{"docs":{},"说":{"docs":{},"明":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},".":{"docs":{},".":{"docs":{},".":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"拉":{"docs":{},"取":{"docs":{},"了":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"拉":{"docs":{},"取":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"基":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"继":{"docs":{},"承":{"docs":{},"了":{"docs":{},"下":{"docs":{},"列":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}}}}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},"e":{"docs":{},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"<":{"docs":{},">":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"p":{"docs":{},"p":{"docs":{},":":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}},"s":{"docs":{},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}},"u":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338}}},"a":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},")":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"c":{"2":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}},"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.016985138004246284},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.01717557251908397},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.016877637130801686},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.020766773162939296},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.011666666666666667},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.01981981981981982},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.018072289156626505},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.014175257731958763},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.02477632484514797},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.022292993630573247},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.039634146341463415},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0255496137849079},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0189873417721519},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.024615384615384615},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.020869565217391306},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.006361708573159649},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.01264591439688716},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.005434782608695652},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.01045751633986928},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.005042016806722689},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.019559902200488997},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.03389830508474576}},":":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}},">":{"docs":{},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"*":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"是":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"单":{"docs":{},"独":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}},"_":{"docs":{},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"e":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},")":{"docs":{},":":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"5":{"docs":{},".":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}}},"6":{"docs":{},".":{"6":{"docs":{},")":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"docs":{}}},"docs":{}}}}}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034}}}}}}},".":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},";":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},")":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01217391304347826},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004830917874396135},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.0196078431372549}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878}}}}}}}}}}}},"a":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785}}}},"t":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"(":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"<":{"docs":{},">":{"docs":{},"得":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"形":{"docs":{},"成":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"通":{"docs":{},"过":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"累":{"docs":{},"加":{"docs":{},"算":{"docs":{},"法":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"推":{"docs":{},"导":{"docs":{},"公":{"docs":{},"共":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"来":{"docs":{},"简":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0058823529411764705}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}}},"t":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0025210084033613447}},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}},"&":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},",":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"c":{"docs":{},"e":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}}}}},"(":{"1":{"7":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"docs":{},".":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}}}}},"docs":{}}},"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"t":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}}}},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"&":{"docs":{},"&":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001722158438576349}}}}}}},".":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"w":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}},"y":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},".":{"docs":{},")":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"a":{"docs":{},"p":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0030193236714975845},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"(":{"docs":{},"t":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.004246284501061571},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.006666666666666667},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0012117540139351712},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"i":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"v":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"d":{"docs":{},"s":{"docs":{},",":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"l":{"docs":{},"d":{"docs":{},"!":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}},"s":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"’":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"i":{"docs":{},"n":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"s":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"类":{"docs":{},"是":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"而":{"docs":{},"s":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"类":{"docs":{},"是":{"docs":{},"s":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"定":{"docs":{},"义":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"{":{"0":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}},"6":{"1":{"6":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}},"docs":{}},"docs":{}},"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.04},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.04777070063694268},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.04389312977099236},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.046413502109704644},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.04712460063897764},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.03666666666666667},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.032432432432432434},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.05353728489483748},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.017879948914431672},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.012048192771084338},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.04252577319587629},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.03922918100481762},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.06210191082802548},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.053353658536585365},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0368389780154486},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.05877034358047016},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.055384615384615386},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.034782608695652174},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.05240836110269615},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.06420233463035019},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.07729468599033816},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.0718954248366013},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.047109207708779445},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.05036630036630037},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.07520091848450057},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.07142857142857142},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.05417607223476298},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.05867970660146699},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.04776579352850539}},"\"":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}},"g":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0029708853238265003}}}}}}}},"a":{"docs":{},"k":{"docs":{},"a":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}},"}":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.004573170731707317},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},";":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}},"调":{"docs":{},"用":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"代":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"、":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"、":{"docs":{},"通":{"docs":{},"过":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"和":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"1":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}}}},"docs":{}}}}}},"}":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.009523809523809525},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.02335456475583864},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.02480916030534351},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.029535864978902954},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.022364217252396165},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.02},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.03063063063063063},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.03441682600382409},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.008939974457215836},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.02577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.019270474879559532},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.01751592356687898},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.038109756097560975},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0184194890077243},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.03616636528028933},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.006153846153846154},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.022608695652173914},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.012420478642835504},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.03404669260700389},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.044082125603864736},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.05359477124183006},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.009635974304068522},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.0505166475315729},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.046218487394957986},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.03160270880361174},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.03667481662591687},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.01848998459167951}},";":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.018046709129511677},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.007633587786259542},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.008438818565400843},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.010383386581469648},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0033333333333333335},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.017208413001912046},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.007731958762886598},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.01995870612525809},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.03503184713375796},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.01524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.013071895424836602},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.015370705244122965},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.03076923076923077},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.008695652173913044},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.034232050893668584},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.021400778210116732},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.027777777777777776},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.013071895424836602},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.034261241970021415},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.047619047619047616},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.021814006888633754},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.013445378151260505},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.007900677200902935},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.014669926650366748},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.015408320493066256}},"\\":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}},")":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.004201680672268907}}}}},"‘":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.0038314176245210726}}}}}}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{},":":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.02937420178799489}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"’":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.03065134099616858}}}}}}}},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"’":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"“":{"docs":{},"b":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}},"a":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}},"c":{"docs":{},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"”":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"传":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}},"只":{"docs":{},"将":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"内":{"docs":{},"联":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"将":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"内":{"docs":{},"联":{"docs":{},"。":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"组":{"docs":{},"织":{"docs":{},"方":{"docs":{},"式":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"错":{"docs":{},"误":{"docs":{},"都":{"docs":{},"会":{"docs":{},"超":{"docs":{},"级":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"本":{"docs":{},"节":{"docs":{},"给":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"。":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"如":{"docs":{},"下":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"文":{"docs":{},"档":{"docs":{},"中":{"docs":{},"会":{"docs":{},"对":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"提":{"docs":{},"出":{"docs":{},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"构":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"）":{"docs":{},"来":{"docs":{},"测":{"docs":{},"试":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"列":{"docs":{},"情":{"docs":{},"况":{"docs":{},"需":{"docs":{},"要":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"传":{"docs":{},"值":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"对":{"docs":{},"象":{"docs":{},"很":{"docs":{},"大":{"docs":{},"，":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"进":{"docs":{},"行":{"docs":{},"包":{"docs":{},"装":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"提":{"docs":{},"供":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"和":{"docs":{},"其":{"docs":{},"它":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"关":{"docs":{},"系":{"docs":{},"不":{"docs":{},"大":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"密":{"docs":{},"切":{"docs":{},"相":{"docs":{},"关":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"在":{"docs":{},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"或":{"docs":{},"者":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"或":{"docs":{},"者":{"docs":{},"常":{"docs":{},"量":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"实":{"docs":{},"现":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"获":{"docs":{},"取":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"遍":{"docs":{},"定":{"docs":{},"义":{"docs":{},"规":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"单":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}},"（":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}},"些":{"docs":{},"不":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"奇":{"docs":{},"怪":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"个":{"docs":{},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"点":{"docs":{},"点":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"都":{"docs":{},"是":{"docs":{},"常":{"docs":{},"量":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"是":{"docs":{},"以":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"[":{"docs":{},"]":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"可":{"docs":{},"以":{"docs":{},"检":{"docs":{},"查":{"docs":{},"语":{"docs":{},"义":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{},"，":{"docs":{},"姑":{"docs":{},"且":{"docs":{},"就":{"docs":{},"叫":{"docs":{},"神":{"docs":{},"谕":{"docs":{},"吧":{"docs":{},"~":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"两":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"翻":{"docs":{},"译":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"查":{"docs":{},"找":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"个":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"模":{"docs":{},"板":{"docs":{},"只":{"docs":{},"有":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"名":{"docs":{},"字":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"无":{"docs":{},"法":{"docs":{},"解":{"docs":{},"析":{"docs":{},"。":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"效":{"docs":{},"果":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"间":{"docs":{},"上":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"差":{"docs":{},"别":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"多":{"docs":{},"个":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"而":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"还":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"。":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"定":{"docs":{},"义":{"docs":{},"新":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"上":{"docs":{},"述":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"去":{"docs":{},"除":{"docs":{},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"保":{"docs":{},"证":{"docs":{},"永":{"docs":{},"远":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"。":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"贪":{"docs":{},"心":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"策":{"docs":{},"略":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"显":{"docs":{},"示":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"只":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{},"这":{"docs":{},"需":{"docs":{},"要":{"docs":{},"只":{"docs":{},"在":{"docs":{},"该":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"提":{"docs":{},"供":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"只":{"docs":{},"提":{"docs":{},"供":{"docs":{},"模":{"docs":{},"板":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"放":{"docs":{},"入":{"docs":{},"后":{"docs":{},"缀":{"docs":{},"为":{"docs":{},".":{"docs":{},"t":{"docs":{},"p":{"docs":{},"p":{"docs":{},"的":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"引":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"声":{"docs":{},"明":{"docs":{},"来":{"docs":{},"指":{"docs":{},"出":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"失":{"docs":{},"败":{"docs":{},"挪":{"docs":{},"到":{"docs":{},"代":{"docs":{},"换":{"docs":{},"相":{"docs":{},"关":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"体":{"docs":{},"或":{"docs":{},"者":{"docs":{},"类":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"其":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"证":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"支":{"docs":{},"持":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"能":{"docs":{},"够":{"docs":{},"接":{"docs":{},"收":{"docs":{},"任":{"docs":{},"意":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"以":{"docs":{},"接":{"docs":{},"收":{"docs":{},"任":{"docs":{},"意":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"空":{"docs":{},"基":{"docs":{},"类":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"将":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"作":{"docs":{},"为":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"而":{"docs":{},"应":{"docs":{},"该":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"类":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"元":{"docs":{},"组":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"接":{"docs":{},"收":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"和":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"中":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"单":{"docs":{},"独":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"更":{"docs":{},"详":{"docs":{},"细":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"见":{"docs":{},"第":{"5":{"docs":{},"章":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"docs":{}}}}}}}}}}}}}}}},"c":{"docs":{},"风":{"docs":{},"格":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"进":{"docs":{},"行":{"docs":{},"特":{"docs":{},"化":{"docs":{},"重":{"docs":{},"载":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"提":{"docs":{},"供":{"docs":{},"类":{"docs":{},"型":{"docs":{},"检":{"docs":{},"查":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{},"都":{"docs":{},"定":{"docs":{},"义":{"docs":{},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"过":{"docs":{},"于":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"了":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"宏":{"docs":{},"来":{"docs":{},"简":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"，":{"docs":{},"它":{"docs":{},"以":{"docs":{},"一":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"只":{"docs":{},"是":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"提":{"docs":{},"示":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"地":{"docs":{},"址":{"docs":{},"所":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"可":{"docs":{},"能":{"docs":{},"已":{"docs":{},"经":{"docs":{},"不":{"docs":{},"同":{"docs":{},"了":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"传":{"docs":{},"值":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"还":{"docs":{},"是":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"退":{"docs":{},"化":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"会":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}},"是":{"docs":{},"一":{"docs":{},"定":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"对":{"docs":{},"象":{"docs":{},"构":{"docs":{},"造":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"优":{"docs":{},"化":{"docs":{},"掉":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"于":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"带":{"docs":{},"来":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"开":{"docs":{},"销":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"不":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"递":{"docs":{},"只":{"docs":{},"读":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"统":{"docs":{},"意":{"docs":{},"义":{"docs":{},"下":{"docs":{},"的":{"docs":{},"左":{"docs":{},"值":{"docs":{},"和":{"docs":{},"右":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}},"使":{"docs":{},"用":{"1":{"9":{"docs":{},".":{"4":{"docs":{},".":{"2":{"docs":{},"节":{"docs":{},"中":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"类":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{},"公":{"docs":{},"共":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"模":{"docs":{},"板":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"上":{"docs":{},"例":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"版":{"docs":{},"本":{"docs":{},"：":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"u":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}},"大":{"docs":{},"括":{"docs":{},"号":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"能":{"docs":{},"被":{"docs":{},"正":{"docs":{},"确":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"5":{"docs":{},".":{"2":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"栈":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"指":{"docs":{},"定":{"docs":{},"内":{"docs":{},"部":{"docs":{},"容":{"docs":{},"器":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"写":{"docs":{},"两":{"docs":{},"遍":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"s":{"docs":{},"简":{"docs":{},"化":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"启":{"docs":{},"用":{"docs":{},"和":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"但":{"docs":{},"可":{"docs":{},"惜":{"docs":{},"的":{"docs":{},"是":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"支":{"docs":{},"持":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037}},"改":{"docs":{},"写":{"docs":{},"的":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"提":{"docs":{},"取":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"求":{"docs":{},"值":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"和":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"i":{"docs":{},"d":{"docs":{},"对":{"docs":{},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"断":{"docs":{},"言":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}},"术":{"docs":{},"语":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{},"实":{"docs":{},"现":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"的":{"docs":{},"完":{"docs":{},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},"实":{"docs":{},"现":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"完":{"docs":{},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"来":{"docs":{},"转":{"docs":{},"发":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{},"声":{"docs":{},"明":{"docs":{},"需":{"docs":{},"要":{"docs":{},"转":{"docs":{},"发":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"多":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"多":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}},"独":{"docs":{},"特":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"值":{"docs":{},"（":{"docs":{},"a":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"a":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"a":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"到":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"1":{"9":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},"节":{"docs":{},"中":{"docs":{},"的":{"docs":{},"类":{"docs":{},"似":{"docs":{},"。":{"docs":{},"书":{"docs":{},"中":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"有":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"应":{"docs":{},"该":{"docs":{},"提":{"docs":{},"供":{"docs":{},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"修":{"docs":{},"改":{"docs":{},"后":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}},"方":{"docs":{},"式":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"法":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784}}}}}},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"可":{"docs":{},"写":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}},"便":{"docs":{},"于":{"docs":{},"优":{"docs":{},"化":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"内":{"docs":{},"联":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"置":{"docs":{},"集":{"docs":{},"合":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"很":{"docs":{},"方":{"docs":{},"便":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"通":{"docs":{},"用":{"docs":{},"接":{"docs":{},"口":{"docs":{},"不":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"统":{"docs":{},"一":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"定":{"docs":{},"义":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"数":{"docs":{},"量":{"docs":{},"较":{"docs":{},"少":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"穷":{"docs":{},"举":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"提":{"docs":{},"供":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"术":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"更":{"docs":{},"为":{"docs":{},"精":{"docs":{},"确":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"在":{"docs":{},"解":{"docs":{},"析":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"优":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"重":{"docs":{},"载":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"类":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"不":{"docs":{},"同":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"让":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"为":{"docs":{},"每":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"单":{"docs":{},"独":{"docs":{},"生":{"docs":{},"成":{"docs":{},"了":{"docs":{},"一":{"docs":{},"份":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{},"用":{"docs":{},"具":{"docs":{},"体":{"docs":{},"类":{"docs":{},"型":{"docs":{},"替":{"docs":{},"换":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"称":{"docs":{},"为":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"该":{"docs":{},"过":{"docs":{},"程":{"docs":{},"产":{"docs":{},"生":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"）":{"docs":{},"。":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"求":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"支":{"docs":{},"持":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"则":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"就":{"docs":{},"能":{"docs":{},"正":{"docs":{},"常":{"docs":{},"工":{"docs":{},"作":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"速":{"docs":{},"览":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"重":{"docs":{},"载":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}},"更":{"docs":{},"多":{"docs":{},"用":{"docs":{},"于":{"docs":{},"重":{"docs":{},"载":{"docs":{},"c":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"c":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"、":{"docs":{},"推":{"docs":{},"导":{"docs":{},"或":{"docs":{},"者":{"docs":{},"默":{"docs":{},"认":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"指":{"docs":{},"定":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"异":{"docs":{},"常":{"docs":{},"声":{"docs":{},"明":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},"会":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"载":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"时":{"docs":{},"不":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"默":{"docs":{},"认":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"会":{"docs":{},"被":{"docs":{},"视":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"之":{"docs":{},"间":{"docs":{},"重":{"docs":{},"载":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}},"最":{"docs":{},"好":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"指":{"docs":{},"针":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"名":{"docs":{},"后":{"docs":{},"面":{"docs":{},"存":{"docs":{},"在":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"类":{"docs":{},"的":{"docs":{},"友":{"docs":{},"元":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"称":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"类":{"docs":{},"和":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"内":{"docs":{},"部":{"docs":{},"链":{"docs":{},"接":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"还":{"docs":{},"包":{"docs":{},"括":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"抛":{"docs":{},"出":{"docs":{},"的":{"docs":{},"异":{"docs":{},"常":{"docs":{},"中":{"docs":{},"（":{"docs":{},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"不":{"docs":{},"再":{"docs":{},"支":{"docs":{},"持":{"docs":{},"）":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"的":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"则":{"docs":{},"是":{"docs":{},"代":{"docs":{},"换":{"docs":{},"前":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"签":{"docs":{},"名":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"可":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"任":{"docs":{},"意":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"代":{"docs":{},"理":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"提":{"docs":{},"供":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"且":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"提":{"docs":{},"供":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"<":{"docs":{},">":{"docs":{},"提":{"docs":{},"供":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"声":{"docs":{},"明":{"docs":{},"多":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"用":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"同":{"docs":{},"一":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"）":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"类":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"重":{"docs":{},"载":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"并":{"docs":{},"将":{"docs":{},"其":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"打":{"docs":{},"印":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"完":{"docs":{},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"c":{"docs":{},"风":{"docs":{},"格":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"来":{"docs":{},"测":{"docs":{},"试":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"作":{"docs":{},"为":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"特":{"docs":{},"定":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"引":{"docs":{},"入":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"引":{"docs":{},"入":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"需":{"docs":{},"要":{"docs":{},"变":{"docs":{},"通":{"docs":{},"一":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}},"仅":{"docs":{},"对":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"特":{"docs":{},"化":{"docs":{},"，":{"docs":{},"类":{"docs":{},"中":{"docs":{},"其":{"docs":{},"余":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"从":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"生":{"docs":{},"成":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"、":{"docs":{},"移":{"docs":{},"动":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},"分":{"docs":{},"别":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"和":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"类":{"docs":{},"型":{"docs":{},"来":{"docs":{},"测":{"docs":{},"试":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"和":{"docs":{},"下":{"docs":{},"标":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}},"基":{"docs":{},"类":{"docs":{},"和":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"声":{"docs":{},"明":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"和":{"docs":{},"自":{"docs":{},"身":{"docs":{},"相":{"docs":{},"加":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"的":{"docs":{},"典":{"docs":{},"型":{"docs":{},"应":{"docs":{},"用":{"docs":{},"是":{"docs":{},"转":{"docs":{},"发":{"docs":{},"任":{"docs":{},"意":{"docs":{},"数":{"docs":{},"量":{"docs":{},"和":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"载":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}},"和":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}},"链":{"docs":{},"接":{"docs":{},"实":{"docs":{},"体":{"docs":{},"（":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"称":{"docs":{},"为":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"（":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"）":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"括":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"、":{"docs":{},"仿":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"）":{"docs":{},"和":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"安":{"docs":{},"全":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}},"选":{"docs":{},"的":{"docs":{},"桥":{"docs":{},"接":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"一":{"docs":{},"组":{"docs":{},"可":{"docs":{},"能":{"docs":{},"类":{"docs":{},"型":{"docs":{},"之":{"docs":{},"一":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"和":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"知":{"docs":{},"道":{"docs":{},"当":{"docs":{},"前":{"docs":{},"其":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"高":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"本":{"docs":{},"章":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"后":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"也":{"docs":{},"通":{"docs":{},"过":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"不":{"docs":{},"存":{"docs":{},"储":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"用":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"了":{"docs":{},"不":{"docs":{},"存":{"docs":{},"储":{"docs":{},"值":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"初":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"通":{"docs":{},"过":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}},"在":{"docs":{},"定":{"docs":{},"义":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"检":{"docs":{},"查":{"docs":{},"语":{"docs":{},"法":{"docs":{},"错":{"docs":{},"误":{"docs":{},"、":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"无":{"docs":{},"关":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"错":{"docs":{},"误":{"docs":{},"和":{"docs":{},"断":{"docs":{},"言":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"出":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"前":{"docs":{},"面":{"docs":{},"要":{"docs":{},"加":{"docs":{},"上":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"。":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"检":{"docs":{},"查":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"!":{"docs":{},"=":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"=":{"docs":{},"=":{"docs":{},"。":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"重":{"docs":{},"载":{"docs":{},"!":{"docs":{},"=":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"修":{"docs":{},"改":{"docs":{},"实":{"docs":{},"现":{"docs":{},"（":{"docs":{},"但":{"docs":{},"最":{"docs":{},"好":{"docs":{},"不":{"docs":{},"要":{"docs":{},"这":{"docs":{},"么":{"docs":{},"做":{"docs":{},"）":{"docs":{},"。":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"测":{"docs":{},"试":{"docs":{},"=":{"docs":{},"=":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"。":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"保":{"docs":{},"证":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"见":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"版":{"docs":{},"本":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"内":{"docs":{},"联":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"中":{"docs":{},"，":{"docs":{},"重":{"docs":{},"载":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"只":{"docs":{},"对":{"docs":{},"部":{"docs":{},"分":{"docs":{},"参":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"特":{"docs":{},"化":{"docs":{},"也":{"docs":{},"是":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"插":{"docs":{},"入":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"内":{"docs":{},"部":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"来":{"docs":{},"声":{"docs":{},"明":{"docs":{},"和":{"docs":{},"定":{"docs":{},"义":{"docs":{},"任":{"docs":{},"何":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"类":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"当":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"写":{"docs":{},"明":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"（":{"docs":{},"除":{"docs":{},"非":{"docs":{},"t":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"）":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"类":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"也":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"名":{"docs":{},"字":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"种":{"docs":{},"定":{"docs":{},"义":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"书":{"docs":{},"中":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"第":{"docs":{},"一":{"docs":{},"种":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"外":{"docs":{},"部":{"docs":{},"链":{"docs":{},"接":{"docs":{},"的":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"语":{"docs":{},"句":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"会":{"docs":{},"被":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"取":{"docs":{},"出":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"并":{"docs":{},"且":{"docs":{},"和":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"进":{"docs":{},"行":{"docs":{},"两":{"docs":{},"次":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"输":{"docs":{},"出":{"0":{"docs":{},"；":{"docs":{},"第":{"docs":{},"二":{"docs":{},"行":{"docs":{},"会":{"docs":{},"被":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"y":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"输":{"docs":{},"出":{"3":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"两":{"docs":{},"行":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"都":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"docs":{}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},"中":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"外":{"docs":{},"部":{"docs":{},"链":{"docs":{},"接":{"docs":{},"或":{"docs":{},"者":{"docs":{},"内":{"docs":{},"部":{"docs":{},"链":{"docs":{},"接":{"docs":{},"的":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"量":{"docs":{},"和":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"量":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"而":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"中":{"docs":{},"解":{"docs":{},"除":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"仅":{"docs":{},"限":{"docs":{},"于":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"必":{"docs":{},"须":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"实":{"docs":{},"参":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}},"docs":{}},"docs":{},"中":{"docs":{},"，":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"编":{"docs":{},"程":{"docs":{},"基":{"docs":{},"本":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"编":{"docs":{},"程":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"面":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"编":{"docs":{},"程":{"docs":{},"基":{"docs":{},"本":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"使":{"docs":{},"用":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"标":{"docs":{},"准":{"docs":{},"模":{"docs":{},"板":{"docs":{},"库":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"，":{"docs":{},"则":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"会":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"小":{"docs":{},"于":{"docs":{},"比":{"docs":{},"较":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"（":{"docs":{},"目":{"docs":{},"前":{"docs":{},"好":{"docs":{},"像":{"docs":{},"感":{"docs":{},"受":{"docs":{},"不":{"docs":{},"到":{"docs":{},"作":{"docs":{},"用":{"docs":{},"）":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"s":{"docs":{},"被":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"1":{"docs":{},"，":{"docs":{},"s":{"docs":{},"被":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"2":{"docs":{},"a":{"docs":{},"，":{"docs":{},"f":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},"被":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"2":{"docs":{},"b":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"语":{"docs":{},"义":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"&":{"docs":{},"&":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"条":{"docs":{},"件":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"语":{"docs":{},"义":{"docs":{},"，":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"则":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"有":{"docs":{},"效":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"能":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"名":{"docs":{},"称":{"docs":{},"查":{"docs":{},"找":{"docs":{},"规":{"docs":{},"则":{"docs":{},"自":{"docs":{},"动":{"docs":{},"找":{"docs":{},"到":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"并":{"docs":{},"将":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"这":{"docs":{},"一":{"docs":{},"过":{"docs":{},"程":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"参":{"docs":{},"与":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"也":{"docs":{},"支":{"docs":{},"持":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"实":{"docs":{},"现":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"能":{"docs":{},"够":{"docs":{},"找":{"docs":{},"到":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"和":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"g":{"1":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"应":{"docs":{},"用":{"docs":{},"普":{"docs":{},"通":{"docs":{},"查":{"docs":{},"找":{"docs":{},"规":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"此":{"docs":{},"时":{"docs":{},"g":{"1":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"定":{"docs":{},"义":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"名":{"docs":{},"字":{"docs":{},"g":{"1":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"解":{"docs":{},"析":{"docs":{},"的":{"docs":{},"。":{"docs":{},"当":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"2":{"docs":{},"时":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"和":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"g":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"无":{"docs":{},"法":{"docs":{},"应":{"docs":{},"用":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"规":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"声":{"docs":{},"明":{"docs":{},"类":{"docs":{},"和":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"被":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"整":{"docs":{},"型":{"docs":{},"常":{"docs":{},"量":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"不":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"并":{"docs":{},"使":{"docs":{},"用":{"docs":{},"预":{"docs":{},"链":{"docs":{},"接":{"docs":{},"器":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"链":{"docs":{},"接":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"发":{"docs":{},"现":{"docs":{},"未":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"则":{"docs":{},"去":{"docs":{},"重":{"docs":{},"新":{"docs":{},"编":{"docs":{},"译":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"重":{"docs":{},"复":{"docs":{},"上":{"docs":{},"述":{"docs":{},"过":{"docs":{},"程":{"docs":{},"直":{"docs":{},"到":{"docs":{},"链":{"docs":{},"接":{"docs":{},"成":{"docs":{},"功":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"先":{"docs":{},"有":{"docs":{},"鸡":{"docs":{},"还":{"docs":{},"是":{"docs":{},"先":{"docs":{},"有":{"docs":{},"蛋":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"只":{"docs":{},"保":{"docs":{},"留":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"保":{"docs":{},"留":{"docs":{},"所":{"docs":{},"有":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"不":{"docs":{},"去":{"docs":{},"检":{"docs":{},"查":{"docs":{},"这":{"docs":{},"些":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"完":{"docs":{},"全":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"。":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"中":{"docs":{},"，":{"docs":{},"很":{"docs":{},"多":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"非":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"通":{"docs":{},"过":{"docs":{},"普":{"docs":{},"通":{"docs":{},"查":{"docs":{},"找":{"docs":{},"规":{"docs":{},"则":{"docs":{},"或":{"docs":{},"者":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"规":{"docs":{},"则":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"也":{"docs":{},"会":{"docs":{},"被":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"作":{"docs":{},"为":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"后":{"docs":{},"，":{"docs":{},"p":{"docs":{},"和":{"docs":{},"a":{"2":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"指":{"docs":{},"向":{"docs":{},"同":{"docs":{},"一":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"保":{"docs":{},"证":{"docs":{},"语":{"docs":{},"义":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"这":{"docs":{},"样":{"docs":{},"写":{"docs":{},"（":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"有":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"会":{"docs":{},"查":{"docs":{},"找":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"过":{"docs":{},"的":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"会":{"docs":{},"再":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"一":{"docs":{},"行":{"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"定":{"docs":{},"义":{"docs":{},"多":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"时":{"docs":{},"，":{"docs":{},"仅":{"docs":{},"当":{"docs":{},"变":{"docs":{},"量":{"docs":{},"类":{"docs":{},"型":{"docs":{},"一":{"docs":{},"致":{"docs":{},"时":{"docs":{},"才":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"入":{"docs":{},"了":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"有":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"想":{"docs":{},"要":{"docs":{},"禁":{"docs":{},"掉":{"docs":{},"某":{"docs":{},"一":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"相":{"docs":{},"关":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"写":{"docs":{},"为":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"先":{"docs":{},"看":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"运":{"docs":{},"算":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"入":{"docs":{},"类":{"docs":{},"名":{"docs":{},"称":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"代":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"废":{"docs":{},"弃":{"docs":{},"了":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"标":{"docs":{},"准":{"docs":{},"下":{"docs":{},"，":{"docs":{},"即":{"docs":{},"使":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"其":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"均":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"未":{"docs":{},"来":{"docs":{},"可":{"docs":{},"能":{"docs":{},"纳":{"docs":{},"入":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"类":{"docs":{},"似":{"docs":{},"c":{"docs":{},"结":{"docs":{},"构":{"docs":{},"体":{"docs":{},"的":{"docs":{},"指":{"docs":{},"定":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{},"中":{"docs":{},"，":{"docs":{},"桥":{"docs":{},"接":{"docs":{},"模":{"docs":{},"式":{"docs":{},"（":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"下":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"而":{"docs":{},"在":{"docs":{},"静":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"下":{"docs":{},"，":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"是":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"一":{"docs":{},"般":{"docs":{},"具":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"，":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"基":{"docs":{},"本":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"提":{"docs":{},"供":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"见":{"1":{"9":{"docs":{},".":{"1":{"docs":{},".":{"3":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"a":{"docs":{},"和":{"docs":{},"b":{"docs":{},"不":{"docs":{},"能":{"docs":{},"相":{"docs":{},"加":{"docs":{},"，":{"docs":{},"则":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"因":{"docs":{},"为":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"失":{"docs":{},"败":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"此":{"docs":{},"时":{"docs":{},"是":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"在":{"docs":{},"代":{"docs":{},"换":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"并":{"docs":{},"不":{"docs":{},"适":{"docs":{},"用":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"调":{"docs":{},"用":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"要":{"docs":{},"求":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"是":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"的":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"访":{"docs":{},"问":{"docs":{},"类":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"中":{"docs":{},"将":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"输":{"docs":{},"出":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"计":{"docs":{},"算":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"了":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"r":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"就":{"docs":{},"是":{"docs":{},"r":{"docs":{},"，":{"docs":{},"而":{"docs":{},"当":{"docs":{},"未":{"docs":{},"指":{"docs":{},"定":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"（":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"r":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"为":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"2":{"6":{"docs":{},".":{"2":{"docs":{},"）":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"推":{"docs":{},"导":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"调":{"docs":{},"用":{"docs":{},"访":{"docs":{},"问":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"可":{"docs":{},"以":{"docs":{},"同":{"docs":{},"时":{"docs":{},"展":{"docs":{},"开":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}},"重":{"docs":{},"和":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"2":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"完":{"docs":{},"全":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"反":{"docs":{},"过":{"docs":{},"来":{"docs":{},"不":{"docs":{},"能":{"docs":{},"，":{"docs":{},"则":{"docs":{},"得":{"docs":{},"到":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"关":{"docs":{},"系":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"传":{"docs":{},"c":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"来":{"docs":{},"去":{"docs":{},"掉":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"传":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"参":{"docs":{},"数":{"docs":{},"会":{"docs":{},"退":{"docs":{},"化":{"docs":{},"为":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"传":{"docs":{},"递":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"中":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"且":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"标":{"docs":{},"准":{"docs":{},"并":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"指":{"docs":{},"定":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"靠":{"docs":{},"后":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"得":{"docs":{},"不":{"docs":{},"到":{"docs":{},"想":{"docs":{},"要":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"初":{"docs":{},"值":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"常":{"docs":{},"量":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"只":{"docs":{},"有":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"优":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"没":{"docs":{},"有":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"这":{"docs":{},"样":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"都":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"了":{"docs":{},"同":{"docs":{},"一":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"重":{"docs":{},"复":{"docs":{},"定":{"docs":{},"义":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"相":{"docs":{},"同":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"则":{"docs":{},"在":{"docs":{},"链":{"docs":{},"接":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"就":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"也":{"docs":{},"存":{"docs":{},"在":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"包":{"docs":{},"括":{"docs":{},"贪":{"docs":{},"心":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"、":{"docs":{},"查":{"docs":{},"询":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"和":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"有":{"docs":{},"例":{"docs":{},"外":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"禁":{"docs":{},"掉":{"docs":{},"推":{"docs":{},"到":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"对":{"docs":{},"内":{"docs":{},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"其":{"docs":{},"初":{"docs":{},"值":{"docs":{},"为":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"残":{"docs":{},"留":{"docs":{},"值":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"提":{"docs":{},"供":{"docs":{},"使":{"docs":{},"用":{"docs":{},"大":{"docs":{},"括":{"docs":{},"号":{"docs":{},"进":{"docs":{},"行":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"（":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"知":{"docs":{},"道":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"重":{"docs":{},"载":{"docs":{},"或":{"docs":{},"者":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"定":{"docs":{},"义":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"含":{"docs":{},"有":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"或":{"docs":{},"者":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"最":{"docs":{},"好":{"docs":{},"带":{"docs":{},"上":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"只":{"docs":{},"写":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"的":{"docs":{},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"更":{"docs":{},"换":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"就":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"进":{"docs":{},"行":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"则":{"docs":{},"当":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"换":{"docs":{},"失":{"docs":{},"败":{"docs":{},"时":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"会":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"编":{"docs":{},"译":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"称":{"docs":{},"为":{"docs":{},"可":{"docs":{},"安":{"docs":{},"全":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"接":{"docs":{},"写":{"docs":{},"为":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"*":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"确":{"docs":{},"实":{"docs":{},"是":{"docs":{},"性":{"docs":{},"能":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"预":{"docs":{},"编":{"docs":{},"译":{"docs":{},"头":{"docs":{},"，":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"包":{"docs":{},"含":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"的":{"docs":{},"可":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"将":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"照":{"docs":{},"常":{"docs":{},"传":{"docs":{},"递":{"docs":{},"。":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},":":{"docs":{},":":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"就":{"docs":{},"当":{"docs":{},"做":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"定":{"docs":{},"义":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},":":{"docs":{},":":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"则":{"docs":{},"根":{"docs":{},"据":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"规":{"docs":{},"则":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"参":{"docs":{},"是":{"docs":{},"指":{"docs":{},"针":{"docs":{},"或":{"docs":{},"者":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"被":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"修":{"docs":{},"饰":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"形":{"docs":{},"参":{"docs":{},"是":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"形":{"docs":{},"参":{"docs":{},"在":{"docs":{},"被":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"实":{"docs":{},"参":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"必":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"且":{"docs":{},"实":{"docs":{},"参":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"则":{"docs":{},"t":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"则":{"docs":{},"推":{"docs":{},"导":{"docs":{},"失":{"docs":{},"败":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"形":{"docs":{},"参":{"docs":{},"是":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"实":{"docs":{},"参":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"形":{"docs":{},"参":{"docs":{},"是":{"docs":{},"传":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"则":{"docs":{},"实":{"docs":{},"参":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"退":{"docs":{},"化":{"docs":{},"（":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"被":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"时":{"docs":{},"过":{"docs":{},"期":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},")":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"t":{"docs":{},"&":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}},"仅":{"docs":{},"对":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"还":{"docs":{},"包":{"docs":{},"括":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"还":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"左":{"docs":{},"值":{"docs":{},"、":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"限":{"docs":{},"定":{"docs":{},"符":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"没":{"docs":{},"有":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"是":{"docs":{},"非":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"编":{"docs":{},"译":{"docs":{},"。":{"docs":{},"借":{"docs":{},"鉴":{"1":{"9":{"docs":{},".":{"6":{"docs":{},".":{"3":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"移":{"docs":{},"动":{"docs":{},"是":{"docs":{},"否":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"之":{"docs":{},"前":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"移":{"docs":{},"动":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"要":{"docs":{},"获":{"docs":{},"取":{"docs":{},"某":{"docs":{},"种":{"docs":{},"整":{"docs":{},"型":{"docs":{},"的":{"docs":{},"无":{"docs":{},"符":{"docs":{},"号":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"某":{"docs":{},"操":{"docs":{},"作":{"docs":{},"是":{"docs":{},"否":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"是":{"docs":{},"否":{"docs":{},"会":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"、":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"等":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"很":{"docs":{},"多":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"见":{"docs":{},"书":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"元":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"按":{"docs":{},"照":{"docs":{},"大":{"docs":{},"小":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"对":{"docs":{},"下":{"docs":{},"标":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"应":{"docs":{},"用":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"点":{"docs":{},"增":{"docs":{},"加":{"docs":{},"颜":{"docs":{},"色":{"docs":{},"和":{"docs":{},"标":{"docs":{},"签":{"docs":{},"等":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"还":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"的":{"docs":{},"点":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"派":{"docs":{},"生":{"docs":{},"出":{"docs":{},"新":{"docs":{},"的":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"空":{"docs":{},"基":{"docs":{},"类":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{},"相":{"docs":{},"同":{"docs":{},"（":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"）":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"在":{"docs":{},"我":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"输":{"docs":{},"出":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"值":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"是":{"docs":{},"否":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"重":{"docs":{},"载":{"docs":{},"=":{"docs":{},"=":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"则":{"docs":{},"要":{"docs":{},"编":{"docs":{},"写":{"docs":{},"很":{"docs":{},"多":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"将":{"docs":{},"访":{"docs":{},"问":{"docs":{},"函":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"原":{"docs":{},"地":{"docs":{},"析":{"docs":{},"构":{"docs":{},"正":{"docs":{},"常":{"docs":{},"完":{"docs":{},"成":{"docs":{},"而":{"docs":{},"原":{"docs":{},"地":{"docs":{},"构":{"docs":{},"造":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"了":{"docs":{},"异":{"docs":{},"常":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"将":{"docs":{},"处":{"docs":{},"于":{"docs":{},"未":{"docs":{},"存":{"docs":{},"储":{"docs":{},"值":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"函":{"docs":{},"数":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"无":{"docs":{},"论":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"访":{"docs":{},"问":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"将":{"docs":{},"不":{"docs":{},"能":{"docs":{},"编":{"docs":{},"译":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"为":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}},"左":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"至":{"docs":{},"少":{"docs":{},"应":{"docs":{},"该":{"docs":{},"和":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"一":{"docs":{},"样":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"行":{"docs":{},"函":{"docs":{},"数":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"既":{"docs":{},"包":{"docs":{},"括":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"包":{"docs":{},"括":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"规":{"docs":{},"则":{"docs":{},"会":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"1":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"没":{"docs":{},"有":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"将":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"列":{"docs":{},"表":{"docs":{},"分":{"docs":{},"割":{"docs":{},"为":{"docs":{},"多":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"定":{"docs":{},"义":{"docs":{},"新":{"docs":{},"类":{"docs":{},"型":{"docs":{},"r":{"docs":{},"t":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"根":{"docs":{},"据":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{},"r":{"docs":{},"t":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"出":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}},"专":{"docs":{},"用":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"：":{"docs":{},"提":{"docs":{},"供":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{},"时":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"了":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"基":{"docs":{},"础":{"docs":{},"操":{"docs":{},"作":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"量":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"包":{"docs":{},"括":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"常":{"docs":{},"量":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"可":{"docs":{},"以":{"docs":{},"传":{"docs":{},"给":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"会":{"docs":{},"包":{"docs":{},"含":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}},"总":{"docs":{},"结":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}},"，":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"推":{"docs":{},"导":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"测":{"docs":{},"试":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"的":{"docs":{},"是":{"docs":{},"x":{"7":{"docs":{},"。":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"只":{"docs":{},"在":{"docs":{},"条":{"docs":{},"件":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"、":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"和":{"docs":{},"条":{"docs":{},"件":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"?":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"终":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}},"早":{"docs":{},"由":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"还":{"docs":{},"是":{"docs":{},"将":{"docs":{},"元":{"docs":{},"组":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"为":{"docs":{},"头":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"存":{"docs":{},"储":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"些":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"不":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"过":{"docs":{},"程":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"a":{"docs":{},"去":{"docs":{},"确":{"docs":{},"定":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"p":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}},"包":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"调":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"不":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"相":{"docs":{},"同":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"必":{"docs":{},"须":{"docs":{},"一":{"docs":{},"致":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"符":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"将":{"docs":{},"会":{"docs":{},"被":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"，":{"docs":{},"引":{"docs":{},"用":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"相":{"docs":{},"同":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"必":{"docs":{},"须":{"docs":{},"一":{"docs":{},"致":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"会":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}},"试":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"是":{"docs":{},"为":{"docs":{},"部":{"docs":{},"分":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"提":{"docs":{},"供":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"为":{"docs":{},"t":{"docs":{},"*":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"和":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"或":{"docs":{},"者":{"docs":{},"类":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"转":{"docs":{},"发":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}},"特":{"docs":{},"化":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}},"是":{"docs":{},"为":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"提":{"docs":{},"供":{"docs":{},"某":{"docs":{},"种":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"问":{"docs":{},"题":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"名":{"docs":{},"称":{"docs":{},"解":{"docs":{},"析":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"不":{"docs":{},"能":{"docs":{},"代":{"docs":{},"替":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"实":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"形":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"包":{"docs":{},"含":{"docs":{},"模":{"docs":{},"型":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"是":{"docs":{},"最":{"docs":{},"广":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"链":{"docs":{},"接":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"未":{"docs":{},"来":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"展":{"docs":{},"开":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"生":{"docs":{},"成":{"docs":{},"程":{"docs":{},"序":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"素":{"docs":{},"性":{"docs":{},"判":{"docs":{},"断":{"docs":{},"程":{"docs":{},"序":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"内":{"docs":{},"联":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}},"链":{"docs":{},"接":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"多":{"docs":{},"态":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}},"继":{"docs":{},"承":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"中":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"是":{"docs":{},"用":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"替":{"docs":{},"代":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"得":{"docs":{},"到":{"docs":{},"常":{"docs":{},"规":{"docs":{},"类":{"docs":{},"和":{"docs":{},"常":{"docs":{},"规":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"：":{"docs":{},"通":{"docs":{},"过":{"docs":{},"代":{"docs":{},"换":{"docs":{},"生":{"docs":{},"成":{"docs":{},"类":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"是":{"docs":{},"否":{"docs":{},"代":{"docs":{},"换":{"docs":{},"全":{"docs":{},"部":{"docs":{},"参":{"docs":{},"数":{"docs":{},"分":{"docs":{},"为":{"docs":{},"完":{"docs":{},"整":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"和":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"（":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}},"的":{"docs":{},"等":{"docs":{},"价":{"docs":{},"性":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"指":{"docs":{},"定":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}},"形":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}},"标":{"docs":{},"识":{"docs":{},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"术":{"docs":{},"语":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}},"类":{"docs":{},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"开":{"docs":{},"发":{"docs":{},"者":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"者":{"docs":{},"都":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"者":{"docs":{},"，":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"保":{"docs":{},"证":{"docs":{},"模":{"docs":{},"板":{"docs":{},"针":{"docs":{},"对":{"docs":{},"任":{"docs":{},"意":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"实":{"docs":{},"参":{"docs":{},"都":{"docs":{},"有":{"docs":{},"效":{"docs":{},"？":{"docs":{},"对":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"使":{"docs":{},"用":{"docs":{},"者":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"出":{"docs":{},"错":{"docs":{},"时":{"docs":{},"该":{"docs":{},"如":{"docs":{},"何":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"试":{"docs":{},"？":{"docs":{},"本":{"docs":{},"章":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"分":{"docs":{},"为":{"docs":{},"了":{"docs":{},"两":{"docs":{},"类":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"类":{"docs":{},"是":{"docs":{},"语":{"docs":{},"法":{"docs":{},"限":{"docs":{},"制":{"docs":{},"（":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"块":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},"拟":{"docs":{},"类":{"docs":{},"型":{"docs":{},"退":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"a":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{},"b":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"则":{"docs":{},"就":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"三":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},"会":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"会":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"无":{"docs":{},"法":{"docs":{},"避":{"docs":{},"免":{"docs":{},"触":{"docs":{},"发":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"错":{"docs":{},"误":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"链":{"docs":{},"接":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"只":{"docs":{},"推":{"docs":{},"导":{"docs":{},"主":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"、":{"docs":{},"指":{"docs":{},"针":{"docs":{},"等":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"示":{"docs":{},"添":{"docs":{},"加":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"些":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{},"之":{"docs":{},"后":{"docs":{},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"推":{"docs":{},"导":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}},"语":{"docs":{},"法":{"docs":{},"简":{"docs":{},"单":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"前":{"docs":{},"几":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"推":{"docs":{},"导":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"考":{"docs":{},"查":{"docs":{},"每":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"最":{"docs":{},"终":{"docs":{},"决":{"docs":{},"定":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"当":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"包":{"docs":{},"括":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"会":{"docs":{},"推":{"docs":{},"导":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"其":{"docs":{},"视":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"考":{"docs":{},"查":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"毫":{"docs":{},"无":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"与":{"docs":{},"其":{"docs":{},"将":{"docs":{},"其":{"docs":{},"视":{"docs":{},"为":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"语":{"docs":{},"言":{"docs":{},"更":{"docs":{},"倾":{"docs":{},"向":{"docs":{},"于":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"它":{"docs":{},"—":{"docs":{},"—":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"代":{"docs":{},"换":{"docs":{},"失":{"docs":{},"败":{"docs":{},"不":{"docs":{},"是":{"docs":{},"错":{"docs":{},"误":{"docs":{},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"1":{"docs":{},"(":{"docs":{},")":{"docs":{},"时":{"docs":{},"，":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},">":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"t":{"docs":{},"和":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"保":{"docs":{},"存":{"docs":{},"任":{"docs":{},"意":{"docs":{},"的":{"docs":{},"可":{"docs":{},"调":{"docs":{},"用":{"docs":{},"对":{"docs":{},"象":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"种":{"docs":{},"包":{"docs":{},"含":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"参":{"docs":{},"数":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"为":{"docs":{},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"则":{"docs":{},"为":{"docs":{},"常":{"docs":{},"量":{"docs":{},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"）":{"docs":{},"，":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"的":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"和":{"docs":{},"其":{"docs":{},"它":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"调":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"一":{"docs":{},"节":{"docs":{},"中":{"docs":{},"有":{"docs":{},"这":{"docs":{},"样":{"docs":{},"一":{"docs":{},"个":{"docs":{},"注":{"docs":{},"释":{"docs":{},"，":{"docs":{},"没":{"docs":{},"看":{"docs":{},"懂":{"docs":{},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"分":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"在":{"docs":{},"第":{"1":{"6":{"docs":{},"章":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"忘":{"docs":{},"记":{"docs":{},"了":{"docs":{},"。":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"三":{"docs":{},"参":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"中":{"docs":{},"t":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"c":{"docs":{},".":{"2":{"docs":{},".":{"1":{"docs":{},"中":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"是":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"。":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"(":{"3":{"docs":{},",":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}},"程":{"docs":{},"序":{"docs":{},"会":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"中":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"小":{"docs":{},"于":{"1":{"8":{"docs":{},"的":{"docs":{},"素":{"docs":{},"数":{"docs":{},"。":{"docs":{},"。":{"docs":{},"。":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"名":{"docs":{},"字":{"docs":{},"有":{"docs":{},"点":{"docs":{},"绕":{"docs":{},"，":{"docs":{},"实":{"docs":{},"际":{"docs":{},"意":{"docs":{},"思":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"存":{"docs":{},"储":{"docs":{},"值":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"构":{"docs":{},"造":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"只":{"docs":{},"支":{"docs":{},"持":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"2":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"或":{"docs":{},"许":{"docs":{},"在":{"docs":{},"对":{"docs":{},"称":{"docs":{},"密":{"docs":{},"码":{"docs":{},"算":{"docs":{},"法":{"docs":{},"置":{"docs":{},"换":{"docs":{},"中":{"docs":{},"用":{"docs":{},"到":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"我":{"docs":{},"印":{"docs":{},"象":{"docs":{},"里":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"关":{"docs":{},"于":{"docs":{},"移":{"docs":{},"动":{"docs":{},"语":{"docs":{},"义":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"：":{"docs":{},"移":{"docs":{},"动":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{},"优":{"docs":{},"化":{"docs":{},"为":{"docs":{},"内":{"docs":{},"部":{"docs":{},"资":{"docs":{},"源":{"docs":{},"的":{"docs":{},"偷":{"docs":{},"取":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"被":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"将":{"docs":{},"要":{"docs":{},"被":{"docs":{},"释":{"docs":{},"放":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"代":{"docs":{},"换":{"docs":{},"和":{"docs":{},"第":{"2":{"docs":{},"章":{"docs":{},"中":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"部":{"docs":{},"分":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"概":{"docs":{},"念":{"docs":{},"。":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"通":{"docs":{},"过":{"docs":{},"代":{"docs":{},"换":{"docs":{},"生":{"docs":{},"成":{"docs":{},"一":{"docs":{},"些":{"docs":{},"无":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"签":{"docs":{},"名":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"模":{"docs":{},"板":{"docs":{},"最":{"docs":{},"终":{"docs":{},"不":{"docs":{},"会":{"docs":{},"变":{"docs":{},"成":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"（":{"docs":{},"这":{"docs":{},"是":{"docs":{},"我":{"docs":{},"猜":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"需":{"docs":{},"要":{"docs":{},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{},"就":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"所":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{},"，":{"docs":{},"则":{"docs":{},"该":{"docs":{},"名":{"docs":{},"称":{"docs":{},"就":{"docs":{},"是":{"docs":{},"未":{"docs":{},"知":{"docs":{},"特":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"合":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"指":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"于":{"docs":{},"要":{"docs":{},"求":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"必":{"docs":{},"须":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"=":{"docs":{},"=":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"这":{"docs":{},"对":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"没":{"docs":{},"有":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"有":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"是":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"基":{"docs":{},"于":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"解":{"docs":{},"决":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"析":{"docs":{},"构":{"docs":{},"也":{"docs":{},"是":{"docs":{},"原":{"docs":{},"地":{"docs":{},"析":{"docs":{},"构":{"docs":{},"，":{"docs":{},"即":{"docs":{},"析":{"docs":{},"构":{"docs":{},"后":{"docs":{},"不":{"docs":{},"释":{"docs":{},"放":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"有":{"docs":{},"且":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"强":{"docs":{},"制":{"docs":{},"析":{"docs":{},"构":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"都":{"docs":{},"调":{"docs":{},"用":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"原":{"docs":{},"始":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"给":{"docs":{},"出":{"docs":{},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"原":{"docs":{},"地":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"即":{"docs":{},"在":{"docs":{},"指":{"docs":{},"针":{"docs":{},"所":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"构":{"docs":{},"造":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"测":{"docs":{},"试":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"产":{"docs":{},"生":{"docs":{},"类":{"docs":{},"似":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"就":{"docs":{},"意":{"docs":{},"味":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"及":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"能":{"docs":{},"可":{"docs":{},"以":{"docs":{},"共":{"docs":{},"存":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"样":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"次":{"docs":{},"数":{"docs":{},"就":{"docs":{},"都":{"docs":{},"降":{"docs":{},"低":{"docs":{},"为":{"1":{"docs":{},"次":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"很":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"应":{"docs":{},"该":{"docs":{},"将":{"docs":{},"索":{"docs":{},"引":{"docs":{},"序":{"docs":{},"列":{"docs":{},"变":{"docs":{},"成":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"索":{"docs":{},"引":{"docs":{},"列":{"docs":{},"表":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"我":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"通":{"docs":{},"过":{"docs":{},"减":{"docs":{},"法":{"docs":{},"计":{"docs":{},"算":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"，":{"docs":{},"大":{"docs":{},"小":{"docs":{},"是":{"6":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"3":{"docs":{},"个":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"多":{"docs":{},"输":{"docs":{},"出":{"docs":{},"三":{"docs":{},"行":{"docs":{},"。":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"时":{"docs":{},"只":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"了":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"。":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"引":{"docs":{},"用":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"）":{"docs":{},"。":{"docs":{},"联":{"docs":{},"想":{"docs":{},"到":{"docs":{},"第":{"1":{"4":{"docs":{},"章":{"docs":{},"开":{"docs":{},"头":{"docs":{},"提":{"docs":{},"到":{"docs":{},"过":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"只":{"docs":{},"在":{"docs":{},"获":{"docs":{},"取":{"docs":{},"类":{"docs":{},"大":{"docs":{},"小":{"docs":{},"或":{"docs":{},"者":{"docs":{},"访":{"docs":{},"问":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"时":{"docs":{},"才":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"也":{"docs":{},"印":{"docs":{},"证":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"说":{"docs":{},"法":{"docs":{},"。":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"当":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"就":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"歧":{"docs":{},"义":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"加":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"度":{"docs":{},"信":{"docs":{},"息":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"和":{"docs":{},"尾":{"docs":{},"置":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}},"识":{"docs":{},"别":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"载":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"迟":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"求":{"docs":{},"值":{"docs":{},"时":{"docs":{},"间":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"多":{"docs":{},"态":{"docs":{},"是":{"docs":{},"未":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"的":{"docs":{},"（":{"docs":{},"u":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"）":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"表":{"docs":{},"达":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"某":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}},"智":{"docs":{},"能":{"docs":{},"指":{"docs":{},"针":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},">":{"docs":{},"(":{"4":{"docs":{},".":{"2":{"docs":{},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"调":{"docs":{},"用":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"向":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"禁":{"docs":{},"掉":{"docs":{},"某":{"docs":{},"些":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}},"禁":{"docs":{},"掉":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"优":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"合":{"docs":{},"成":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"可":{"docs":{},"以":{"docs":{},"模":{"docs":{},"板":{"docs":{},"化":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"合":{"docs":{},"成":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"向":{"docs":{},"传":{"docs":{},"值":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"实":{"docs":{},"现":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"函":{"docs":{},"数":{"docs":{},"重":{"docs":{},"载":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"实":{"docs":{},"现":{"docs":{},"执":{"docs":{},"行":{"docs":{},"路":{"docs":{},"径":{"docs":{},"选":{"docs":{},"择":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}},"技":{"docs":{},"术":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"根":{"docs":{},"据":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"条":{"docs":{},"件":{"docs":{},"选":{"docs":{},"择":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"、":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"等":{"docs":{},"技":{"docs":{},"术":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"展":{"docs":{},"开":{"docs":{},"并":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"值":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"&":{"docs":{},"&":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"对":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"的":{"docs":{},"完":{"docs":{},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"可":{"docs":{},"以":{"docs":{},"声":{"docs":{},"明":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"多":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"、":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"可":{"docs":{},"以":{"docs":{},"声":{"docs":{},"明":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"<":{"docs":{},">":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"启":{"docs":{},"用":{"docs":{},"和":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"原":{"docs":{},"理":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"i":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"只":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"部":{"docs":{},"分":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"，":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"分":{"docs":{},"支":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"可":{"docs":{},"知":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"在":{"docs":{},"包":{"docs":{},"含":{"docs":{},"引":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"或":{"docs":{},"者":{"docs":{},"定":{"docs":{},"义":{"docs":{},"之":{"docs":{},"后":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{},"是":{"docs":{},"在":{"docs":{},"包":{"docs":{},"含":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"或":{"docs":{},"者":{"docs":{},"定":{"docs":{},"义":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"传":{"docs":{},"递":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"左":{"docs":{},"值":{"docs":{},"右":{"docs":{},"值":{"docs":{},"属":{"docs":{},"性":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"化":{"docs":{},"提":{"docs":{},"供":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"多":{"docs":{},"态":{"docs":{},"是":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"的":{"docs":{},"（":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{},"和":{"docs":{},"动":{"docs":{},"态":{"docs":{},"的":{"docs":{},"（":{"docs":{},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"）":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"将":{"docs":{},"布":{"docs":{},"尔":{"docs":{},"值":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"docs":{},"a":{"docs":{},"n":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"现":{"docs":{},"策":{"docs":{},"略":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"实":{"docs":{},"现":{"docs":{},"累":{"docs":{},"加":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"标":{"docs":{},"签":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"实":{"docs":{},"现":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"分":{"docs":{},"发":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{},"关":{"docs":{},"系":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"列":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"反":{"docs":{},"转":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"、":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"和":{"docs":{},"析":{"docs":{},"构":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}},"常":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"下":{"docs":{},"面":{"docs":{},"三":{"docs":{},"部":{"docs":{},"分":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}},"重":{"docs":{},"载":{"docs":{},"时":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"保":{"docs":{},"证":{"docs":{},"只":{"docs":{},"有":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"不":{"docs":{},"同":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"只":{"docs":{},"能":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"一":{"docs":{},"个":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"非":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}},"了":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"类":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"间":{"docs":{},"仅":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"偏":{"docs":{},"序":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"比":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"。":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"规":{"docs":{},"则":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"顺":{"docs":{},"序":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"将":{"docs":{},"首":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}},"规":{"docs":{},"则":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"应":{"docs":{},"用":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"具":{"docs":{},"名":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"大":{"docs":{},"致":{"docs":{},"分":{"docs":{},"为":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"范":{"docs":{},"围":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},"细":{"docs":{},"节":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}},"排":{"docs":{},"和":{"docs":{},"选":{"docs":{},"择":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"除":{"docs":{},"了":{"2":{"0":{"docs":{},".":{"2":{"docs":{},"中":{"docs":{},"已":{"docs":{},"经":{"docs":{},"提":{"docs":{},"到":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"分":{"docs":{},"类":{"docs":{},"外":{"docs":{},"，":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"基":{"docs":{},"于":{"docs":{},"类":{"docs":{},"型":{"docs":{},"属":{"docs":{},"性":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"还":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"_":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"为":{"docs":{},"其":{"docs":{},"赋":{"docs":{},"默":{"docs":{},"认":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"三":{"docs":{},"种":{"docs":{},"在":{"docs":{},"类":{"docs":{},"中":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"类":{"docs":{},"外":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"知":{"docs":{},"道":{"docs":{},"在":{"docs":{},"干":{"docs":{},"嘛":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"还":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"传":{"docs":{},"值":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-15-ch1-function-templates.html":{"ref":"2021-12-15-ch1-function-templates.html","tf":0.0019047619047619048},"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"实":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"不":{"docs":{},"能":{"docs":{},"用":{"docs":{},"来":{"docs":{},"推":{"docs":{},"导":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"可":{"docs":{},"以":{"docs":{},"显":{"docs":{},"示":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"允":{"docs":{},"许":{"docs":{},"右":{"docs":{},"值":{"docs":{},"对":{"docs":{},"象":{"docs":{},"调":{"docs":{},"用":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.011251758087201125},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.004622496147919877}},")":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}}},";":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"{":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.01167728237791932},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.02109704641350211},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.004792332268370607},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.005},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.016216216216216217},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0057361376673040155},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.01288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.008947006194081212},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0023767082590612004},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.015384615384615385},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.01565217391304348},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0029182879377431907},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.013888888888888888},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.0056433408577878106},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.01694915254237288}},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},",":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813}}},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0028129395218002813},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"来":{"docs":{},"在":{"docs":{},"某":{"docs":{},"些":{"docs":{},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"禁":{"docs":{},"掉":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"分":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"三":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"即":{"docs":{},"使":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"传":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"来":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"自":{"docs":{},"动":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"其":{"docs":{},"原":{"docs":{},"理":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"推":{"docs":{},"导":{"docs":{},"是":{"docs":{},"类":{"docs":{},"似":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"一":{"docs":{},"类":{"docs":{},"型":{"docs":{},"x":{"docs":{},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"包":{"docs":{},"括":{"docs":{},"x":{"docs":{},"、":{"docs":{},"x":{"docs":{},"&":{"docs":{},"、":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}},"被":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"较":{"docs":{},"为":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"程":{"docs":{},"序":{"docs":{},"控":{"docs":{},"制":{"docs":{},"结":{"docs":{},"构":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"统":{"docs":{},"一":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"省":{"docs":{},"略":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"去":{"docs":{},"推":{"docs":{},"导":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"类":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"原":{"docs":{},"则":{"docs":{},"是":{"docs":{},"要":{"docs":{},"么":{"docs":{},"全":{"docs":{},"部":{"docs":{},"指":{"docs":{},"定":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"要":{"docs":{},"么":{"docs":{},"全":{"docs":{},"部":{"docs":{},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"元":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"于":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"推":{"docs":{},"导":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"c":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"还":{"docs":{},"有":{"docs":{},"更":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"、":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"模":{"docs":{},"板":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"这":{"docs":{},"些":{"docs":{},"模":{"docs":{},"板":{"docs":{},"支":{"docs":{},"持":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"系":{"docs":{},"列":{"docs":{},"模":{"docs":{},"板":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"和":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"到":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"再":{"docs":{},"到":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"将":{"docs":{},"重":{"docs":{},"载":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"内":{"docs":{},"联":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"声":{"docs":{},"明":{"docs":{},"其":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"类":{"docs":{},"外":{"docs":{},"部":{"docs":{},"进":{"docs":{},"行":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"类":{"docs":{},"的":{"docs":{},"外":{"docs":{},"部":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"名":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"是":{"docs":{},"类":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"类":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"析":{"docs":{},"f":{"1":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"docs":{}}}},"某":{"docs":{},"种":{"docs":{},"程":{"docs":{},"度":{"docs":{},"上":{"docs":{},"有":{"docs":{},"点":{"docs":{},"像":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"是":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"会":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"求":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"i":{"docs":{},"f":{"docs":{},"中":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"恒":{"docs":{},"为":{"docs":{},"真":{"docs":{},"或":{"docs":{},"者":{"docs":{},"恒":{"docs":{},"为":{"docs":{},"假":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"当":{"docs":{},"找":{"docs":{},"不":{"docs":{},"到":{"docs":{},"无":{"docs":{},"参":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"时":{"docs":{},"就":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"对":{"docs":{},"左":{"docs":{},"值":{"docs":{},"版":{"docs":{},"本":{"docs":{},"有":{"docs":{},"效":{"docs":{},"（":{"docs":{},"详":{"docs":{},"见":{"docs":{},"第":{"1":{"docs":{},"章":{"docs":{},"中":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"）":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"支":{"docs":{},"持":{"docs":{},"右":{"docs":{},"值":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"成":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},"结":{"docs":{},"果":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"会":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"合":{"docs":{},"成":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"等":{"docs":{},"价":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"只":{"docs":{},"允":{"docs":{},"许":{"docs":{},"类":{"docs":{},"的":{"docs":{},"静":{"docs":{},"态":{"docs":{},"常":{"docs":{},"量":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"是":{"docs":{},"整":{"docs":{},"型":{"docs":{},"或":{"docs":{},"者":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"型":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"使":{"docs":{},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"；":{"docs":{},"对":{"docs":{},"于":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"静":{"docs":{},"态":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"便":{"docs":{},"之":{"docs":{},"处":{"docs":{},"在":{"docs":{},"于":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"了":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"r":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"不":{"docs":{},"是":{"docs":{},"可":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"包":{"docs":{},"装":{"docs":{},"器":{"docs":{},"（":{"docs":{},"w":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"包":{"docs":{},"装":{"docs":{},"一":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"要":{"docs":{},"求":{"docs":{},"t":{"1":{"docs":{},"和":{"docs":{},"t":{"2":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"消":{"docs":{},"除":{"docs":{},"这":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"太":{"docs":{},"通":{"docs":{},"用":{"docs":{},"了":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"挪":{"docs":{},"到":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"然":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"为":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"所":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"不":{"docs":{},"能":{"docs":{},"传":{"docs":{},"递":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"对":{"docs":{},"象":{"docs":{},"了":{"docs":{},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"是":{"docs":{},"类":{"docs":{},"）":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"却":{"docs":{},"多":{"docs":{},"了":{"docs":{},"三":{"docs":{},"行":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"么":{"docs":{},"简":{"docs":{},"单":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"无":{"docs":{},"法":{"docs":{},"根":{"docs":{},"据":{"docs":{},"条":{"docs":{},"件":{"docs":{},"优":{"docs":{},"化":{"docs":{},"掉":{"docs":{},"无":{"docs":{},"效":{"docs":{},"的":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"超":{"docs":{},"长":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"判":{"docs":{},"断":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"。":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"二":{"docs":{},"分":{"docs":{},"法":{"docs":{},"计":{"docs":{},"算":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"实":{"docs":{},"际":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"2":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{},"个":{"docs":{},"。":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"如":{"docs":{},"此":{"docs":{},"，":{"docs":{},"当":{"docs":{},"使":{"docs":{},"用":{"docs":{},":":{"docs":{},":":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"引":{"docs":{},"用":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"整":{"docs":{},"个":{"docs":{},"类":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{},"好":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"实":{"docs":{},"现":{"docs":{},"分":{"docs":{},"支":{"docs":{},"优":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"和":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"占":{"docs":{},"用":{"docs":{},"了":{"docs":{},"过":{"docs":{},"多":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"无":{"docs":{},"法":{"docs":{},"使":{"docs":{},"用":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"书":{"docs":{},"中":{"docs":{},"最":{"docs":{},"终":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"足":{"docs":{},"够":{"docs":{},"大":{"docs":{},"的":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"来":{"docs":{},"容":{"docs":{},"纳":{"docs":{},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"并":{"docs":{},"通":{"docs":{},"过":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"标":{"docs":{},"识":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"应":{"docs":{},"该":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"下":{"docs":{},"标":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"0":{"docs":{},"表":{"docs":{},"示":{"docs":{},"未":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"）":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"还":{"docs":{},"是":{"docs":{},"可":{"docs":{},"能":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"重":{"docs":{},"载":{"docs":{},"版":{"docs":{},"本":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"标":{"docs":{},"准":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"规":{"docs":{},"定":{"docs":{},"此":{"docs":{},"时":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"了":{"docs":{},"，":{"docs":{},"就":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"不":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{},"算":{"docs":{},"法":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"前":{"docs":{},"进":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"如":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"<":{"docs":{},">":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"只":{"docs":{},"要":{"docs":{},"不":{"docs":{},"调":{"docs":{},"用":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"重":{"docs":{},"载":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"。":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"docs":{},"加":{"docs":{},"法":{"docs":{},"，":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"时":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"全":{"docs":{},"局":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"访":{"docs":{},"问":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"和":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"只":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"重":{"docs":{},"载":{"docs":{},"。":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"支":{"docs":{},"持":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"重":{"docs":{},"载":{"docs":{},"后":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"“":{"docs":{},"注":{"docs":{},"入":{"docs":{},"到":{"docs":{},"全":{"docs":{},"局":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"”":{"docs":{},"的":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"不":{"docs":{},"适":{"docs":{},"用":{"docs":{},"了":{"docs":{},"。":{"docs":{},"现":{"docs":{},"代":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"查":{"docs":{},"找":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"规":{"docs":{},"则":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"假":{"docs":{},"如":{"docs":{},"再":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"<":{"docs":{},">":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"以":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"就":{"docs":{},"只":{"docs":{},"能":{"docs":{},"写":{"docs":{},"成":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"中":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"将":{"1":{"6":{"docs":{},".":{"2":{"docs":{},"中":{"docs":{},"的":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"1":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"替":{"docs":{},"换":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}},"有":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"累":{"docs":{},"加":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"声":{"docs":{},"明":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"声":{"docs":{},"明":{"docs":{},"友":{"docs":{},"元":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"友":{"docs":{},"元":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"的":{"docs":{},":":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"友":{"docs":{},"元":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"函":{"docs":{},"数":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"，":{"docs":{},"多":{"docs":{},"用":{"docs":{},"于":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"（":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"可":{"docs":{},"以":{"docs":{},"）":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"声":{"docs":{},"明":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"类":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"的":{"docs":{},"在":{"docs":{},"于":{"docs":{},"指":{"docs":{},"定":{"docs":{},"某":{"docs":{},"个":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{},"结":{"docs":{},"果":{"docs":{},"作":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"docs":{},"真":{"docs":{},"正":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"才":{"docs":{},"会":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"分":{"docs":{},"别":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"了":{"docs":{},"接":{"docs":{},"收":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"也":{"docs":{},"只":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"了":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"有":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"当":{"docs":{},"类":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"就":{"docs":{},"会":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"才":{"docs":{},"会":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"类":{"docs":{},"外":{"docs":{},"（":{"docs":{},"也":{"docs":{},"包":{"docs":{},"括":{"docs":{},"结":{"docs":{},"构":{"docs":{},"体":{"docs":{},"外":{"docs":{},"）":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"特":{"docs":{},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"需":{"docs":{},"要":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"两":{"docs":{},"两":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"才":{"docs":{},"是":{"docs":{},"完":{"docs":{},"全":{"docs":{},"等":{"docs":{},"价":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"类":{"docs":{},"型":{"docs":{},"别":{"docs":{},"名":{"docs":{},"和":{"docs":{},"常":{"docs":{},"量":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"定":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"才":{"docs":{},"会":{"docs":{},"变":{"docs":{},"成":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"是":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"会":{"docs":{},"应":{"docs":{},"用":{"docs":{},"a":{"docs":{},"d":{"docs":{},"l":{"docs":{},"规":{"docs":{},"则":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"用":{"docs":{},"上":{"docs":{},"述":{"docs":{},"规":{"docs":{},"则":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"名":{"docs":{},"称":{"docs":{},"无":{"docs":{},"法":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{},"、":{"docs":{},"非":{"docs":{},"虚":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"空":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"所":{"docs":{},"占":{"docs":{},"内":{"docs":{},"存":{"docs":{},"大":{"docs":{},"小":{"docs":{},"并":{"docs":{},"不":{"docs":{},"为":{"0":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"以":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"为":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"非":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"面":{"docs":{},"是":{"docs":{},"关":{"docs":{},"于":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"解":{"docs":{},"释":{"docs":{},"了":{"docs":{},"一":{"docs":{},"下":{"docs":{},"该":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"去":{"docs":{},"读":{"docs":{},"懂":{"docs":{},"这":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"经":{"docs":{},"验":{"docs":{},"的":{"docs":{},"话":{"docs":{},"应":{"docs":{},"该":{"docs":{},"一":{"docs":{},"眼":{"docs":{},"就":{"docs":{},"能":{"docs":{},"看":{"docs":{},"明":{"docs":{},"白":{"docs":{},"这":{"docs":{},"个":{"docs":{},"错":{"docs":{},"误":{"docs":{},"信":{"docs":{},"息":{"docs":{},"是":{"docs":{},"啥":{"docs":{},"的":{"docs":{},"。":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"记":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"好":{"docs":{},"像":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"2":{"0":{"docs":{},"中":{"docs":{},"才":{"docs":{},"有":{"docs":{},"，":{"docs":{},"书":{"docs":{},"上":{"docs":{},"说":{"docs":{},"了":{"docs":{},"一":{"docs":{},"段":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"实":{"docs":{},"质":{"docs":{},"内":{"docs":{},"容":{"docs":{},"的":{"docs":{},"话":{"docs":{},"。":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"传":{"docs":{},"递":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"作":{"docs":{},"为":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}},"将":{"docs":{},"首":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"在":{"docs":{},"找":{"docs":{},"到":{"docs":{},"了":{"docs":{},"主":{"docs":{},"模":{"docs":{},"版":{"docs":{},"后":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"部":{"docs":{},"分":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"分":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"称":{"docs":{},"为":{"docs":{},"部":{"docs":{},"分":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"触":{"docs":{},"发":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"时":{"docs":{},"会":{"docs":{},"检":{"docs":{},"查":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"这":{"docs":{},"会":{"docs":{},"触":{"docs":{},"发":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"触":{"docs":{},"发":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"s":{"docs":{},"会":{"docs":{},"递":{"docs":{},"归":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"基":{"docs":{},"类":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"中":{"docs":{},"拉":{"docs":{},"取":{"docs":{},"基":{"docs":{},"类":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"现":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"库":{"docs":{},"的":{"docs":{},"其":{"docs":{},"它":{"docs":{},"方":{"docs":{},"法":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"退":{"docs":{},"化":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"关":{"docs":{},"系":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"会":{"docs":{},"只":{"docs":{},"实":{"docs":{},"现":{"docs":{},"=":{"docs":{},"=":{"docs":{},"和":{"docs":{},"，":{"docs":{},"!":{"docs":{},"=":{"docs":{},"、":{"docs":{},"、":{"docs":{},">":{"docs":{},"和":{"docs":{},">":{"docs":{},"=":{"docs":{},"都":{"docs":{},"通":{"docs":{},"过":{"docs":{},"组":{"docs":{},"合":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"很":{"docs":{},"多":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"有":{"docs":{},"这":{"docs":{},"种":{"docs":{},"需":{"docs":{},"求":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"际":{"docs":{},"上":{"2":{"7":{"docs":{},".":{"2":{"docs":{},".":{"4":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"[":{"docs":{},"]":{"docs":{},"的":{"docs":{},"在":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"很":{"docs":{},"短":{"docs":{},"小":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"内":{"docs":{},"联":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"模":{"docs":{},"板":{"docs":{},"还":{"docs":{},"要":{"docs":{},"求":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"后":{"docs":{},"续":{"docs":{},"计":{"docs":{},"算":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"原":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"参":{"docs":{},"和":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"程":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}},"当":{"docs":{},"然":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"提":{"docs":{},"供":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"的":{"docs":{},"。":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"指":{"docs":{},"针":{"docs":{},"或":{"docs":{},"者":{"docs":{},"引":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"或":{"docs":{},"者":{"docs":{},"引":{"docs":{},"用":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"值":{"docs":{},"、":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{},"、":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"或":{"docs":{},"者":{"docs":{},"其":{"docs":{},"它":{"docs":{},"子":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{},"随":{"docs":{},"着":{"docs":{},"演":{"docs":{},"变":{"docs":{},"到":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{},"已":{"docs":{},"经":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"的":{"docs":{},"放":{"docs":{},"开":{"docs":{},"了":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"精":{"docs":{},"简":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"几":{"docs":{},"条":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"调":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"不":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"任":{"docs":{},"何":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"也":{"docs":{},"会":{"docs":{},"包":{"docs":{},"括":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"传":{"docs":{},"递":{"docs":{},"两":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"要":{"docs":{},"写":{"docs":{},"成":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"修":{"docs":{},"饰":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"还":{"docs":{},"会":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"实":{"docs":{},"参":{"docs":{},"是":{"docs":{},"左":{"docs":{},"值":{"docs":{},"还":{"docs":{},"是":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"实":{"docs":{},"参":{"docs":{},"是":{"docs":{},"左":{"docs":{},"值":{"docs":{},"，":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"为":{"docs":{},"原":{"docs":{},"始":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"类":{"docs":{},"型":{"docs":{},"退":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"是":{"docs":{},"c":{"docs":{},"风":{"docs":{},"格":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"且":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"时":{"docs":{},"，":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"转":{"docs":{},"发":{"docs":{},"到":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"形":{"docs":{},"参":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"模":{"docs":{},"板":{"docs":{},"替":{"docs":{},"代":{"docs":{},"时":{"docs":{},"，":{"docs":{},"该":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"层":{"docs":{},"数":{"docs":{},"过":{"docs":{},"多":{"docs":{},"时":{"docs":{},"就":{"docs":{},"会":{"docs":{},"引":{"docs":{},"发":{"docs":{},"难":{"docs":{},"以":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"为":{"docs":{},"假":{"docs":{},"（":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"4":{"docs":{},"）":{"docs":{},"时":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"是":{"docs":{},"未":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"“":{"docs":{},"代":{"docs":{},"换":{"docs":{},"失":{"docs":{},"败":{"docs":{},"不":{"docs":{},"是":{"docs":{},"错":{"docs":{},"误":{"docs":{},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"真":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"是":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"用":{"docs":{},"继":{"docs":{},"续":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"结":{"docs":{},"束":{"docs":{},"了":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"代":{"docs":{},"换":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"不":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"错":{"docs":{},"误":{"docs":{},"代":{"docs":{},"码":{"docs":{},"时":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"传":{"docs":{},"递":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"时":{"docs":{},"，":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},"*":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"o":{"docs":{},"p":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"*":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"要":{"docs":{},"将":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"，":{"docs":{},"&":{"docs":{},"&":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"|":{"docs":{},"|":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"，":{"docs":{},",":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"展":{"docs":{},"开":{"docs":{},"时":{"docs":{},"，":{"docs":{},"还":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"后":{"docs":{},"相":{"docs":{},"同":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"见":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"四":{"docs":{},"种":{"docs":{},"模":{"docs":{},"板":{"docs":{},"声":{"docs":{},"明":{"docs":{},"在":{"docs":{},"类":{"docs":{},"中":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"结":{"docs":{},"果":{"docs":{},"都":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"友":{"docs":{},"元":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"转":{"docs":{},"换":{"docs":{},"或":{"docs":{},"者":{"docs":{},"引":{"docs":{},"用":{"docs":{},"转":{"docs":{},"换":{"docs":{},"时":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"能":{"docs":{},"精":{"docs":{},"确":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"会":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"其":{"docs":{},"余":{"docs":{},"方":{"docs":{},"面":{"docs":{},"都":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"会":{"docs":{},"优":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"歧":{"docs":{},"义":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"出":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"。":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"作":{"docs":{},"为":{"docs":{},"前":{"docs":{},"导":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"四":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"嵌":{"docs":{},"入":{"docs":{},"类":{"docs":{},"时":{"docs":{},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"更":{"docs":{},"加":{"docs":{},"难":{"docs":{},"以":{"docs":{},"区":{"docs":{},"分":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"i":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"上":{"docs":{},"一":{"docs":{},"节":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"时":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"依":{"docs":{},"然":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"是":{"docs":{},"为":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"(":{"docs":{},")":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"中":{"docs":{},"带":{"docs":{},"有":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"时":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"直":{"docs":{},"接":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"才":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"效":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"用":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"作":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"体":{"docs":{},"必":{"docs":{},"须":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"才":{"docs":{},"能":{"docs":{},"推":{"docs":{},"导":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},"且":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"时":{"docs":{},"，":{"docs":{},"将":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"也":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"共":{"docs":{},"存":{"docs":{},"的":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"列":{"docs":{},"表":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"时":{"docs":{},"，":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"（":{"docs":{},"例":{"docs":{},"外":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"列":{"docs":{},"表":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"会":{"docs":{},"将":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"第":{"1":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"作":{"docs":{},"为":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"比":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"已":{"docs":{},"经":{"docs":{},"通":{"docs":{},"过":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"生":{"docs":{},"成":{"docs":{},"了":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"后":{"docs":{},"，":{"docs":{},"将":{"docs":{},"不":{"docs":{},"能":{"docs":{},"再":{"docs":{},"声":{"docs":{},"明":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"不":{"docs":{},"支":{"docs":{},"持":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"时":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"给":{"docs":{},"出":{"docs":{},"更":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"报":{"docs":{},"错":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"通":{"docs":{},"过":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"和":{"docs":{},"策":{"docs":{},"略":{"docs":{},"时":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"将":{"docs":{},"策":{"docs":{},"略":{"docs":{},"放":{"docs":{},"在":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"策":{"docs":{},"略":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"而":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"一":{"docs":{},"般":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{},"排":{"docs":{},"序":{"docs":{},"后":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"t":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"u":{"docs":{},"的":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"测":{"docs":{},"试":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"向":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"<":{"docs":{},">":{"docs":{},"传":{"docs":{},"递":{"docs":{},"空":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"时":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"改":{"docs":{},"进":{"docs":{},"方":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"或":{"docs":{},"者":{"docs":{},"函":{"docs":{},"数":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"导":{"docs":{},"致":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"调":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"也":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"相":{"docs":{},"应":{"docs":{},"修":{"docs":{},"改":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"<":{"docs":{},">":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"特":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}},"能":{"docs":{},"会":{"docs":{},"比":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"合":{"docs":{},"成":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"隐":{"docs":{},"含":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"指":{"docs":{},"针":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"指":{"docs":{},"针":{"docs":{},"（":{"docs":{},"类":{"docs":{},"的":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"和":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"部":{"docs":{},"分":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}},"栈":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"现":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"可":{"docs":{},"写":{"docs":{},"的":{"docs":{},"，":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"用":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"。":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"定":{"docs":{},"义":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"具":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"形":{"docs":{},"参":{"docs":{},"和":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"将":{"docs":{},"被":{"docs":{},"忽":{"docs":{},"略":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"实":{"docs":{},"现":{"docs":{},"接":{"docs":{},"口":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"与":{"docs":{},"多":{"docs":{},"态":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}},"第":{"1":{"docs":{},"个":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"含":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"个":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},"或":{"docs":{},"者":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}},"条":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},"3":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"并":{"docs":{},"不":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"将":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"该":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"才":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"该":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"。":{"docs":{},"在":{"docs":{},"推":{"docs":{},"导":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"&":{"docs":{},"，":{"docs":{},"当":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"就":{"docs":{},"会":{"docs":{},"失":{"docs":{},"败":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"转":{"docs":{},"而":{"docs":{},"寻":{"docs":{},"求":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"这":{"docs":{},"将":{"docs":{},"使":{"docs":{},"得":{"docs":{},"i":{"docs":{},"s":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"返":{"docs":{},"回":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"和":{"docs":{},"第":{"4":{"docs":{},"种":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"比":{"docs":{},"第":{"2":{"docs":{},"种":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"，":{"docs":{},"第":{"2":{"docs":{},"种":{"docs":{},"转":{"docs":{},"换":{"docs":{},"比":{"docs":{},"第":{"1":{"docs":{},"种":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}},"4":{"docs":{},"条":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}},"8":{"docs":{},"条":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}},"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"形":{"docs":{},"参":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"具":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"将":{"docs":{},"被":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"。":{"docs":{},"根":{"docs":{},"据":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"为":{"docs":{},"(":{"docs":{},"a":{"1":{"docs":{},"*":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"阶":{"docs":{},"段":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"名":{"docs":{},"称":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"获":{"docs":{},"取":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}},"行":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"将":{"docs":{},"产":{"docs":{},"生":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"行":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"仅":{"docs":{},"在":{"docs":{},"*":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"支":{"docs":{},"持":{"docs":{},"返":{"docs":{},"回":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"才":{"docs":{},"能":{"docs":{},"编":{"docs":{},"译":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"行":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"综":{"docs":{},"合":{"docs":{},"了":{"docs":{},"上":{"docs":{},"面":{"docs":{},"两":{"docs":{},"种":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"避":{"docs":{},"免":{"docs":{},"写":{"docs":{},"两":{"docs":{},"遍":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"4":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"为":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"行":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"是":{"docs":{},"缺":{"docs":{},"少":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"别":{"docs":{},"名":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}},"特":{"docs":{},"征":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"模":{"docs":{},"板":{"docs":{},"特":{"docs":{},"化":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"和":{"docs":{},"策":{"docs":{},"略":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"内":{"docs":{},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{},"、":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"还":{"docs":{},"是":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"缺":{"docs":{},"点":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"起":{"docs":{},"作":{"docs":{},"用":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"得":{"docs":{},"不":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"写":{"docs":{},"出":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"简":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"初":{"docs":{},"值":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"合":{"docs":{},"理":{"docs":{},"值":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"再":{"docs":{},"为":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"提":{"docs":{},"供":{"docs":{},"值":{"docs":{},"特":{"docs":{},"征":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{},"）":{"docs":{},"表":{"docs":{},"示":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"属":{"docs":{},"性":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"跟":{"docs":{},"在":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"和":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},",":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"=":{"docs":{},"提":{"docs":{},"供":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"形":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"名":{"docs":{},"称":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"、":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"、":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"和":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"修":{"docs":{},"饰":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"修":{"docs":{},"饰":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"移":{"docs":{},"除":{"docs":{},"和":{"docs":{},"添":{"docs":{},"加":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"、":{"docs":{},"移":{"docs":{},"除":{"docs":{},"限":{"docs":{},"定":{"docs":{},"符":{"docs":{},"和":{"docs":{},"实":{"docs":{},"现":{"docs":{},"类":{"docs":{},"型":{"docs":{},"退":{"docs":{},"化":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"是":{"docs":{},"以":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"或":{"docs":{},"者":{"docs":{},"值":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"视":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"其":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"版":{"docs":{},"本":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"类":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"擦":{"docs":{},"除":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"（":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}},"列":{"docs":{},"表":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0018315018315018315}},"就":{"docs":{},"是":{"docs":{},"存":{"docs":{},"储":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"类":{"docs":{},"似":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"添":{"docs":{},"加":{"docs":{},"和":{"docs":{},"删":{"docs":{},"除":{"docs":{},"等":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"区":{"docs":{},"别":{"docs":{},"在":{"docs":{},"于":{"docs":{},"添":{"docs":{},"加":{"docs":{},"操":{"docs":{},"作":{"docs":{},"不":{"docs":{},"会":{"docs":{},"对":{"docs":{},"原":{"docs":{},"始":{"docs":{},"列":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"最":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}},"操":{"docs":{},"作":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"可":{"docs":{},"以":{"docs":{},"特":{"docs":{},"化":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"者":{"docs":{},"多":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"待":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"类":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}},"通":{"docs":{},"常":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"多":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"这":{"docs":{},"并":{"docs":{},"不":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"应":{"docs":{},"该":{"docs":{},"支":{"docs":{},"持":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"的":{"docs":{},"在":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"上":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"支":{"docs":{},"持":{"docs":{},"必":{"docs":{},"要":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"类":{"docs":{},"（":{"docs":{},"“":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}},"（":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"的":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"类":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"定":{"docs":{},"义":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}},"名":{"docs":{},"称":{"docs":{},"的":{"docs":{},"注":{"docs":{},"入":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}},"实":{"docs":{},"参":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}},"、":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"但":{"docs":{},"不":{"docs":{},"包":{"docs":{},"括":{"docs":{},"特":{"docs":{},"化":{"docs":{},"）":{"docs":{},"、":{"docs":{},"内":{"docs":{},"联":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"变":{"docs":{},"量":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"只":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"次":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"(":{"docs":{},")":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"要":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"靠":{"docs":{},"后":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"而":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"要":{"docs":{},"求":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"都":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"名":{"docs":{},"称":{"docs":{},"以":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"默":{"docs":{},"认":{"docs":{},"注":{"docs":{},"入":{"docs":{},"到":{"docs":{},"类":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"定":{"docs":{},"义":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"似":{"docs":{},"函":{"docs":{},"数":{"docs":{},"重":{"docs":{},"载":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"未":{"docs":{},"来":{"docs":{},"可":{"docs":{},"能":{"docs":{},"支":{"docs":{},"持":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"构":{"docs":{},"造":{"docs":{},"元":{"docs":{},"组":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"包":{"docs":{},"含":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"聚":{"docs":{},"合":{"docs":{},"类":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"和":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"来":{"docs":{},"声":{"docs":{},"明":{"docs":{},"新":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"作":{"docs":{},"为":{"docs":{},"其":{"docs":{},"它":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"移":{"docs":{},"动":{"docs":{},"的":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"求":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"都":{"docs":{},"能":{"docs":{},"够":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"值":{"docs":{},"，":{"docs":{},"依":{"docs":{},"然":{"docs":{},"以":{"docs":{},"素":{"docs":{},"性":{"docs":{},"判":{"docs":{},"断":{"docs":{},"程":{"docs":{},"序":{"docs":{},"为":{"docs":{},"例":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"部":{"docs":{},"分":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-20-ch2-class-templates.html":{"ref":"2021-12-20-ch2-class-templates.html","tf":0.0010615711252653928}}}}}}},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"和":{"docs":{},"全":{"docs":{},"部":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}},"+":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.015471167369901548},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.002726446531354135},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.007494646680942184},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.001148105625717566},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.010158013544018058}},"+":{"docs":{},"i":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"x":{"docs":{},",":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938}}},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778}}}},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},";":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}},"=":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.005836575875486381},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}},"x":{"1":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0052173913043478265}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"3":{"docs":{},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"报":{"docs":{},"错":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"不":{"docs":{},"能":{"docs":{},"比":{"docs":{},"较":{"docs":{},"两":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"x":{"4":{"docs":{},"报":{"docs":{},"错":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"x":{"6":{"docs":{},"报":{"docs":{},"错":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"不":{"docs":{},"能":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003194888178913738},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.01},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.005405405405405406},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.01751592356687898},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.008912655971479501},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.012307692307692308},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.006809338521400778},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0032119914346895075},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.006772009029345372},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},")":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.001514692517418964},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}},";":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0036036036036036037},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0031847133757961785},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.003993610223642172},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.01848249027237354},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.004227053140096618},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}}},"[":{"docs":{},"]":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"{":{"1":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"docs":{}},"docs":{},"}":{"docs":{},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}},"&":{"docs":{},"&":{"docs":{},"，":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"该":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"修":{"docs":{},"改":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"移":{"docs":{},"动":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}},"和":{"docs":{},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"重":{"docs":{},"载":{"docs":{},"了":{"docs":{},"以":{"docs":{},"x":{"docs":{},"和":{"docs":{},"x":{"docs":{},"&":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"调":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.010723860589812333}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}}},")":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}},"，":{"docs":{},"全":{"docs":{},"称":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"i":{"docs":{},"r":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}},"s":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"p":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},")":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"(":{"0":{"docs":{},".":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}}}}},"docs":{}},"docs":{}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}},"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"b":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"u":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}}},":":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},":":{"docs":{},"*":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"i":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}},"a":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"=":{"4":{"2":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{}},"docs":{}},"*":{"docs":{},"i":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"y":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"产":{"docs":{},"生":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"和":{"docs":{},"读":{"docs":{},"写":{"docs":{},"次":{"docs":{},"数":{"docs":{},"多":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"进":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"推":{"docs":{},"迟":{"docs":{},"到":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"生":{"docs":{},"成":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"了":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"计":{"docs":{},"算":{"1":{"docs":{},".":{"2":{"docs":{},"*":{"docs":{},"x":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"6":{"0":{"0":{"0":{"docs":{},"次":{"docs":{},"读":{"docs":{},"和":{"3":{"0":{"0":{"0":{"docs":{},"次":{"docs":{},"写":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"保":{"docs":{},"留":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"这":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"保":{"docs":{},"留":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"上":{"docs":{},"面":{"docs":{},"斜":{"docs":{},"体":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"写":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"会":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"来":{"docs":{},"提":{"docs":{},"示":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"t":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"的":{"docs":{},"含":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},")":{"docs":{},"实":{"docs":{},"现":{"docs":{},"返":{"docs":{},"回":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"则":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"一":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"展":{"docs":{},"开":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"时":{"docs":{},"，":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"也":{"docs":{},"要":{"docs":{},"是":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"的":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"就":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"却":{"docs":{},"没":{"docs":{},"关":{"docs":{},"系":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"处":{"docs":{},"理":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"区":{"docs":{},"分":{"docs":{},"确":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"）":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"很":{"docs":{},"乱":{"docs":{},"，":{"docs":{},"完":{"docs":{},"整":{"docs":{},"代":{"docs":{},"码":{"docs":{},"应":{"docs":{},"该":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"在":{"docs":{},"n":{"docs":{},"中":{"docs":{},"构":{"docs":{},"造":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"优":{"docs":{},"化":{"docs":{},"措":{"docs":{},"施":{"docs":{},"，":{"docs":{},"语":{"docs":{},"言":{"docs":{},"不":{"docs":{},"能":{"docs":{},"提":{"docs":{},"供":{"docs":{},"保":{"docs":{},"证":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"因":{"docs":{},"为":{"docs":{},"n":{"docs":{},"{":{"docs":{},"}":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"类":{"docs":{},"n":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"n":{"docs":{},"时":{"docs":{},"还":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{},"会":{"docs":{},"报":{"docs":{},"链":{"docs":{},"接":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"和":{"docs":{},"触":{"docs":{},"发":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"。":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"并":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"编":{"docs":{},"译":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"而":{"docs":{},"当":{"docs":{},"编":{"docs":{},"译":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"时":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"代":{"docs":{},"码":{"docs":{},"触":{"docs":{},"发":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"自":{"docs":{},"然":{"docs":{},"也":{"docs":{},"就":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"并":{"docs":{},"不":{"docs":{},"和":{"docs":{},"任":{"docs":{},"一":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"应":{"docs":{},"，":{"docs":{},"它":{"docs":{},"只":{"docs":{},"是":{"docs":{},"指":{"docs":{},"出":{"docs":{},"当":{"docs":{},"以":{"docs":{},"x":{"docs":{},"类":{"docs":{},"型":{"docs":{},"构":{"docs":{},"造":{"docs":{},"y":{"docs":{},"时":{"docs":{},"，":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"也":{"docs":{},"为":{"docs":{},"t":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"的":{"docs":{},"两":{"docs":{},"条":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}},"三":{"docs":{},"种":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"例":{"docs":{},"中":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"之":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"共":{"docs":{},"存":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"签":{"docs":{},"名":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"函":{"docs":{},"数":{"docs":{},"签":{"docs":{},"名":{"docs":{},"包":{"docs":{},"含":{"docs":{},"以":{"docs":{},"下":{"docs":{},"内":{"docs":{},"容":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"简":{"docs":{},"单":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"具":{"docs":{},"有":{"docs":{},"较":{"docs":{},"大":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"开":{"docs":{},"销":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"是":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"无":{"docs":{},"法":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"表":{"docs":{},"明":{"docs":{},"，":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"可":{"docs":{},"以":{"docs":{},"只":{"docs":{},"是":{"docs":{},"声":{"docs":{},"明":{"docs":{},"。":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"被":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"不":{"docs":{},"再":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"即":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"就":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"定":{"docs":{},"义":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"时":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"述":{"docs":{},"规":{"docs":{},"则":{"docs":{},"也":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"需":{"docs":{},"要":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"的":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}},"限":{"docs":{},"制":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}},"一":{"docs":{},"节":{"docs":{},"中":{"docs":{},"的":{"docs":{},"反":{"docs":{},"转":{"docs":{},"算":{"docs":{},"法":{"docs":{},"效":{"docs":{},"率":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"统":{"docs":{},"计":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"来":{"docs":{},"测":{"docs":{},"量":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"带":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"基":{"docs":{},"类":{"docs":{},"时":{"docs":{},"展":{"docs":{},"开":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"分":{"docs":{},"支":{"docs":{},"模":{"docs":{},"板":{"docs":{},"选":{"docs":{},"择":{"docs":{},"容":{"docs":{},"纳":{"docs":{},"n":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"整":{"docs":{},"型":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"收":{"docs":{},"任":{"docs":{},"意":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"并":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"i":{"docs":{},"重":{"docs":{},"复":{"docs":{},"n":{"docs":{},"次":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"生":{"docs":{},"成":{"docs":{},"由":{"docs":{},"元":{"docs":{},"组":{"docs":{},"中":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"重":{"docs":{},"复":{"docs":{},"n":{"docs":{},"次":{"docs":{},"的":{"docs":{},"新":{"docs":{},"元":{"docs":{},"组":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"测":{"docs":{},"试":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"的":{"docs":{},"追":{"docs":{},"踪":{"docs":{},"器":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.003816793893129771},"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869}}}}}}},"类":{"docs":{},"似":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"组":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"确":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"docs":{}},"docs":{}}}}},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"将":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"的":{"docs":{},"内":{"docs":{},"置":{"docs":{},"容":{"docs":{},"器":{"docs":{},"类":{"docs":{},"型":{"docs":{},"也":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"都":{"docs":{},"是":{"docs":{},"错":{"docs":{},"的":{"docs":{},"（":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"太":{"docs":{},"扯":{"docs":{},"了":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"s":{"docs":{},"z":{"docs":{},"的":{"docs":{},"素":{"docs":{},"性":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"体":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"包":{"docs":{},"括":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"还":{"docs":{},"为":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"值":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"取":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"程":{"docs":{},"序":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"测":{"docs":{},"试":{"docs":{},"优":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"存":{"docs":{},"储":{"docs":{},"空":{"docs":{},"间":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"出":{"docs":{},"几":{"docs":{},"个":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"析":{"docs":{},"下":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"。":{"1":{"docs":{},"和":{"2":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"量":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"3":{"docs":{},"中":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"为":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"4":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},">":{"docs":{},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"&":{"docs":{},")":{"docs":{},"，":{"5":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"为":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"标":{"docs":{},"运":{"docs":{},"算":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"应":{"docs":{},"用":{"docs":{},"于":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}},"表":{"docs":{},"列":{"docs":{},"出":{"docs":{},"了":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"及":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"展":{"docs":{},"开":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}},"列":{"docs":{},"情":{"docs":{},"况":{"docs":{},"中":{"docs":{},"，":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"要":{"docs":{},"和":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"完":{"docs":{},"全":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{},"禁":{"docs":{},"掉":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"合":{"docs":{},"成":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"除":{"docs":{},"非":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"作":{"docs":{},"为":{"docs":{},"传":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}},"用":{"0":{"docs":{},"等":{"docs":{},"常":{"docs":{},"量":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}},"docs":{}}},"过":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"中":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"型":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{},"就":{"docs":{},"是":{"docs":{},"非":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"基":{"docs":{},"类":{"docs":{},"。":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"基":{"docs":{},"类":{"docs":{},"和":{"docs":{},"表":{"docs":{},"示":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}},"允":{"docs":{},"许":{"docs":{},"直":{"docs":{},"接":{"docs":{},"定":{"docs":{},"义":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"换":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"别":{"docs":{},"名":{"docs":{},"时":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"多":{"docs":{},"重":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"这":{"docs":{},"时":{"docs":{},"会":{"docs":{},"应":{"docs":{},"用":{"docs":{},"引":{"docs":{},"用":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"为":{"docs":{},"：":{"docs":{},"内":{"docs":{},"层":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"会":{"docs":{},"被":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"内":{"docs":{},"外":{"docs":{},"层":{"docs":{},"都":{"docs":{},"为":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{},"才":{"docs":{},"为":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"支":{"docs":{},"持":{"docs":{},"首":{"docs":{},"部":{"docs":{},"和":{"docs":{},"中":{"docs":{},"间":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}},"和":{"1":{"9":{"docs":{},".":{"6":{"docs":{},".":{"2":{"docs":{},"节":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"宏":{"docs":{},"定":{"docs":{},"义":{"docs":{},"模":{"docs":{},"板":{"docs":{},"最":{"docs":{},"相":{"docs":{},"近":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"1":{"9":{"docs":{},".":{"4":{"docs":{},".":{"3":{"docs":{},"节":{"docs":{},"中":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"2":{"0":{"docs":{},".":{"3":{"docs":{},".":{"2":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"引":{"docs":{},"入":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"本":{"docs":{},"节":{"docs":{},"中":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"典":{"docs":{},"为":{"docs":{},"例":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"的":{"docs":{},"。":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"节":{"docs":{},"类":{"docs":{},"型":{"docs":{},"操":{"docs":{},"作":{"docs":{},"算":{"docs":{},"法":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"值":{"docs":{},"算":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}},"常":{"docs":{},"量":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}},"变":{"docs":{},"参":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"任":{"docs":{},"意":{"docs":{},"参":{"docs":{},"数":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"变":{"docs":{},"参":{"docs":{},"函":{"docs":{},"数":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"（":{"docs":{},"除":{"docs":{},"了":{"docs":{},"具":{"docs":{},"有":{"docs":{},"非":{"docs":{},"平":{"docs":{},"凡":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"）":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"此":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}},"为":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"没":{"docs":{},"有":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"不":{"docs":{},"是":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"中":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},")":{"docs":{},"无":{"docs":{},"法":{"docs":{},"解":{"docs":{},"析":{"docs":{},"它":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"应":{"docs":{},"用":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"查":{"docs":{},"找":{"docs":{},"（":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"再":{"docs":{},"定":{"docs":{},"义":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{},"位":{"docs":{},"置":{"2":{"docs":{},"和":{"docs":{},"位":{"docs":{},"置":{"3":{"docs":{},"插":{"docs":{},"入":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"位":{"docs":{},"置":{"1":{"docs":{},"处":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"不":{"docs":{},"能":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"1":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"4":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},">":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"f":{"2":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"f":{"3":{"docs":{},"(":{"docs":{},")":{"docs":{},"等":{"docs":{},"价":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},">":{"docs":{},"推":{"docs":{},"导":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"只":{"docs":{},"用":{"docs":{},"在":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"和":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"并":{"docs":{},"不":{"docs":{},"提":{"docs":{},"供":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"优":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"元":{"docs":{},"组":{"docs":{},"是":{"docs":{},"私":{"docs":{},"有":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"于":{"2":{"4":{"docs":{},".":{"2":{"docs":{},".":{"5":{"docs":{},"中":{"docs":{},"的":{"docs":{},"变":{"docs":{},"换":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"优":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"。":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"间":{"docs":{},"可":{"docs":{},"能":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"该":{"docs":{},"对":{"docs":{},"应":{"docs":{},"哪":{"docs":{},"个":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"呢":{"docs":{},"？":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"风":{"docs":{},"格":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"成":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"会":{"docs":{},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"而":{"docs":{},"两":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"很":{"docs":{},"难":{"docs":{},"区":{"docs":{},"分":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"其":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"无":{"docs":{},"法":{"docs":{},"通":{"docs":{},"过":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"进":{"docs":{},"行":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"友":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"声":{"docs":{},"明":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"只":{"docs":{},"能":{"docs":{},"在":{"docs":{},"最":{"docs":{},"后":{"docs":{},"。":{"docs":{},"而":{"docs":{},"对":{"docs":{},"于":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"用":{"docs":{},"来":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"具":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"或":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"会":{"docs":{},"将":{"docs":{},"类":{"docs":{},"名":{"docs":{},"称":{"docs":{},"默":{"docs":{},"认":{"docs":{},"注":{"docs":{},"入":{"docs":{},"到":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"注":{"docs":{},"入":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"类":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"都":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"名":{"docs":{},"称":{"docs":{},"分":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"能":{"docs":{},"和":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"对":{"docs":{},"应":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"条":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"，":{"docs":{},"t":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"浮":{"docs":{},"点":{"docs":{},"型":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"很":{"docs":{},"难":{"docs":{},"确":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"等":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"存":{"docs":{},"储":{"docs":{},"存":{"docs":{},"在":{"docs":{},"误":{"docs":{},"差":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"需":{"docs":{},"要":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"特":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"我":{"docs":{},"也":{"docs":{},"没":{"docs":{},"看":{"docs":{},"懂":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}},"值":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"显":{"docs":{},"示":{"docs":{},"写":{"docs":{},"出":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"简":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"前":{"docs":{},"进":{"docs":{},"和":{"docs":{},"后":{"docs":{},"退":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"在":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"前":{"docs":{},"进":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"常":{"docs":{},"量":{"docs":{},"时":{"docs":{},"间":{"docs":{},"内":{"docs":{},"前":{"docs":{},"进":{"docs":{},"和":{"docs":{},"后":{"docs":{},"退":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"左":{"docs":{},"值":{"docs":{},"x":{"docs":{},"和":{"docs":{},"y":{"docs":{},"，":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"x":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}},"象":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"拷":{"docs":{},"贝":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}},"不":{"docs":{},"同":{"docs":{},"单":{"docs":{},"位":{"docs":{},"下":{"docs":{},"的":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"进":{"docs":{},"行":{"docs":{},"混":{"docs":{},"合":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}},"前":{"docs":{},"几":{"docs":{},"个":{"docs":{},"素":{"docs":{},"数":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"值":{"docs":{},"列":{"docs":{},"表":{"docs":{},"求":{"docs":{},"积":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"强":{"docs":{},"制":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"设":{"docs":{},"定":{"docs":{},"为":{"docs":{},"固":{"docs":{},"定":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"内":{"docs":{},"存":{"docs":{},"管":{"docs":{},"理":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"作":{"docs":{},"者":{"docs":{},"并":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"设":{"docs":{},"定":{"docs":{},"为":{"docs":{},"多":{"docs":{},"大":{"docs":{},"是":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"让":{"docs":{},"用":{"docs":{},"户":{"docs":{},"设":{"docs":{},"定":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"声":{"docs":{},"明":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"并":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"真":{"docs":{},"正":{"docs":{},"进":{"docs":{},"行":{"docs":{},"内":{"docs":{},"联":{"docs":{},"，":{"docs":{},"而":{"docs":{},"只":{"docs":{},"是":{"docs":{},"让":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"很":{"docs":{},"多":{"docs":{},"次":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"来":{"docs":{},"说":{"docs":{},"也":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"道":{"docs":{},"理":{"docs":{},"。":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"就":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"包":{"docs":{},"含":{"docs":{},"模":{"docs":{},"型":{"docs":{},"（":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"布":{"docs":{},"尔":{"docs":{},"值":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"实":{"docs":{},"现":{"docs":{},"函":{"docs":{},"数":{"docs":{},"分":{"docs":{},"发":{"docs":{},"，":{"docs":{},"相":{"docs":{},"比":{"docs":{},"于":{"docs":{},"向":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"传":{"docs":{},"递":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"和":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"从":{"docs":{},"而":{"docs":{},"实":{"docs":{},"现":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"执":{"docs":{},"行":{"docs":{},"不":{"docs":{},"同":{"docs":{},"分":{"docs":{},"支":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"说":{"docs":{},"会":{"docs":{},"更":{"docs":{},"快":{"docs":{},"一":{"docs":{},"些":{"docs":{},"（":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"作":{"docs":{},"为":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"作":{"docs":{},"为":{"docs":{},"基":{"docs":{},"类":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"元":{"docs":{},"组":{"docs":{},"像":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"一":{"docs":{},"样":{"docs":{},"展":{"docs":{},"开":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"对":{"docs":{},"象":{"docs":{},"、":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"解":{"docs":{},"引":{"docs":{},"用":{"docs":{},"后":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"到":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}},"注":{"docs":{},"意":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"2":{"0":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"中":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"是":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"声":{"docs":{},"明":{"docs":{},"不":{"docs":{},"能":{"docs":{},"出":{"docs":{},"现":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"块":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"4":{"docs":{},"中":{"docs":{},"要":{"docs":{},"写":{"docs":{},"为":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}},"docs":{}},"docs":{}}}},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"：":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"&":{"docs":{},"&":{"docs":{},"和":{"docs":{},"普":{"docs":{},"通":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"x":{"docs":{},"&":{"docs":{},"&":{"docs":{},"是":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"对":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"进":{"docs":{},"行":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"对":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"路":{"docs":{},"径":{"docs":{},"进":{"docs":{},"行":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"被":{"docs":{},"显":{"docs":{},"示":{"docs":{},"的":{"docs":{},"指":{"docs":{},"定":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"要":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"其":{"docs":{},"它":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"调":{"docs":{},"用":{"docs":{},"。":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"特":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"有":{"docs":{},"区":{"docs":{},"别":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"类":{"docs":{},"型":{"docs":{},"提":{"docs":{},"升":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"高":{"docs":{},"于":{"docs":{},"标":{"docs":{},"准":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}},"浮":{"docs":{},"点":{"docs":{},"类":{"docs":{},"型":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}},"和":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"作":{"docs":{},"为":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"在":{"3":{"docs":{},".":{"3":{"docs":{},"节":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"算":{"docs":{},"法":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"将":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"加":{"5":{"docs":{},"后":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"修":{"docs":{},"改":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"9":{"8":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"内":{"docs":{},"静":{"docs":{},"态":{"docs":{},"常":{"docs":{},"量":{"docs":{},"参":{"docs":{},"与":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"计":{"docs":{},"算":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"虽":{"docs":{},"然":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"3":{"docs":{},".":{"3":{"docs":{},"中":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"是":{"docs":{},"依":{"docs":{},"然":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}},"形":{"docs":{},"参":{"docs":{},"a":{"1":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"长":{"docs":{},"度":{"7":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"将":{"docs":{},"其":{"docs":{},"处":{"docs":{},"理":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{},"（":{"7":{"docs":{},"被":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"了":{"docs":{},"，":{"docs":{},"这":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"证":{"docs":{},"和":{"docs":{},"c":{"docs":{},"语":{"docs":{},"言":{"docs":{},"的":{"docs":{},"兼":{"docs":{},"容":{"docs":{},"）":{"docs":{},"。":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{},"和":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"\"":{"docs":{},")":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"不":{"docs":{},"是":{"docs":{},"可":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"*":{"docs":{},"p":{"docs":{},"是":{"docs":{},"可":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"（":{"docs":{},"n":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"3":{"3":{"docs":{},"）":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"报":{"docs":{},"错":{"docs":{},"时":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"都":{"docs":{},"比":{"docs":{},"较":{"docs":{},"长":{"docs":{},"（":{"docs":{},"说":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"你":{"docs":{},"g":{"docs":{},"+":{"docs":{},"+":{"docs":{},"）":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"很":{"docs":{},"难":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"出":{"docs":{},"错":{"docs":{},"了":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"用":{"docs":{},"户":{"docs":{},"代":{"docs":{},"码":{"docs":{},"触":{"docs":{},"发":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"出":{"docs":{},"错":{"docs":{},"了":{"docs":{},"，":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"准":{"docs":{},"备":{"docs":{},"引":{"docs":{},"入":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"也":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"声":{"docs":{},"明":{"docs":{},"会":{"docs":{},"让":{"docs":{},"n":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"变":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"。":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}},"可":{"docs":{},"变":{"docs":{},"的":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{},"：":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}},"实":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"形":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch3-nontype-template-parameters.html":{"ref":"2021-12-20-ch3-nontype-template-parameters.html","tf":0.0019083969465648854}}}}}}},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}},"内":{"docs":{},"联":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"、":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"只":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"次":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"基":{"docs":{},"类":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"解":{"docs":{},"析":{"docs":{},"时":{"docs":{},"就":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"前":{"docs":{},"发":{"docs":{},"现":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"而":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"只":{"docs":{},"能":{"docs":{},"在":{"docs":{},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"时":{"docs":{},"才":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"需":{"docs":{},"要":{"docs":{},"两":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"会":{"docs":{},"在":{"docs":{},"最":{"docs":{},"近":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"相":{"docs":{},"关":{"docs":{},"文":{"docs":{},"法":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}},"和":{"docs":{},"特":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"&":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"&":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.008438818565400843},"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.01338432122370937},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.003332323538321721},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0019455252918287938},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.003444316877152698},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}},"求":{"docs":{},"值":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"x":{"docs":{},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},":":{"docs":{},":":{"docs":{},"m":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}}}},"c":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"(":{"docs":{},"*":{"docs":{},"a":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}}}},"b":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}}}},"l":{"docs":{},"h":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}},"r":{"docs":{},"h":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}},"a":{"1":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}},"s":{"1":{"docs":{},".":{"docs":{},"x":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"docs":{}},"y":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}}}}}}}}}}}}}}}}}}},";":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"[":{"9":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"docs":{}}}},"docs":{}}}}}}}},",":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0009088155104513784},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}},"求":{"docs":{},"值":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}},"|":{"docs":{},"|":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}},"求":{"docs":{},"值":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"将":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"加":{"1":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"docs":{}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"检":{"docs":{},"测":{"docs":{},"多":{"docs":{},"个":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"上":{"docs":{},"述":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"原":{"docs":{},"理":{"docs":{},"上":{"docs":{},"都":{"docs":{},"是":{"docs":{},"产":{"docs":{},"生":{"docs":{},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"对":{"docs":{},"象":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"将":{"docs":{},"没":{"docs":{},"有":{"docs":{},"基":{"docs":{},"类":{"docs":{},"，":{"docs":{},"v":{"docs":{},"将":{"docs":{},"被":{"docs":{},"通":{"docs":{},"过":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"模":{"docs":{},"板":{"docs":{},"处":{"docs":{},"理":{"docs":{},"任":{"docs":{},"意":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"展":{"docs":{},"开":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"展":{"docs":{},"开":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"是":{"docs":{},"指":{"docs":{},"将":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"分":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"机":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"操":{"docs":{},"作":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}},"化":{"docs":{},"声":{"docs":{},"明":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"应":{"docs":{},"用":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}},"折":{"docs":{},"叠":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"某":{"docs":{},"些":{"docs":{},"模":{"docs":{},"板":{"docs":{},"一":{"docs":{},"般":{"docs":{},"只":{"docs":{},"会":{"docs":{},"被":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"就":{"docs":{},"用":{"docs":{},"到":{"docs":{},"了":{"docs":{},"显":{"docs":{},"示":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"声":{"docs":{},"明":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"（":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"显":{"docs":{},"示":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"类":{"docs":{},"型":{"docs":{},"属":{"docs":{},"性":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"类":{"docs":{},"型":{"docs":{},"识":{"docs":{},"别":{"docs":{},"和":{"docs":{},"类":{"docs":{},"型":{"docs":{},"修":{"docs":{},"改":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"发":{"docs":{},"展":{"docs":{},"方":{"docs":{},"向":{"docs":{},"是":{"docs":{},"放":{"docs":{},"宽":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"在":{"docs":{},"之":{"docs":{},"前":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"（":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"已":{"docs":{},"经":{"docs":{},"实":{"docs":{},"现":{"docs":{},"）":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"导":{"docs":{},"出":{"docs":{},"受":{"docs":{},"限":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"是":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"省":{"docs":{},"略":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"（":{"docs":{},"书":{"docs":{},"中":{"docs":{},"列":{"docs":{},"出":{"docs":{},"了":{"docs":{},"几":{"docs":{},"种":{"docs":{},"正":{"docs":{},"在":{"docs":{},"被":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"的":{"docs":{},"情":{"docs":{},"形":{"docs":{},"，":{"docs":{},"但":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"只":{"docs":{},"是":{"docs":{},"语":{"docs":{},"法":{"docs":{},"糖":{"docs":{},"而":{"docs":{},"已":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"规":{"docs":{},"范":{"docs":{},"一":{"docs":{},"些":{"docs":{},"好":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"根":{"docs":{},"据":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"定":{"docs":{},"义":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"传":{"docs":{},"值":{"docs":{},"会":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"会":{"docs":{},"退":{"docs":{},"化":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"面":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"规":{"docs":{},"则":{"docs":{},"形":{"docs":{},"成":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"上":{"docs":{},"需":{"docs":{},"求":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}},"某":{"docs":{},"种":{"docs":{},"条":{"docs":{},"件":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"或":{"docs":{},"者":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"称":{"docs":{},"为":{"docs":{},"分":{"docs":{},"支":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"统":{"docs":{},"一":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"名":{"docs":{},"称":{"docs":{},"形":{"docs":{},"成":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"集":{"docs":{},"合":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}},"线":{"docs":{},"程":{"docs":{},"库":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"处":{"docs":{},"理":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"不":{"docs":{},"含":{"docs":{},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"作":{"docs":{},"为":{"docs":{},"递":{"docs":{},"归":{"docs":{},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"为":{"docs":{},"包":{"docs":{},"含":{"docs":{},"引":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"类":{"docs":{},"合":{"docs":{},"成":{"docs":{},"默":{"docs":{},"认":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{},"f":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"没":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"查":{"docs":{},"找":{"docs":{},"f":{"docs":{},"(":{"docs":{},"*":{"docs":{},"p":{"docs":{},")":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"类":{"docs":{},"是":{"docs":{},"c":{"docs":{},"，":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{},"是":{"docs":{},"全":{"docs":{},"局":{"docs":{},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"错":{"docs":{},"误":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"在":{"docs":{},"处":{"docs":{},"理":{"docs":{},"每":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"时":{"docs":{},"都":{"docs":{},"会":{"docs":{},"生":{"docs":{},"成":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"进":{"docs":{},"行":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"链":{"docs":{},"接":{"docs":{},"器":{"docs":{},"就":{"docs":{},"能":{"docs":{},"识":{"docs":{},"别":{"docs":{},"重":{"docs":{},"复":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"单":{"docs":{},"元":{"docs":{},"之":{"docs":{},"间":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"通":{"docs":{},"过":{"docs":{},"查":{"docs":{},"询":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"需":{"docs":{},"要":{"docs":{},"生":{"docs":{},"成":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"没":{"docs":{},"有":{"docs":{},"被":{"docs":{},"市":{"docs":{},"场":{"docs":{},"接":{"docs":{},"受":{"docs":{},"，":{"docs":{},"我":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"想":{"docs":{},"明":{"docs":{},"白":{"docs":{},"这":{"docs":{},"个":{"docs":{},"要":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"做":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"支":{"docs":{},"持":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"首":{"docs":{},"先":{"docs":{},"进":{"docs":{},"行":{"docs":{},"别":{"docs":{},"名":{"docs":{},"代":{"docs":{},"换":{"docs":{},"，":{"docs":{},"并":{"docs":{},"用":{"docs":{},"代":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"进":{"docs":{},"行":{"docs":{},"推":{"docs":{},"导":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"成":{"docs":{},"了":{"docs":{},"多":{"docs":{},"份":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"最":{"docs":{},"终":{"docs":{},"只":{"docs":{},"保":{"docs":{},"留":{"docs":{},"了":{"docs":{},"一":{"docs":{},"份":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"具":{"docs":{},"有":{"docs":{},"具":{"docs":{},"体":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"闭":{"docs":{},"包":{"docs":{},"类":{"docs":{},"型":{"docs":{},"（":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"导":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"会":{"docs":{},"先":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"则":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"代":{"docs":{},"换":{"docs":{},"顺":{"docs":{},"利":{"docs":{},"结":{"docs":{},"束":{"docs":{},"；":{"docs":{},"否":{"docs":{},"则":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"特":{"docs":{},"化":{"docs":{},"版":{"docs":{},"本":{"docs":{},"没":{"docs":{},"有":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"成":{"docs":{},"员":{"docs":{},"，":{"docs":{},"则":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"以":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"结":{"docs":{},"束":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"被":{"docs":{},"解":{"docs":{},"析":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"判":{"docs":{},"断":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}},"编":{"docs":{},"程":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}},"基":{"docs":{},"于":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}},"试":{"docs":{},"了":{"docs":{},"下":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"要":{"docs":{},"添":{"docs":{},"加":{"docs":{},"编":{"docs":{},"译":{"docs":{},"选":{"docs":{},"项":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}},"命":{"docs":{},"令":{"docs":{},"为":{"docs":{},"g":{"docs":{},"+":{"docs":{},"+":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}},"写":{"docs":{},"泛":{"docs":{},"型":{"docs":{},"库":{"docs":{},"时":{"docs":{},"，":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"模":{"docs":{},"板":{"docs":{},"是":{"docs":{},"否":{"docs":{},"会":{"docs":{},"支":{"docs":{},"持":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"对":{"docs":{},"于":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"和":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"注":{"docs":{},"意":{"docs":{},"事":{"docs":{},"项":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}},"自":{"docs":{},"然":{"docs":{},"而":{"docs":{},"然":{"docs":{},"会":{"docs":{},"想":{"docs":{},"到":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"还":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"地":{"docs":{},"会":{"docs":{},"用":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"定":{"docs":{},"义":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}},"赋":{"docs":{},"值":{"docs":{},"问":{"docs":{},"题":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}},"表":{"docs":{},"中":{"docs":{},"带":{"docs":{},"初":{"docs":{},"值":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"的":{"docs":{},"行":{"docs":{},"的":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"o":{"docs":{},"p":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"下":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"示":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"都":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"o":{"docs":{},"p":{"docs":{},"。":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"达":{"docs":{},"式":{"docs":{},"x":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"模":{"docs":{},"板":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}},"a":{"docs":{},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"<":{"docs":{},">":{"docs":{},"、":{"docs":{},"a":{"docs":{},"_":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"和":{"docs":{},"a":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"支":{"docs":{},"持":{"docs":{},"针":{"docs":{},"对":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"和":{"docs":{},"限":{"docs":{},"制":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}},"赋":{"docs":{},"值":{"docs":{},"操":{"docs":{},"作":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"表":{"docs":{},"示":{"docs":{},"计":{"docs":{},"算":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"以":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"传":{"docs":{},"递":{"docs":{},"到":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"中":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"值":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}},"中":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"的":{"docs":{},"最":{"docs":{},"终":{"docs":{},"求":{"docs":{},"值":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"被":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"析":{"docs":{},"过":{"docs":{},"程":{"docs":{},"为":{"docs":{},"：":{"docs":{"2021-12-20-ch4-variadic-templates.html":{"ref":"2021-12-20-ch4-variadic-templates.html","tf":0.0014064697609001407}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"决":{"docs":{},"上":{"docs":{},"面":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.013544018058690745},"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0030816640986132513}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"n":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"&":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},")":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876}}},":":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}},"l":{"docs":{},"l":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}},"y":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0035650623885918},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},")":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0048638132295719845},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0024154589371980675},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0021413276231263384}},",":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},";":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.001597444089456869},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0017825311942959},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.010309278350515464},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.00804289544235925}}}}}},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}},"s":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"(":{"0":{"docs":{},".":{"0":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.004514672686230248}}}}},"docs":{}},"docs":{}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"docs":{}},"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"x":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"y":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0018115942028985507}}}}},"=":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"中":{"docs":{},"，":{"docs":{},"y":{"docs":{},"发":{"docs":{},"生":{"docs":{},"了":{"docs":{},"的":{"docs":{},"左":{"docs":{},"值":{"docs":{},"到":{"docs":{},"右":{"docs":{},"值":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"（":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"1":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"2":{"docs":{},"{":{"2":{"docs":{},"}":{"docs":{},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}}}},"docs":{}}},"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0053475935828877}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0023961661341853034},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0034411562284927736},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}},";":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},"{":{"docs":{},"z":{"docs":{},"}":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}},"(":{"docs":{},")":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0018176310209027568}}}}}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"i":{"docs":{},"p":{"docs":{},",":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}},"(":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}},"&":{"docs":{},"&":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"]":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"会":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"解":{"docs":{},"析":{"docs":{},"为":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"具":{"docs":{},"体":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"包":{"docs":{},"含":{"docs":{},"两":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"并":{"docs":{},"且":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"无":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"见":{"docs":{},"下":{"docs":{},"例":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"有":{"docs":{},"继":{"docs":{},"承":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"总":{"docs":{},"是":{"docs":{},"在":{"docs":{},"具":{"docs":{},"有":{"docs":{},"更":{"docs":{},"近":{"docs":{},"继":{"docs":{},"承":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"支":{"docs":{},"持":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}},"的":{"docs":{},"典":{"docs":{},"型":{"docs":{},"应":{"docs":{},"用":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"部":{"docs":{},"分":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"或":{"docs":{},"者":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"地":{"docs":{},"址":{"docs":{},"（":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"数":{"docs":{},"组":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"加":{"docs":{},"取":{"docs":{},"地":{"docs":{},"址":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"&":{"docs":{},"）":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"变":{"docs":{},"量":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"换":{"docs":{},"元":{"docs":{},"函":{"docs":{},"数":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"<":{"docs":{},">":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"是":{"docs":{},"将":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"变":{"docs":{},"换":{"docs":{},"生":{"docs":{},"成":{"docs":{},"新":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"先":{"docs":{},"对":{"docs":{},"首":{"docs":{},"部":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"类":{"docs":{},"型":{"docs":{},"变":{"docs":{},"换":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"对":{"docs":{},"去":{"docs":{},"除":{"docs":{},"首":{"docs":{},"部":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"变":{"docs":{},"换":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"再":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"括":{"docs":{},"号":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"也":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"成":{"docs":{},"员":{"docs":{},"变":{"docs":{},"量":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"、":{"docs":{},"类":{"docs":{},"内":{"docs":{},"初":{"docs":{},"值":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"才":{"docs":{},"能":{"docs":{},"发":{"docs":{},"挥":{"docs":{},"作":{"docs":{},"用":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"面":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"嵌":{"docs":{},"入":{"docs":{},"类":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"5":{"docs":{},".":{"5":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"套":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"也":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"只":{"docs":{},"是":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"简":{"docs":{},"便":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}}}}}}}}}}}}}},"库":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}},"代":{"docs":{},"码":{"docs":{},"无":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"编":{"docs":{},"程":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}},"是":{"docs":{},"指":{"docs":{},"用":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"为":{"docs":{},"算":{"docs":{},"法":{"docs":{},"提":{"docs":{},"供":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}},"化":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"量":{"docs":{},"和":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"量":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"5":{"docs":{},".":{"7":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"基":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"时":{"docs":{},"要":{"docs":{},"带":{"docs":{},"上":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"5":{"docs":{},".":{"3":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"类":{"docs":{},"的":{"docs":{},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"零":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}}}}},"长":{"docs":{},"度":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"展":{"docs":{},"开":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"将":{"docs":{},"被":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"来":{"docs":{},"提":{"docs":{},"示":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"的":{"docs":{},"标":{"docs":{},"识":{"docs":{},"符":{"docs":{},"是":{"docs":{},"由":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"参":{"docs":{},"见":{"5":{"docs":{},".":{"1":{"docs":{"2021-12-30-ch5-tricky-basics.html":{"ref":"2021-12-30-ch5-tricky-basics.html","tf":0.0007987220447284345}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"参":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"模":{"docs":{},"板":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"完":{"docs":{},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{},"规":{"docs":{},"则":{"docs":{},"并":{"docs":{},"不":{"docs":{},"转":{"docs":{},"发":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"属":{"docs":{},"性":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"存":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"这":{"docs":{},"种":{"docs":{},"奇":{"docs":{},"怪":{"docs":{},"的":{"docs":{},"现":{"docs":{},"象":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"完":{"docs":{},"整":{"docs":{},"程":{"docs":{},"序":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"和":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}},"代":{"docs":{},"码":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"证":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"保":{"docs":{},"持":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"能":{"docs":{},"比":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"更":{"docs":{},"高":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}},"匹":{"docs":{},"配":{"docs":{},"导":{"docs":{},"致":{"docs":{},"的":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"调":{"docs":{},"用":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}},"，":{"docs":{},"形":{"docs":{},"参":{"docs":{},"和":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"或":{"docs":{},"者":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"）":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"值":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"左":{"docs":{},"值":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}},"引":{"docs":{},"用":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"到":{"docs":{},"右":{"docs":{},"值":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"（":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"）":{"docs":{},"是":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"或":{"docs":{},"者":{"docs":{},"寄":{"docs":{},"存":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"起":{"docs":{},"初":{"docs":{},"这":{"docs":{},"种":{"docs":{},"说":{"docs":{},"法":{"docs":{},"来":{"docs":{},"源":{"docs":{},"于":{"docs":{},"c":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"在":{"docs":{},"=":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"l":{"docs":{},"表":{"docs":{},"示":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"代":{"docs":{},"码":{"docs":{},"写":{"docs":{},"成":{"docs":{},"这":{"docs":{},"个":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}},"作":{"docs":{},"者":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"建":{"docs":{},"议":{"docs":{},"就":{"docs":{},"是":{"docs":{},"多":{"docs":{},"用":{"docs":{},"几":{"docs":{},"个":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"试":{"docs":{},"试":{"docs":{},"。":{"docs":{},"。":{"docs":{},"。":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"应":{"docs":{},"该":{"docs":{},"都":{"docs":{},"支":{"docs":{},"持":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"、":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"了":{"docs":{},"完":{"docs":{},"美":{"docs":{},"转":{"docs":{},"发":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"接":{"docs":{},"受":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"写":{"docs":{},"成":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"的":{"docs":{},"将":{"docs":{},"构":{"docs":{},"建":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"适":{"docs":{},"配":{"docs":{},"器":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"通":{"docs":{},"过":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"构":{"docs":{},"建":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"算":{"docs":{},"法":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"禁":{"docs":{},"止":{"docs":{},"将":{"docs":{},"常":{"docs":{},"量":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"以":{"docs":{},"非":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"显":{"docs":{},"示":{"docs":{},"指":{"docs":{},"出":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"名":{"docs":{},"称":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"些":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"情":{"docs":{},"况":{"docs":{},"不":{"docs":{},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"显":{"docs":{},"示":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"声":{"docs":{},"明":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}},"些":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"后":{"docs":{},"退":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"需":{"docs":{},"求":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}},"未":{"docs":{},"标":{"docs":{},"准":{"docs":{},"化":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"，":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"在":{"docs":{},"说":{"docs":{},"啥":{"docs":{},"。":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}},"绑":{"docs":{},"定":{"docs":{},"是":{"docs":{},"指":{"docs":{},"参":{"docs":{},"与":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"是":{"docs":{},"不":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"殊":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}},"化":{"docs":{},"（":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"：":{"docs":{},"完":{"docs":{},"整":{"docs":{},"和":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"语":{"docs":{},"义":{"docs":{},"一":{"docs":{},"致":{"docs":{},"性":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"重":{"docs":{},"载":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"由":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"不":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"要":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"来":{"docs":{},"转":{"docs":{},"发":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"语":{"docs":{},"义":{"docs":{},"。":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"必":{"docs":{},"须":{"docs":{},"用":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"模":{"docs":{},"板":{"docs":{},"只":{"docs":{},"在":{"docs":{},"需":{"docs":{},"要":{"docs":{},"时":{"docs":{},"才":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"声":{"docs":{},"明":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"得":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"不":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"。":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"该":{"docs":{},"值":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"被":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"i":{"docs":{},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},"。":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"三":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"传":{"docs":{},"值":{"docs":{},"的":{"docs":{},"，":{"docs":{},"传":{"docs":{},"递":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"会":{"docs":{},"退":{"docs":{},"化":{"docs":{},"为":{"docs":{},"指":{"docs":{},"向":{"docs":{},"该":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"是":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"模":{"docs":{},"板":{"docs":{},"要":{"docs":{},"能":{"docs":{},"够":{"docs":{},"处":{"docs":{},"理":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"编":{"docs":{},"译":{"docs":{},"选":{"docs":{},"项":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"不":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"链":{"docs":{},"接":{"docs":{},"器":{"docs":{},"不":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"和":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"原":{"docs":{},"理":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"将":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"变":{"docs":{},"参":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"会":{"docs":{},"对":{"docs":{},"应":{"docs":{},"多":{"docs":{},"个":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"情":{"docs":{},"况":{"docs":{},"就":{"docs":{},"会":{"docs":{},"有":{"docs":{},"些":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"上":{"docs":{},"述":{"docs":{},"代":{"docs":{},"码":{"docs":{},"将":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"所":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"范":{"docs":{},"围":{"docs":{},"较":{"docs":{},"小":{"docs":{},"，":{"docs":{},"累":{"docs":{},"加":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"可":{"docs":{},"能":{"docs":{},"存":{"docs":{},"在":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"或":{"docs":{},"者":{"docs":{},"截":{"docs":{},"断":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"出":{"docs":{},"现":{"docs":{},"负":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"将":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"也":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"会":{"docs":{},"比":{"docs":{},"较":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"值":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"为":{"0":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"代":{"docs":{},"码":{"docs":{},"并":{"docs":{},"不":{"docs":{},"正":{"docs":{},"确":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"将":{"docs":{},"初":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"策":{"docs":{},"略":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"就":{"docs":{},"是":{"docs":{},"仿":{"docs":{},"照":{"docs":{},"标":{"docs":{},"注":{"docs":{},"库":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"将":{"docs":{},"初":{"docs":{},"值":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"*":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"参":{"docs":{},"数":{"docs":{},"也":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"发":{"docs":{},"现":{"docs":{},"c":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"有":{"docs":{},"些":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"可":{"docs":{},"以":{"docs":{},"借":{"docs":{},"助":{"docs":{},"字":{"docs":{},"面":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"继":{"docs":{},"承":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"到":{"docs":{},"基":{"docs":{},"类":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"实":{"docs":{},"现":{"docs":{},"常":{"docs":{},"量":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"没":{"docs":{},"有":{"docs":{},"改":{"docs":{},"变":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"动":{"docs":{},"语":{"docs":{},"义":{"docs":{},"和":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"f":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"类":{"docs":{},"似":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"一":{"docs":{},"般":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"自":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"当":{"docs":{},"旧":{"docs":{},"值":{"docs":{},"和":{"docs":{},"新":{"docs":{},"值":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"销":{"docs":{},"毁":{"docs":{},"后":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"可":{"docs":{},"能":{"docs":{},"导":{"docs":{},"致":{"docs":{},"内":{"docs":{},"存":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{},"在":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"类":{"docs":{},"型":{"docs":{},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"将":{"docs":{},"调":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"自":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"将":{"docs":{},"被":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"限":{"docs":{},"定":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"引":{"docs":{},"用":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"限":{"docs":{},"定":{"docs":{},"符":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}},"而":{"docs":{},"在":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"中":{"docs":{},"要":{"docs":{},"写":{"docs":{},"为":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-04-ch6-move-semantics-and-enable-if.html":{"ref":"2022-01-04-ch6-move-semantics-and-enable-if.html","tf":0.0016666666666666668}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"书":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"了":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"从":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"9":{"8":{"docs":{},"到":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"1":{"docs":{},"的":{"docs":{},"发":{"docs":{},"展":{"docs":{},"历":{"docs":{},"史":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"一":{"docs":{},"段":{"docs":{},"解":{"docs":{},"释":{"docs":{},"解":{"docs":{},"答":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"让":{"docs":{},"我":{"docs":{},"疑":{"docs":{},"惑":{"docs":{},"很":{"docs":{},"久":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"没":{"docs":{},"想":{"docs":{},"明":{"docs":{},"白":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"场":{"docs":{},"景":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}},"一":{"docs":{},"直":{"docs":{},"都":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"给":{"docs":{},"出":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"根":{"docs":{},"据":{"docs":{},"索":{"docs":{},"引":{"docs":{},"提":{"docs":{},"取":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"指":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"是":{"docs":{},"“":{"docs":{},"非":{"docs":{},"其":{"docs":{},"它":{"docs":{},"”":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"判":{"docs":{},"断":{"docs":{},"有":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"都":{"docs":{},"不":{"docs":{},"为":{"docs":{},"空":{"docs":{},"时":{"docs":{},"才":{"docs":{},"调":{"docs":{},"用":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"于":{"docs":{},"这":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"解":{"docs":{},"释":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}},"提":{"docs":{},"到":{"docs":{},"了":{"docs":{},"其":{"docs":{},"它":{"docs":{},"几":{"docs":{},"个":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"配":{"docs":{},"套":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"是":{"docs":{},"我":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"关":{"docs":{},"于":{"docs":{},"性":{"docs":{},"能":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"最":{"docs":{},"好":{"docs":{},"测":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"去":{"docs":{},"猜":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"标":{"docs":{},"准":{"docs":{},"转":{"docs":{},"换":{"docs":{},"包":{"docs":{},"括":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}},"键":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"模":{"docs":{},"板":{"docs":{},"该":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"对":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"割":{"docs":{},"。":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"内":{"docs":{},"部":{"docs":{},"机":{"docs":{},"制":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"传":{"docs":{},"地":{"docs":{},"址":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"保":{"docs":{},"证":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"会":{"docs":{},"修":{"docs":{},"改":{"docs":{},"该":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"只":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"的":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{},"根":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"推":{"docs":{},"导":{"docs":{},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"会":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"传":{"docs":{},"数":{"docs":{},"组":{"docs":{},"时":{"docs":{},"类":{"docs":{},"型":{"docs":{},"信":{"docs":{},"息":{"docs":{},"会":{"docs":{},"包":{"docs":{},"括":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"无":{"docs":{},"法":{"docs":{},"默":{"docs":{},"认":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"非":{"docs":{},"常":{"docs":{},"容":{"docs":{},"易":{"docs":{},"出":{"docs":{},"错":{"docs":{},"：":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}},"变":{"docs":{},"量":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"折":{"docs":{},"叠":{"docs":{},"规":{"docs":{},"则":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"适":{"docs":{},"用":{"docs":{},"于":{"docs":{},"这":{"docs":{},"里":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"是":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"现":{"docs":{},"以":{"docs":{},"下":{"docs":{},"特":{"docs":{},"化":{"docs":{},"（":{"docs":{},"这":{"docs":{},"里":{"docs":{},"只":{"docs":{},"是":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"绑":{"docs":{},"定":{"docs":{},"到":{"docs":{},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}},"入":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"标":{"docs":{},"签":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"正":{"docs":{},"确":{"docs":{},"解":{"docs":{},"析":{"docs":{},"了":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"能":{"docs":{},"方":{"docs":{},"面":{"docs":{},"的":{"docs":{},"考":{"docs":{},"虑":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}},"我":{"docs":{},"本":{"docs":{},"以":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"好":{"docs":{},"的":{"docs":{},"语":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"看":{"docs":{},"了":{"docs":{},"这":{"docs":{},"一":{"docs":{},"章":{"docs":{},"后":{"docs":{},"我":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"引":{"docs":{},"用":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"很":{"docs":{},"多":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"正":{"docs":{},"是":{"docs":{},"这":{"docs":{},"些":{"docs":{},"问":{"docs":{},"题":{"docs":{},"使":{"docs":{},"得":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"变":{"docs":{},"得":{"docs":{},"更":{"docs":{},"加":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"开":{"docs":{},"始":{"docs":{},"怀":{"docs":{},"疑":{"docs":{},"：":{"docs":{},"引":{"docs":{},"用":{"docs":{},"到":{"docs":{},"底":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"的":{"docs":{},"语":{"docs":{},"法":{"docs":{},"？":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"可":{"docs":{},"以":{"docs":{},"传":{"docs":{},"引":{"docs":{},"用":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}},"不":{"docs":{},"借":{"docs":{},"助":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"实":{"docs":{},"现":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"许":{"docs":{},"将":{"docs":{},"左":{"docs":{},"值":{"docs":{},"中":{"docs":{},"的":{"docs":{},"l":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"局":{"docs":{},"部":{"docs":{},"化":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}},"推":{"docs":{},"荐":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"声":{"docs":{},"明":{"docs":{},"方":{"docs":{},"式":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"中":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"当":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"类":{"docs":{},"s":{"docs":{},"时":{"docs":{},"，":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"就":{"docs":{},"为":{"docs":{},"t":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"程":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"限":{"docs":{},"制":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"可":{"docs":{},"能":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"公":{"docs":{},"共":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"发":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"使":{"docs":{},"得":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"写":{"docs":{},"法":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"会":{"docs":{},"因":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"没":{"docs":{},"有":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"而":{"docs":{},"报":{"docs":{},"错":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"只":{"docs":{},"读":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}},"引":{"docs":{},"用":{"docs":{},"会":{"docs":{},"带":{"docs":{},"来":{"docs":{},"一":{"docs":{},"些":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"是":{"docs":{},"从":{"docs":{},"函":{"docs":{},"数":{"docs":{},"里":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"，":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"外":{"docs":{},"不":{"docs":{},"受":{"docs":{},"控":{"docs":{},"制":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"是":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}}}}}}}}}}}},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}},"链":{"docs":{},"式":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"输":{"docs":{},"出":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"和":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2022-01-05-ch7-by-value-or-by-reference.html":{"ref":"2022-01-05-ch7-by-value-or-by-reference.html","tf":0.0018018018018018018}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"错":{"docs":{},"误":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"表":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"!":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}},"=":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0038240917782026767},"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.002577319587628866},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0021205695243865495},"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00522875816993464},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.004889975550122249}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},">":{"docs":{},">":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"h":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"x":{"1":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0012077294685990338}}},"docs":{}},"f":{"1":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}},"docs":{}}},"v":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"?":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.002257336343115124}}},"代":{"docs":{},"换":{"docs":{},"中":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"可":{"docs":{},"以":{"docs":{},"迫":{"docs":{},"使":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"去":{"docs":{},"选":{"docs":{},"择":{"docs":{},"其":{"docs":{},"它":{"docs":{},"并":{"docs":{},"不":{"docs":{},"精":{"docs":{},"确":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"：":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"和":{"docs":{},"特":{"docs":{},"化":{"docs":{},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"：":{"docs":{},"使":{"docs":{},"用":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"替":{"docs":{},"代":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"码":{"docs":{},"体":{"docs":{},"积":{"docs":{},"小":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"编":{"docs":{},"译":{"docs":{},"为":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"，":{"docs":{},"源":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"不":{"docs":{},"公":{"docs":{},"开":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}},"运":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"会":{"docs":{},"快":{"docs":{},"一":{"docs":{},"些":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}},"带":{"docs":{},"静":{"docs":{},"态":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"类":{"docs":{"2022-01-06-ch8-compile-time-programming.html":{"ref":"2022-01-06-ch8-compile-time-programming.html","tf":0.0019120458891013384}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"s":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"_":{"docs":{},"c":{"docs":{},"x":{"docs":{},"x":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},":":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"e":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},"(":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"_":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}},";":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"i":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.005108556832694764}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.002554278416347382}}},",":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"b":{"7":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"(":{"docs":{},")":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}},"docs":{}},"c":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"q":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433},"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.003048780487804878},"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0018083182640144665}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691},"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0013764624913971094}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0020646937370956643}}}}}}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"&":{"docs":{},"a":{"1":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{}},"s":{"1":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{}},"x":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"p":{"1":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}},"docs":{}},"t":{"docs":{},"*":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}},"*":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}},"+":{"docs":{},"+":{"docs":{},")":{"docs":{},";":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"^":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{},"~":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"c":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00261437908496732}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"如":{"docs":{},"下":{"docs":{},"（":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"我":{"docs":{},"不":{"docs":{},"由":{"docs":{},"自":{"docs":{},"主":{"docs":{},"地":{"docs":{},"笑":{"docs":{},"了":{"docs":{},"，":{"docs":{},"傻":{"docs":{},"叉":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"确":{"docs":{},"实":{"docs":{},"都":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"子":{"docs":{},"的":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"函":{"docs":{},"数":{"docs":{},"声":{"docs":{},"明":{"docs":{},"在":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"源":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"化":{"docs":{},"时":{"docs":{},"要":{"docs":{},"为":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"提":{"docs":{},"供":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"（":{"docs":{},"具":{"docs":{},"有":{"docs":{},"默":{"docs":{},"认":{"docs":{},"实":{"docs":{},"参":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"除":{"docs":{},"外":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"以":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"且":{"docs":{},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"原":{"docs":{},"始":{"docs":{},"模":{"docs":{},"板":{"docs":{},"没":{"docs":{},"有":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"（":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"模":{"docs":{},"板":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"和":{"docs":{},"）":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"不":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"推":{"docs":{},"导":{"docs":{},"i":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"&":{"docs":{},")":{"docs":{},"[":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{},"]":{"docs":{},"推":{"docs":{},"导":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"装":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}}}},"排":{"docs":{},"除":{"docs":{},"模":{"docs":{},"板":{"docs":{},"错":{"docs":{},"误":{"docs":{},"非":{"docs":{},"常":{"docs":{},"麻":{"docs":{},"烦":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}}}},"理":{"docs":{},"解":{"docs":{},"模":{"docs":{},"板":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}}}},"预":{"docs":{},"编":{"docs":{},"译":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{"2022-01-06-ch9-using-templates-in-practice.html":{"ref":"2022-01-06-ch9-using-templates-in-practice.html","tf":0.001277139208173691}}}}}}}},"其":{"docs":{},"余":{"docs":{},"都":{"docs":{},"是":{"docs":{},"完":{"docs":{},"整":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"例":{"docs":{},"子":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}},"它":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}},"问":{"docs":{},"题":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"重":{"docs":{},"载":{"docs":{},"情":{"docs":{},"景":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}},"声":{"docs":{},"明":{"docs":{},"但":{"docs":{},"未":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"类":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}},"和":{"docs":{},"定":{"docs":{},"义":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"：":{"docs":{},"只":{"docs":{},"引":{"docs":{},"入":{"docs":{},"名":{"docs":{},"字":{"docs":{},"，":{"docs":{},"不":{"docs":{},"提":{"docs":{},"供":{"docs":{},"细":{"docs":{},"节":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"齐":{"docs":{},"时":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"不":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928},"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}},"普":{"docs":{},"通":{"docs":{},"非":{"docs":{},"内":{"docs":{},"联":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{},"、":{"docs":{},"非":{"docs":{},"内":{"docs":{},"联":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"和":{"docs":{},"类":{"docs":{},"静":{"docs":{},"态":{"docs":{},"成":{"docs":{},"员":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"只":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"次":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{},"和":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"值":{"docs":{},"是":{"docs":{},"未":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}},"值":{"docs":{},"和":{"docs":{},"常":{"docs":{},"量":{"docs":{},"值":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"用":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"修":{"docs":{},"饰":{"docs":{},"的":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-07-ch10-basic-template-terminology.html":{"ref":"2022-01-07-ch10-basic-template-terminology.html","tf":0.006024096385542169}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"作":{"docs":{},"为":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"时":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"结":{"docs":{},"束":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"应":{"docs":{},"该":{"docs":{},"写":{"docs":{},"在":{"docs":{},"前":{"docs":{},"面":{"docs":{},"，":{"docs":{},"以":{"docs":{},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"导":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}},"户":{"docs":{},"代":{"docs":{},"码":{"docs":{},"调":{"docs":{},"用":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"而":{"docs":{},"这":{"docs":{},"些":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"调":{"docs":{},"用":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"结":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}},"延":{"docs":{},"迟":{"docs":{},"求":{"docs":{},"值":{"docs":{"2022-01-08-ch11-generic-libraries.html":{"ref":"2022-01-08-ch11-generic-libraries.html","tf":0.001288659793814433}}}}}},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"要":{"docs":{},"用":{"docs":{},"来":{"docs":{},"提":{"docs":{},"升":{"docs":{},"编":{"docs":{},"译":{"docs":{},"速":{"docs":{},"度":{"docs":{},"，":{"docs":{},"目":{"docs":{},"前":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"只":{"docs":{},"能":{"docs":{},"写":{"docs":{},"在":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"中":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"程":{"docs":{},"序":{"docs":{},"中":{"docs":{},"可":{"docs":{},"能":{"docs":{},"只":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"很":{"docs":{},"少":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"却":{"docs":{},"会":{"docs":{},"对":{"docs":{},"整":{"docs":{},"个":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"进":{"docs":{},"行":{"docs":{},"词":{"docs":{},"法":{"docs":{},"分":{"docs":{},"析":{"docs":{},"和":{"docs":{},"语":{"docs":{},"法":{"docs":{},"分":{"docs":{},"析":{"docs":{},"，":{"docs":{},"引":{"docs":{},"入":{"docs":{},"模":{"docs":{},"块":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"前":{"docs":{},"将":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"编":{"docs":{},"译":{"docs":{},"好":{"docs":{},"以":{"docs":{},"提":{"docs":{},"升":{"docs":{},"编":{"docs":{},"译":{"docs":{},"速":{"docs":{},"度":{"docs":{},"。":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"下":{"docs":{},"情":{"docs":{},"况":{"docs":{},"不":{"docs":{},"允":{"docs":{},"许":{"docs":{},"使":{"docs":{},"用":{"docs":{},"默":{"docs":{},"认":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}},"往":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"是":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"体":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"支":{"docs":{},"持":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"i":{"docs":{},"f":{"docs":{},"后":{"docs":{},"，":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"必":{"docs":{},"须":{"docs":{},"支":{"docs":{},"持":{"docs":{},"部":{"docs":{},"分":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"一":{"docs":{},"节":{"docs":{},"（":{"1":{"6":{"docs":{},".":{"2":{"docs":{},".":{"2":{"docs":{},"）":{"docs":{},"中":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"例":{"docs":{},"：":{"docs":{},"解":{"docs":{},"析":{"docs":{},"f":{"docs":{},"(":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},"时":{"docs":{},"，":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"和":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"形":{"docs":{},"参":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"(":{"docs":{},"a":{"1":{"docs":{},")":{"docs":{},"和":{"docs":{},"(":{"docs":{},"a":{"2":{"docs":{},"*":{"docs":{},")":{"docs":{},"，":{"docs":{},"用":{"docs":{},"a":{"2":{"docs":{},"*":{"docs":{},"代":{"docs":{},"换":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"2":{"docs":{},"完":{"docs":{},"全":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"而":{"docs":{},"用":{"docs":{},"任":{"docs":{},"何":{"docs":{},"类":{"docs":{},"型":{"docs":{},"代":{"docs":{},"换":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"t":{"docs":{},"*":{"docs":{},"都":{"docs":{},"将":{"docs":{},"得":{"docs":{},"到":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"和":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"1":{"docs":{},"无":{"docs":{},"法":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"*":{"docs":{},")":{"docs":{},"更":{"docs":{},"为":{"docs":{},"特":{"docs":{},"化":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}},"某":{"docs":{},"些":{"docs":{},"类":{"docs":{},"型":{"docs":{},"调":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"时":{"docs":{},"最":{"docs":{},"终":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"p":{"docs":{},"y":{"docs":{},"或":{"docs":{},"者":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"时":{"docs":{},"最":{"docs":{},"终":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"类":{"docs":{},"型":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"非":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"都":{"docs":{},"比":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"后":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"度":{"docs":{},"高":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"意":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"到":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"不":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"默":{"docs":{},"认":{"docs":{},"实":{"docs":{},"参":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}},"实":{"docs":{},"参":{"docs":{},"列":{"docs":{},"表":{"docs":{},"应":{"docs":{},"该":{"docs":{},"和":{"docs":{},"主":{"docs":{},"模":{"docs":{},"版":{"docs":{},"的":{"docs":{},"形":{"docs":{},"参":{"docs":{},"列":{"docs":{},"表":{"docs":{},"不":{"docs":{},"同":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"和":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"对":{"docs":{},"应":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"应":{"docs":{},"该":{"docs":{},"是":{"docs":{},"非":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"或":{"docs":{},"者":{"docs":{},"其":{"docs":{},"它":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}},"别":{"docs":{},"名":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"前":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"都":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"类":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"规":{"docs":{},"则":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"累":{"docs":{},"加":{"docs":{},"模":{"docs":{},"板":{"docs":{},"都":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"指":{"docs":{},"针":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"更":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"（":{"docs":{},"书":{"docs":{},"中":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"还":{"docs":{},"是":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"溢":{"docs":{},"出":{"docs":{},"和":{"docs":{},"截":{"docs":{},"断":{"docs":{},"）":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"可":{"docs":{},"以":{"docs":{},"有":{"docs":{},"效":{"docs":{},"解":{"docs":{},"决":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"还":{"docs":{},"有":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"需":{"docs":{},"要":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"追":{"docs":{},"踪":{"docs":{},"器":{"docs":{},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"r":{"docs":{},"）":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"模":{"docs":{},"板":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"追":{"docs":{},"踪":{"docs":{},"器":{"docs":{},"也":{"docs":{},"是":{"docs":{},"测":{"docs":{},"试":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"型":{"docs":{},"或":{"docs":{},"者":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"无":{"docs":{},"法":{"docs":{},"被":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{},"）":{"docs":{},"一":{"docs":{},"般":{"docs":{},"会":{"docs":{},"被":{"docs":{},"放":{"docs":{},"在":{"docs":{},"模":{"docs":{},"板":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"靠":{"docs":{},"前":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"中":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"基":{"docs":{},"类":{"docs":{},"时":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"正":{"docs":{},"常":{"docs":{},"声":{"docs":{},"明":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"称":{"docs":{},"为":{"docs":{},"主":{"docs":{},"模":{"docs":{},"板":{"docs":{},"（":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"入":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{},"（":{"docs":{},"对":{"docs":{},"于":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"）":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"类":{"docs":{},"优":{"docs":{},"化":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"（":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}},"的":{"docs":{},"布":{"docs":{},"局":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}},"虚":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"能":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"虚":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"要":{"docs":{},"求":{"docs":{},"在":{"docs":{},"定":{"docs":{},"义":{"docs":{},"类":{"docs":{},"时":{"docs":{},"就":{"docs":{},"要":{"docs":{},"确":{"docs":{},"定":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"调":{"docs":{},"用":{"docs":{},"时":{"docs":{},"才":{"docs":{},"能":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{},"：":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"模":{"docs":{},"板":{"docs":{},"）":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}}},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}},"的":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"声":{"docs":{},"明":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"像":{"docs":{},"通":{"docs":{},"过":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"模":{"docs":{},"板":{"docs":{},"来":{"docs":{},"说":{"docs":{},"这":{"docs":{},"被":{"docs":{},"解":{"docs":{},"释":{"docs":{},"为":{"docs":{},"声":{"docs":{},"明":{"docs":{},"。":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"态":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}},"下":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"由":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"解":{"docs":{},"析":{"docs":{},"要":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}},"断":{"docs":{},"言":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"（":{"docs":{},"类":{"docs":{},"型":{"docs":{},"）":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-01-12-ch12-fundamentals-in-depth.html":{"ref":"2022-01-12-ch12-fundamentals-in-depth.html","tf":0.0006882312456985547}}}}}}}}}},"j":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.004777070063694267},"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}},"*":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},";":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002}}},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"声":{"docs":{},"明":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}},"友":{"docs":{},"元":{"docs":{},"查":{"docs":{},"找":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"名":{"docs":{},"称":{"docs":{},"和":{"docs":{},"非":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"名":{"docs":{},"称":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"就":{"docs":{},"是":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"查":{"docs":{},"找":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"基":{"docs":{},"类":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}},"模":{"docs":{},"板":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"类":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}},"分":{"docs":{},"为":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"、":{"docs":{},"值":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"和":{"docs":{},"类":{"docs":{},"型":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"。":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"会":{"docs":{},"在":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"查":{"docs":{},"找":{"docs":{},"：":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}},"和":{"docs":{},"非":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"名":{"docs":{},"称":{"docs":{},"包":{"docs":{},"含":{"docs":{},"作":{"docs":{},"用":{"docs":{},"域":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},":":{"docs":{},":":{"docs":{},"或":{"docs":{},"者":{"docs":{},"成":{"docs":{},"员":{"docs":{},"访":{"docs":{},"问":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},".":{"docs":{},"和":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"不":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"q":{"docs":{},":":{"docs":{},":":{"docs":{},"x":{"docs":{},"推":{"docs":{},"导":{"docs":{},"t":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}},"名":{"docs":{},"称":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},":":{"docs":{},":":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}},"查":{"docs":{},"找":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"最":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"一":{"docs":{},"条":{"docs":{},"应":{"docs":{},"该":{"docs":{},"对":{"docs":{},"于":{"docs":{},"受":{"docs":{},"限":{"docs":{},"名":{"docs":{},"称":{"docs":{},"，":{"docs":{},"先":{"docs":{},"在":{"docs":{},"当":{"docs":{},"前":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"类":{"docs":{},"和":{"docs":{},"非":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"在":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"型":{"docs":{},"基":{"docs":{},"类":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"编":{"docs":{},"译":{"docs":{},"后":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"信":{"docs":{},"息":{"docs":{},"都":{"docs":{},"丢":{"docs":{},"掉":{"docs":{},"了":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"信":{"docs":{},"息":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"调":{"docs":{},"试":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"带":{"docs":{},"着":{"docs":{},"的":{"docs":{},"话":{"docs":{},"可":{"docs":{},"执":{"docs":{},"行":{"docs":{},"文":{"docs":{},"件":{"docs":{},"将":{"docs":{},"变":{"docs":{},"大":{"docs":{},"。":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"承":{"docs":{},"和":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"名":{"docs":{},"称":{"docs":{},"是":{"docs":{},"未":{"docs":{},"知":{"docs":{},"特":{"docs":{},"化":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}}}}}}}},"隐":{"docs":{},"式":{"docs":{},"注":{"docs":{},"入":{"docs":{},"的":{"docs":{},"类":{"docs":{},"名":{"docs":{},"称":{"docs":{"2022-01-27-ch13-names-in-templates.html":{"ref":"2022-01-27-ch13-names-in-templates.html","tf":0.0015923566878980893}}}}}}}},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"转":{"docs":{},"换":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"转":{"docs":{},"换":{"docs":{},"组":{"docs":{},"成":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"最":{"docs":{},"多":{"docs":{},"只":{"docs":{},"能":{"docs":{},"包":{"docs":{},"含":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"户":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"包":{"docs":{},"含":{"docs":{},"三":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"用":{"docs":{},"户":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"：":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"同":{"docs":{},"理":{"docs":{},"，":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"s":{"docs":{},"不":{"docs":{},"能":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"2":{"docs":{},"和":{"docs":{},"位":{"docs":{},"置":{"3":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"s":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"4":{"docs":{},"，":{"docs":{},"则":{"docs":{},"无":{"docs":{},"法":{"docs":{},"在":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"中":{"docs":{},"求":{"docs":{},"出":{"docs":{},"s":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"能":{"docs":{},"将":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"s":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"位":{"docs":{},"置":{"1":{"docs":{},"。":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}},"时":{"docs":{},"移":{"docs":{},"除":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"限":{"docs":{},"定":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"的":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"检":{"docs":{},"测":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"被":{"docs":{},"推":{"docs":{},"迟":{"docs":{},"到":{"docs":{},"了":{"docs":{},"链":{"docs":{},"接":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"排":{"docs":{},"错":{"docs":{},"成":{"docs":{},"本":{"docs":{},"提":{"docs":{},"高":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}}}}}}}}}}}}}}}}},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"很":{"docs":{},"优":{"docs":{},"雅":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}},"惰":{"docs":{},"性":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"手":{"docs":{},"动":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"按":{"docs":{},"需":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"显":{"docs":{},"示":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}},"声":{"docs":{},"明":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"指":{"docs":{},"定":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"后":{"docs":{},"，":{"docs":{},"就":{"docs":{},"省":{"docs":{},"略":{"docs":{},"了":{"docs":{},"推":{"docs":{},"导":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"会":{"docs":{},"将":{"docs":{},"实":{"docs":{},"参":{"docs":{},"进":{"docs":{},"行":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"指":{"docs":{},"引":{"docs":{},"只":{"docs":{},"用":{"docs":{},"来":{"docs":{},"推":{"docs":{},"导":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"特":{"docs":{},"化":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}},"一":{"docs":{},"般":{"docs":{},"是":{"docs":{},"指":{"docs":{},"将":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{},"代":{"docs":{},"换":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"参":{"docs":{},"后":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"具":{"docs":{},"体":{"docs":{},"实":{"docs":{},"现":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"也":{"docs":{},"称":{"docs":{},"为":{"docs":{},"全":{"docs":{},"特":{"docs":{},"化":{"docs":{},"（":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"著":{"docs":{},"增":{"docs":{},"加":{"docs":{},"链":{"docs":{},"接":{"docs":{},"时":{"docs":{},"间":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}},"查":{"docs":{},"询":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"和":{"docs":{},"提":{"docs":{},"取":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}},"操":{"docs":{},"作":{"docs":{},"判":{"docs":{},"断":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"某":{"docs":{},"一":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}},"找":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"最":{"docs":{},"大":{"docs":{},"位":{"docs":{},"宽":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"标":{"docs":{},"文":{"docs":{},"件":{"docs":{},"的":{"docs":{},"体":{"docs":{},"积":{"docs":{},"会":{"docs":{},"变":{"docs":{},"大":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}}}}}},"前":{"docs":{},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"求":{"docs":{},"出":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"参":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"未":{"docs":{},"来":{"docs":{},"还":{"docs":{},"可":{"docs":{},"能":{"docs":{},"支":{"docs":{},"持":{"docs":{},"下":{"docs":{},"标":{"docs":{},"运":{"docs":{},"算":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"中":{"docs":{},"某":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"准":{"docs":{},"只":{"docs":{},"支":{"docs":{},"持":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"只":{"docs":{},"能":{"docs":{},"是":{"docs":{},"整":{"docs":{},"型":{"docs":{},"，":{"docs":{},"标":{"docs":{},"准":{"docs":{},"未":{"docs":{},"来":{"docs":{},"可":{"docs":{},"能":{"docs":{},"支":{"docs":{},"持":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"类":{"docs":{},"型":{"docs":{},"和":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"贪":{"docs":{},"心":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}}}},"迭":{"docs":{},"代":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{"2022-02-07-ch14-instantiation.html":{"ref":"2022-02-07-ch14-instantiation.html","tf":0.001524390243902439}}}}},"器":{"docs":{},"适":{"docs":{},"配":{"docs":{},"器":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}},";":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0011883541295306002},"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0006058770069675856},"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0038910505836575876},"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}},"允":{"docs":{},"许":{"docs":{},"的":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}},"右":{"docs":{},"值":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}},"就":{"docs":{},"是":{"docs":{},"纯":{"docs":{},"粹":{"docs":{},"数":{"docs":{},"学":{"docs":{},"意":{"docs":{},"义":{"docs":{},"上":{"docs":{},"的":{"docs":{},"、":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"、":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"总":{"docs":{},"之":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"都":{"docs":{},"是":{"docs":{},"右":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"引":{"docs":{},"用":{"docs":{},"右":{"docs":{},"值":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"不":{"docs":{},"是":{"docs":{},"右":{"docs":{},"值":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}},"合":{"docs":{},"成":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"默":{"docs":{},"认":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"多":{"docs":{},"个":{"docs":{},"可":{"docs":{},"推":{"docs":{},"导":{"docs":{},"的":{"docs":{},"上":{"docs":{},"下":{"docs":{},"文":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"面":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}},"符":{"docs":{},"串":{"docs":{},"字":{"docs":{},"面":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.005361930294906166}}}}}}}},"异":{"docs":{},"常":{"docs":{},"部":{"docs":{},"分":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}},"形":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},",":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"基":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"而":{"docs":{},"实":{"docs":{},"参":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"和":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"列":{"docs":{},"表":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}},"次":{"docs":{},"数":{"docs":{},"过":{"docs":{},"多":{"docs":{},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"由":{"docs":{},"于":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"在":{"docs":{},"构":{"docs":{},"造":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"时":{"docs":{},"都":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{},"更":{"docs":{},"有":{"docs":{},"效":{"docs":{},"率":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"进":{"docs":{},"行":{"docs":{},"构":{"docs":{},"造":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"最":{"docs":{},"终":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"了":{"2":{"6":{"docs":{},".":{"4":{"docs":{},".":{"1":{"docs":{},"中":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"在":{"docs":{},"代":{"docs":{},"换":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"声":{"docs":{},"明":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"不":{"docs":{},"会":{"docs":{},"被":{"docs":{},"视":{"docs":{},"为":{"docs":{},"错":{"docs":{},"误":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"再":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"载":{"docs":{},"版":{"docs":{},"本":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}},"化":{"docs":{},"的":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"规":{"docs":{},"则":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}},"结":{"docs":{},"构":{"docs":{},"化":{"docs":{},"绑":{"docs":{},"定":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}}},"果":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"给":{"docs":{},"出":{"docs":{},"多":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"运":{"docs":{},"算":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"贴":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"自":{"docs":{},"己":{"docs":{},"体":{"docs":{},"会":{"docs":{},"一":{"docs":{},"下":{"docs":{},"吧":{"docs":{},"：":{"docs":{"2022-02-15-ch15-template-argument-deduction.html":{"ref":"2022-02-15-ch15-template-argument-deduction.html","tf":0.0005941770647653001}}}}}}}}}}}}}},"举":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"x":{"2":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{},"&":{"docs":{},"，":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"后":{"docs":{},"模":{"docs":{},"板":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{},"&":{"docs":{},"，":{"docs":{},"比":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"更":{"docs":{},"为":{"docs":{},"匹":{"docs":{},"配":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{},"&":{"docs":{},"&":{"docs":{},"，":{"docs":{},"折":{"docs":{},"叠":{"docs":{},"后":{"docs":{},"模":{"docs":{},"板":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{},"&":{"docs":{},"&":{"docs":{},"，":{"docs":{},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"优":{"docs":{},"先":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"非":{"docs":{},"模":{"docs":{},"板":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}},"5":{"docs":{},"时":{"docs":{},"，":{"docs":{},"t":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"类":{"docs":{},"型":{"docs":{},"为":{"docs":{},"c":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}},"docs":{}},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}},"匹":{"docs":{},"配":{"docs":{},"规":{"docs":{},"则":{"docs":{},"的":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}},"过":{"docs":{},"程":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0027124773960217}}}}}},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"并":{"docs":{},"对":{"docs":{},"外":{"docs":{},"层":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}},"用":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"改":{"docs":{},"写":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"改":{"docs":{},"进":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"本":{"docs":{},"节":{"docs":{},"中":{"docs":{},"首":{"docs":{},"先":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}},"开":{"docs":{},"头":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"中":{"docs":{},"还":{"docs":{},"包":{"docs":{},"含":{"docs":{},"内":{"docs":{},"嵌":{"docs":{},"类":{"docs":{},"，":{"docs":{},"只":{"docs":{},"可":{"docs":{},"以":{"docs":{},"逐":{"docs":{},"次":{"docs":{},"特":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"是":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"却":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"变":{"docs":{},"量":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"完":{"docs":{},"整":{"docs":{},"了":{"docs":{},"静":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"到":{"docs":{},"动":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"是":{"docs":{},"否":{"docs":{},"值":{"docs":{},"得":{"docs":{},"需":{"docs":{},"要":{"docs":{},"同":{"docs":{},"时":{"docs":{},"考":{"docs":{},"量":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"和":{"docs":{},"调":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"在":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"时":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"可":{"docs":{},"以":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"。":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"以":{"docs":{},"替":{"docs":{},"代":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"的":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"是":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"为":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"3":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"分":{"docs":{},"配":{"docs":{},"地":{"docs":{},"址":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"当":{"docs":{},"向":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"看":{"docs":{},"完":{"docs":{},"整":{"docs":{},"本":{"docs":{},"书":{"docs":{},"后":{"docs":{},"再":{"docs":{},"回":{"docs":{},"头":{"docs":{},"在":{"docs":{},"看":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"觉":{"docs":{},"得":{"docs":{},"书":{"docs":{},"上":{"docs":{},"解":{"docs":{},"释":{"docs":{},"不":{"docs":{},"是":{"docs":{},"特":{"docs":{},"别":{"docs":{},"恰":{"docs":{},"当":{"docs":{},"。":{"docs":{},"解":{"docs":{},"析":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},",":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"我":{"docs":{},"一":{"docs":{},"下":{"docs":{},"子":{"docs":{},"就":{"docs":{},"想":{"docs":{},"起":{"docs":{},"来":{"docs":{},"了":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"关":{"docs":{},"于":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"o":{"docs":{},"。":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"<":{"docs":{},">":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"位":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"<":{"docs":{},">":{"docs":{},"对":{"docs":{},"两":{"docs":{},"个":{"docs":{},"具":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"单":{"docs":{},"位":{"docs":{},"的":{"docs":{},"单":{"docs":{},"位":{"docs":{},"元":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"和":{"docs":{},"得":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"单":{"docs":{},"位":{"docs":{},"元":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"d":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"表":{"docs":{},"示":{"docs":{},"u":{"docs":{},"单":{"docs":{},"位":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"该":{"docs":{},"数":{"docs":{},"值":{"docs":{},"用":{"docs":{},"内":{"docs":{},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"加":{"docs":{},"法":{"docs":{},"是":{"docs":{},"对":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"单":{"docs":{},"位":{"docs":{},"下":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"和":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"是":{"docs":{},"测":{"docs":{},"试":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-17-ch16-specialization-and-overloading.html":{"ref":"2022-02-17-ch16-specialization-and-overloading.html","tf":0.0009041591320072332}}}}}}}}}},"反":{"docs":{},"射":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}},"指":{"docs":{},"通":{"docs":{},"过":{"docs":{},"代":{"docs":{},"码":{"docs":{},"获":{"docs":{},"取":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"类":{"docs":{},"的":{"docs":{},"非":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"：":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"代":{"docs":{},"码":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"转":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158},"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"取":{"docs":{},"出":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"首":{"docs":{},"部":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"递":{"docs":{},"归":{"docs":{},"反":{"docs":{},"转":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"组":{"docs":{},"合":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}},"更":{"docs":{},"多":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{},"形":{"docs":{},"参":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}},"宽":{"docs":{},"松":{"docs":{},"的":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"关":{"docs":{},"键":{"docs":{},"字":{"docs":{},"规":{"docs":{},"则":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}}}}}}}}}}}},"规":{"docs":{},"范":{"docs":{},"化":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-02-22-ch17-future-directions.html":{"ref":"2022-02-22-ch17-future-directions.html","tf":0.003076923076923077}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0034782608695652175}},"和":{"docs":{},"静":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"对":{"docs":{},"比":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"同":{"docs":{},"一":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"调":{"docs":{},"用":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"书":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"是":{"docs":{},"最":{"docs":{},"为":{"docs":{},"熟":{"docs":{},"知":{"docs":{},"的":{"docs":{},"画":{"docs":{},"图":{"docs":{},"形":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"指":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"通":{"docs":{},"过":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"调":{"docs":{},"用":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}}}},"区":{"docs":{},"别":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}},"术":{"docs":{},"语":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}},"绑":{"docs":{},"定":{"docs":{},"是":{"docs":{},"指":{"docs":{},"参":{"docs":{},"与":{"docs":{},"多":{"docs":{},"态":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"由":{"docs":{},"基":{"docs":{},"类":{"docs":{},"固":{"docs":{},"定":{"docs":{"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"ref":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","tf":0.0017391304347826088}}}}}}}}}}}}}}}}}}}}},"侦":{"docs":{},"测":{"docs":{},"不":{"docs":{},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}},"任":{"docs":{},"意":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"成":{"docs":{},"员":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"非":{"docs":{},"类":{"docs":{},"型":{"docs":{},"成":{"docs":{},"员":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"值":{"docs":{},"特":{"docs":{},"征":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"（":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}},"类":{"docs":{},"型":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}},"分":{"docs":{},"别":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"模":{"docs":{},"板":{"docs":{},"对":{"docs":{},"整":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"进":{"docs":{},"行":{"docs":{},"累":{"docs":{},"加":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}},"支":{"docs":{},"型":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"判":{"docs":{},"断":{"docs":{},"内":{"docs":{},"置":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"复":{"docs":{},"合":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"储":{"docs":{},"值":{"docs":{},"的":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"是":{"docs":{},"否":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"基":{"docs":{},"于":{"docs":{},"谓":{"docs":{},"词":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"方":{"docs":{},"式":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"为":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"t":{"docs":{},"关":{"docs":{},"联":{"docs":{},"一":{"docs":{},"个":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"相":{"docs":{},"关":{"docs":{},"联":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"视":{"docs":{},"为":{"docs":{},"t":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"混":{"docs":{},"入":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"向":{"docs":{},"函":{"docs":{},"数":{"docs":{},"传":{"docs":{},"递":{"docs":{},"只":{"docs":{},"读":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"传":{"docs":{},"值":{"docs":{},"和":{"docs":{},"传":{"docs":{},"常":{"docs":{},"量":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"面":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"简":{"docs":{},"单":{"docs":{},"判":{"docs":{},"断":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"开":{"docs":{},"销":{"docs":{},"更":{"docs":{},"小":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"固":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"基":{"docs":{},"于":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"e":{"docs":{},"规":{"docs":{},"则":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"特":{"docs":{},"化":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"判":{"docs":{},"断":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"重":{"docs":{},"载":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"判":{"docs":{},"断":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"判":{"docs":{},"断":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"默":{"docs":{},"认":{"docs":{},"构":{"docs":{},"造":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"很":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"侦":{"docs":{},"测":{"docs":{},"某":{"docs":{},"个":{"docs":{},"类":{"docs":{},"中":{"docs":{},"是":{"docs":{},"否":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"成":{"docs":{},"员":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}},"泛":{"docs":{},"型":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"属":{"docs":{},"性":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"特":{"docs":{},"化":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}},"重":{"docs":{},"载":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"的":{"docs":{},"混":{"docs":{},"入":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"调":{"docs":{},"用":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"(":{"docs":{},")":{"docs":{},"都":{"docs":{},"会":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"新":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"docs":{},"代":{"docs":{},"码":{"docs":{},"体":{"docs":{},"积":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"不":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"而":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"：":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"设":{"docs":{},"计":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}},"类":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"为":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"提":{"docs":{},"供":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"基":{"docs":{},"类":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"为":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"提":{"docs":{},"供":{"docs":{},"标":{"docs":{},"识":{"docs":{},"—":{"docs":{},"—":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"的":{"docs":{},"展":{"docs":{},"开":{"docs":{},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"展":{"docs":{},"开":{"docs":{},"后":{"docs":{},"将":{"docs":{},"继":{"docs":{},"承":{"docs":{},"多":{"docs":{},"个":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"类":{"docs":{},"型":{"docs":{},"。":{"docs":{},"将":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"作":{"docs":{},"为":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"传":{"docs":{},"入":{"docs":{},"到":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"以":{"docs":{},"使":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"d":{"docs":{},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"的":{"docs":{},"引":{"docs":{},"用":{"docs":{},"用":{"docs":{},"到":{"docs":{},"了":{"docs":{},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"成":{"docs":{},"员":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}},"序":{"docs":{},"列":{"docs":{},"累":{"docs":{},"加":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}},"提":{"docs":{},"取":{"docs":{},"策":{"docs":{},"略":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"从":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"某":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}},"高":{"docs":{},"运":{"docs":{},"行":{"docs":{},"效":{"docs":{},"率":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"之":{"docs":{},"一":{"docs":{},"是":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"避":{"docs":{},"免":{"docs":{},"在":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"复":{"docs":{},"制":{"docs":{},"值":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"将":{"docs":{},"假":{"docs":{},"设":{"docs":{},"某":{"docs":{},"些":{"docs":{},"值":{"docs":{},"在":{"docs":{},"一":{"docs":{},"段":{"docs":{},"时":{"docs":{},"间":{"docs":{},"之":{"docs":{},"内":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"变":{"docs":{},"的":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"的":{"docs":{},"原":{"docs":{},"地":{"docs":{},"析":{"docs":{},"构":{"docs":{},"和":{"docs":{},"构":{"docs":{},"造":{"docs":{},"可":{"docs":{},"能":{"docs":{},"让":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"做":{"docs":{},"出":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"引":{"docs":{},"发":{"docs":{},"各":{"docs":{},"种":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"添":{"docs":{},"加":{"docs":{},"引":{"docs":{},"用":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}},"现":{"docs":{},"在":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"确":{"docs":{},"定":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"结":{"docs":{},"果":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"到":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"，":{"docs":{},"将":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"*":{"docs":{},")":{"docs":{},":":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"代":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"策":{"docs":{},"略":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"其":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"）":{"docs":{},"表":{"docs":{},"示":{"docs":{},"函":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"可":{"docs":{},"以":{"docs":{},"配":{"docs":{},"置":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"（":{"docs":{},"个":{"docs":{},"人":{"docs":{},"认":{"docs":{},"为":{"docs":{},"重":{"docs":{},"点":{"docs":{},"在":{"docs":{},"可":{"docs":{},"配":{"docs":{},"置":{"docs":{},"）":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"累":{"docs":{},"加":{"docs":{},"模":{"docs":{},"板":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"为":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"并":{"docs":{},"和":{"docs":{},"当":{"docs":{},"前":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"累":{"docs":{},"加":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"加":{"docs":{},"法":{"docs":{},"求":{"docs":{},"和":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"将":{"docs":{},"求":{"docs":{},"和":{"docs":{},"操":{"docs":{},"作":{"docs":{},"称":{"docs":{},"为":{"docs":{},"策":{"docs":{},"略":{"docs":{},"（":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"y":{"docs":{},"）":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"模":{"docs":{},"板":{"docs":{},"策":{"docs":{},"略":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"模":{"docs":{},"板":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"控":{"docs":{},"制":{"docs":{},"求":{"docs":{},"和":{"docs":{},"、":{"docs":{},"求":{"docs":{},"积":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"查":{"docs":{},"找":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"位":{"docs":{},"宽":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"函":{"docs":{},"数":{"docs":{},"f":{"docs":{},"进":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},"使":{"docs":{},"用":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"和":{"docs":{},"策":{"docs":{},"略":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"容":{"docs":{},"器":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}},"识":{"docs":{},"别":{"docs":{},"函":{"docs":{},"数":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"谓":{"docs":{},"词":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}},"接":{"docs":{},"受":{"docs":{},"多":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"布":{"docs":{},"尔":{"docs":{},"值":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}},"附":{"docs":{},"录":{"docs":{},"d":{"docs":{},"中":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"了":{"docs":{},"标":{"docs":{},"准":{"docs":{},"库":{"docs":{},"中":{"docs":{},"类":{"docs":{},"型":{"docs":{},"特":{"docs":{},"征":{"docs":{},"模":{"docs":{},"板":{"docs":{},"。":{"docs":{"2022-03-01-ch19-implementing-traits.html":{"ref":"2022-03-01-ch19-implementing-traits.html","tf":0.0003029385034837928}}}}}}}}}}}}}}}}}}}},"《":{"docs":{},"s":{"docs":{},"t":{"docs":{},"l":{"docs":{},"源":{"docs":{},"码":{"docs":{},"剖":{"docs":{},"析":{"docs":{},"》":{"docs":{},"一":{"docs":{},"书":{"docs":{},"中":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"了":{"docs":{},"大":{"docs":{},"量":{"docs":{},"有":{"docs":{},"关":{"docs":{},"这":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}},"借":{"docs":{},"助":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"的":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"i":{"docs":{},"f":{"docs":{},"可":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"f":{"docs":{},"<":{"docs":{},">":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"启":{"docs":{},"用":{"docs":{},"和":{"docs":{},"禁":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}},"特":{"docs":{},"化":{"docs":{},"的":{"docs":{},"类":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}},"回":{"docs":{},"到":{"docs":{},"第":{"1":{"docs":{},"步":{"docs":{},"，":{"docs":{},"引":{"docs":{},"用":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"得":{"docs":{},"到":{"docs":{},"最":{"docs":{},"终":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"步":{"docs":{},"，":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"中":{"docs":{},"的":{"docs":{},"推":{"docs":{},"导":{"docs":{},"会":{"docs":{},"根":{"docs":{},"据":{"docs":{},"重":{"docs":{},"载":{"docs":{},"解":{"docs":{},"析":{"docs":{},"规":{"docs":{},"则":{"docs":{},"选":{"docs":{},"择":{"docs":{},"最":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"推":{"docs":{},"导":{"docs":{},"出":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},":":{"docs":{},":":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"测":{"docs":{},"试":{"docs":{},"代":{"docs":{},"码":{"docs":{},"：":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816},"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}},"类":{"docs":{},"型":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}},"算":{"docs":{},"法":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"特":{"docs":{},"化":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}},"（":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}}},"不":{"docs":{},"够":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}},"避":{"docs":{},"免":{"docs":{},"调":{"docs":{},"用":{"docs":{},"平":{"docs":{},"凡":{"docs":{},"的":{"docs":{},"析":{"docs":{},"构":{"docs":{},"函":{"docs":{},"数":{"docs":{"2022-03-02-ch20-overloading-on-type-properties.html":{"ref":"2022-03-02-ch20-overloading-on-type-properties.html","tf":0.0009727626459143969}}}}}}}}}}}}},"双":{"docs":{},"向":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"应":{"docs":{},"该":{"docs":{},"支":{"docs":{},"持":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}},"括":{"docs":{},"号":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}},"外":{"docs":{},"观":{"docs":{},"模":{"docs":{},"式":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"中":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"大":{"docs":{},"量":{"docs":{},"或":{"docs":{},"者":{"docs":{},"全":{"docs":{},"部":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"接":{"docs":{},"口":{"docs":{},"借":{"docs":{},"助":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"的":{"docs":{},"接":{"docs":{},"口":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"外":{"docs":{},"观":{"docs":{},"模":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"本":{"docs":{},"节":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"外":{"docs":{},"观":{"docs":{},"类":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"奇":{"docs":{},"异":{"docs":{},"递":{"docs":{},"归":{"docs":{},"模":{"docs":{},"板":{"docs":{},"模":{"docs":{},"式":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"（":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}},"巴":{"docs":{},"顿":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}},"接":{"docs":{},"口":{"docs":{},"隐":{"docs":{},"藏":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}},"下":{"docs":{},"来":{"docs":{},"会":{"docs":{},"调":{"docs":{},"用":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"的":{"docs":{},"成":{"docs":{},"员":{"docs":{},"模":{"docs":{},"板":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"=":{"docs":{},"，":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"的":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"早":{"docs":{},"期":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"无":{"docs":{},"法":{"docs":{},"对":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"进":{"docs":{},"行":{"docs":{},"重":{"docs":{},"载":{"docs":{},"，":{"docs":{},"巴":{"docs":{},"顿":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}},"只":{"docs":{},"支":{"docs":{},"持":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"类":{"docs":{},"型":{"docs":{},"作":{"docs":{},"为":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"下":{"docs":{},"面":{"docs":{},"计":{"docs":{},"算":{"3":{"docs":{},"的":{"docs":{},"幂":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"运":{"docs":{},"算":{"docs":{},"赋":{"docs":{},"值":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"来":{"docs":{},"避":{"docs":{},"免":{"docs":{},"创":{"docs":{},"建":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"以":{"docs":{},"节":{"docs":{},"省":{"docs":{},"构":{"docs":{},"造":{"docs":{},"和":{"docs":{},"析":{"docs":{},"构":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"混":{"docs":{},"入":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"和":{"docs":{},"c":{"docs":{},"r":{"docs":{},"t":{"docs":{},"p":{"docs":{},"结":{"docs":{},"合":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"定":{"docs":{},"制":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}},"将":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"变":{"docs":{},"为":{"docs":{},"虚":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"很":{"docs":{},"混":{"docs":{},"乱":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"m":{"docs":{},"i":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"）":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"通":{"docs":{},"过":{"docs":{},"反":{"docs":{},"转":{"docs":{},"继":{"docs":{},"承":{"docs":{},"关":{"docs":{},"系":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"来":{"docs":{},"对":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"定":{"docs":{},"制":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"现":{"docs":{},"在":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"类":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"合":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"的":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"应":{"docs":{},"用":{"docs":{},"是":{"docs":{},"对":{"docs":{},"具":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"单":{"docs":{},"位":{"docs":{},"的":{"docs":{},"值":{"docs":{},"求":{"docs":{},"和":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"为":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"确":{"docs":{},"定":{"docs":{},"求":{"docs":{},"和":{"docs":{},"结":{"docs":{},"果":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"并":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"h":{"docs":{},"y":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}},"诺":{"docs":{},"克":{"docs":{},"曼":{"docs":{},"技":{"docs":{},"巧":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}},"通":{"docs":{},"过":{"docs":{},"将":{"docs":{},"函":{"docs":{},"数":{"docs":{},"模":{"docs":{},"板":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"友":{"docs":{},"元":{"docs":{},"来":{"docs":{},"用":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"访":{"docs":{},"问":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"应":{"docs":{},"该":{"docs":{},"支":{"docs":{},"持":{"docs":{},"a":{"docs":{},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"2022-03-03-ch21-templates-and-inheritance.html":{"ref":"2022-03-03-ch21-templates-and-inheritance.html","tf":0.0006038647342995169}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"着":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"的":{"docs":{},"n":{"docs":{},"的":{"docs":{},"增":{"docs":{},"大":{"docs":{},"，":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"也":{"docs":{},"会":{"docs":{},"越":{"docs":{},"来":{"docs":{},"越":{"docs":{},"长":{"docs":{},"，":{"docs":{},"这":{"docs":{},"对":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"负":{"docs":{},"担":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"都":{"docs":{},"对":{"docs":{},"模":{"docs":{},"板":{"docs":{},"名":{"docs":{},"字":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"。":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"桥":{"docs":{},"接":{"docs":{},"接":{"docs":{},"口":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}},"静":{"docs":{},"态":{"docs":{},"和":{"docs":{},"动":{"docs":{},"态":{"docs":{},"多":{"docs":{},"态":{"docs":{"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"ref":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","tf":0.00130718954248366}}}}}}}}}}},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}},"中":{"docs":{},"的":{"docs":{},"反":{"docs":{},"射":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}},"是":{"docs":{},"对":{"docs":{},"程":{"docs":{},"序":{"docs":{},"进":{"docs":{},"行":{"docs":{},"编":{"docs":{},"程":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"编":{"docs":{},"程":{"docs":{},"系":{"docs":{},"统":{"docs":{},"对":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"进":{"docs":{},"行":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"产":{"docs":{},"生":{"docs":{},"出":{"docs":{},"新":{"docs":{},"代":{"docs":{},"码":{"docs":{},"、":{"docs":{},"实":{"docs":{},"现":{"docs":{},"新":{"docs":{},"功":{"docs":{},"能":{"docs":{},"的":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{},"原":{"docs":{},"文":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"中":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"提":{"docs":{},"取":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"下":{"docs":{},"标":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"，":{"docs":{},"内":{"docs":{},"部":{"docs":{},"借":{"docs":{},"助":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"上":{"docs":{},"一":{"docs":{},"章":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"都":{"docs":{},"存":{"docs":{},"储":{"docs":{},"了":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"元":{"docs":{},"组":{"docs":{},"中":{"docs":{},"还":{"docs":{},"包":{"docs":{},"括":{"docs":{},"类":{"docs":{},"型":{"docs":{},"所":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"元":{"docs":{},"组":{"docs":{},"所":{"docs":{},"支":{"docs":{},"持":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"既":{"docs":{},"要":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"时":{"docs":{},"确":{"docs":{},"定":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"又":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"对":{"docs":{},"值":{"docs":{},"进":{"docs":{},"行":{"docs":{},"计":{"docs":{},"算":{"docs":{},"。":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"空":{"docs":{},"基":{"docs":{},"类":{"docs":{},"优":{"docs":{},"化":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"跳":{"docs":{},"转":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"进":{"docs":{},"行":{"docs":{},"循":{"docs":{},"环":{"docs":{},"展":{"docs":{},"开":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"法":{"docs":{},"求":{"docs":{},"和":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"优":{"docs":{},"化":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"元":{"docs":{},"编":{"docs":{},"程":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"当":{"docs":{},"然":{"docs":{},"的":{"docs":{},"会":{"docs":{},"认":{"docs":{},"为":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},":":{"docs":{},":":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"过":{"docs":{},"程":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}},"生":{"docs":{},"成":{"docs":{},"（":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"期":{"docs":{},"间":{"docs":{},"生":{"docs":{},"成":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"直":{"docs":{},"到":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"1":{"7":{"docs":{},"允":{"docs":{},"许":{"docs":{},"内":{"docs":{},"联":{"docs":{},"静":{"docs":{},"态":{"docs":{},"数":{"docs":{},"据":{"docs":{},"成":{"docs":{},"员":{"docs":{},"后":{"docs":{},"，":{"docs":{},"才":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"（":{"docs":{},"但":{"docs":{},"是":{"docs":{},"原":{"docs":{},"理":{"docs":{},"书":{"docs":{},"上":{"docs":{},"没":{"docs":{},"说":{"docs":{},"）":{"docs":{},"。":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"计":{"docs":{},"算":{"docs":{},"完":{"docs":{},"整":{"docs":{},"性":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"递":{"docs":{},"归":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"或":{"docs":{},"者":{"docs":{},"常":{"docs":{},"量":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"在":{"docs":{},"编":{"docs":{},"译":{"docs":{},"期":{"docs":{},"间":{"docs":{},"进":{"docs":{},"行":{"docs":{},"求":{"docs":{},"值":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"跟":{"docs":{},"踪":{"docs":{},"递":{"docs":{},"归":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"和":{"docs":{},"递":{"docs":{},"归":{"docs":{},"模":{"docs":{},"板":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{"2022-03-05-ch23-metaprogramming.html":{"ref":"2022-03-05-ch23-metaprogramming.html","tf":0.0010706638115631692}}}}}}}},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{},"模":{"docs":{},"板":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"导":{"docs":{},"致":{"docs":{},"编":{"docs":{},"译":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"为":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"添":{"docs":{},"加":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"<":{"docs":{},">":{"docs":{},"进":{"docs":{},"行":{"docs":{},"封":{"docs":{},"装":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"和":{"docs":{},"递":{"docs":{},"归":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"获":{"docs":{},"取":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"中":{"docs":{},"第":{"docs":{},"n":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"包":{"docs":{},"展":{"docs":{},"开":{"docs":{},"优":{"docs":{},"化":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{},"首":{"docs":{},"先":{"docs":{},"取":{"docs":{},"出":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"首":{"docs":{},"部":{"docs":{},"类":{"docs":{},"型":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"列":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"再":{"docs":{},"将":{"docs":{},"首":{"docs":{},"部":{"docs":{},"类":{"docs":{},"型":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"合":{"docs":{},"适":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"索":{"docs":{},"引":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}},"列":{"docs":{},"表":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"借":{"docs":{},"助":{"docs":{},"上":{"docs":{},"一":{"docs":{},"章":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}},"追":{"docs":{},"加":{"docs":{},"算":{"docs":{},"法":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}},"和":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"类":{"docs":{},"似":{"docs":{},"：":{"docs":{"2022-03-06-ch24-typelists.html":{"ref":"2022-03-06-ch24-typelists.html","tf":0.0009157509157509158}}}}}}}}}}}}}}}}}}}}},"踪":{"docs":{},"器":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}},"优":{"docs":{},"化":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}},"存":{"docs":{},"储":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783},"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"比":{"docs":{},"较":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}},"操":{"docs":{},"作":{"docs":{},"判":{"docs":{},"断":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"组":{"docs":{},"类":{"docs":{},"型":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"在":{"docs":{},"于":{"docs":{},"采":{"docs":{},"用":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"会":{"docs":{},"先":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"基":{"docs":{},"类":{"docs":{},"，":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"有":{"docs":{},"些":{"docs":{},"别":{"docs":{},"扭":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"多":{"docs":{},"重":{"docs":{},"继":{"docs":{},"承":{"docs":{},"：":{"docs":{"2022-03-07-ch25-tuples.html":{"ref":"2022-03-07-ch25-tuples.html","tf":0.000574052812858783}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"共":{"docs":{},"返":{"docs":{},"回":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}},"析":{"docs":{},"构":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"根":{"docs":{},"据":{"docs":{},"当":{"docs":{},"前":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"释":{"docs":{},"放":{"docs":{},"缓":{"docs":{},"冲":{"docs":{},"区":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"将":{"docs":{},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"了":{"0":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"可":{"docs":{},"识":{"docs":{},"别":{"docs":{},"联":{"docs":{},"合":{"docs":{},"体":{"docs":{},"中":{"docs":{},"未":{"docs":{},"存":{"docs":{},"储":{"docs":{},"任":{"docs":{},"何":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"计":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}},"赋":{"docs":{},"值":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0016806722689075631}},"和":{"docs":{},"构":{"docs":{},"造":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"书":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"构":{"docs":{},"造":{"docs":{},"：":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}}}}}}}},"抛":{"docs":{},"出":{"docs":{},"异":{"docs":{},"常":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{"2022-03-08-ch26-discriminated-unions.html":{"ref":"2022-03-08-ch26-discriminated-unions.html","tf":0.0008403361344537816}}}}}}}}}}},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"和":{"docs":{},"循":{"docs":{},"环":{"docs":{},"分":{"docs":{},"割":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}},"实":{"docs":{},"体":{"docs":{},"化":{"docs":{},"是":{"docs":{},"左":{"docs":{},"值":{"docs":{},"到":{"docs":{},"右":{"docs":{},"值":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"p":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"用":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"临":{"docs":{},"时":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"x":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"发":{"docs":{},"生":{"docs":{},"在":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"中":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}},"减":{"docs":{},"少":{"docs":{},"到":{"docs":{},"只":{"docs":{},"有":{"2":{"0":{"0":{"0":{"docs":{},"次":{"docs":{},"读":{"docs":{},"和":{"1":{"0":{"0":{"0":{"docs":{},"次":{"docs":{},"写":{"docs":{},"。":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},"创":{"docs":{},"建":{"docs":{},"了":{"3":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"量":{"docs":{},"，":{"docs":{},"大":{"docs":{},"小":{"docs":{},"都":{"docs":{},"为":{"1":{"0":{"0":{"0":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}}}},"改":{"docs":{},"进":{"docs":{},"后":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"为":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}},"缺":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"写":{"docs":{},"起":{"docs":{},"来":{"docs":{},"很":{"docs":{},"繁":{"docs":{},"琐":{"docs":{},"。":{"docs":{},"最":{"docs":{},"理":{"docs":{},"想":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"是":{"docs":{},"编":{"docs":{},"译":{"docs":{},"器":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"代":{"docs":{},"码":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"2022-03-09-ch27-expression-templates.html":{"ref":"2022-03-09-ch27-expression-templates.html","tf":0.001128668171557562}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"浅":{"docs":{},"层":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}},"错":{"docs":{},"误":{"docs":{},"原":{"docs":{},"因":{"docs":{},"在":{"docs":{},"于":{"docs":{},"从":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"传":{"docs":{},"入":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"在":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"<":{"docs":{},">":{"docs":{},"中":{"docs":{},"无":{"docs":{},"法":{"docs":{},"解":{"docs":{},"引":{"docs":{},"用":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"防":{"docs":{},"止":{"docs":{},"调":{"docs":{},"用":{"docs":{},"层":{"docs":{},"数":{"docs":{},"过":{"docs":{},"多":{"docs":{},"引":{"docs":{},"起":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"些":{"docs":{},"无":{"docs":{},"用":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"进":{"docs":{},"行":{"docs":{},"浅":{"docs":{},"层":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"：":{"docs":{"2022-03-09-ch28-debugging-templates.html":{"ref":"2022-03-09-ch28-debugging-templates.html","tf":0.0024449877750611247}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"到":{"docs":{},"期":{"docs":{},"值":{"docs":{},"的":{"docs":{},"例":{"docs":{},"子":{"docs":{},"：":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}},"取":{"docs":{},"地":{"docs":{},"址":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}},"放":{"docs":{},"入":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"的":{"docs":{},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"纯":{"docs":{},"右":{"docs":{},"值":{"docs":{},"数":{"docs":{},"组":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{"2022-01-05-appB-value-categories.html":{"ref":"2022-01-05-appB-value-categories.html","tf":0.002680965147453083}}}}}}}}}}}},"剔":{"docs":{},"除":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"形":{"docs":{},"成":{"docs":{},"可":{"docs":{},"行":{"docs":{},"函":{"docs":{},"数":{"docs":{},"集":{"docs":{},"合":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"指":{"docs":{},"针":{"docs":{},"到":{"docs":{},"基":{"docs":{},"类":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"最":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"目":{"docs":{},"标":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}},"经":{"docs":{},"用":{"docs":{},"户":{"docs":{},"定":{"docs":{},"义":{"docs":{},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"也":{"docs":{},"包":{"docs":{},"括":{"docs":{},"隐":{"docs":{},"式":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"通":{"docs":{},"过":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"转":{"docs":{},"换":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"标":{"docs":{},"准":{"docs":{},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"整":{"docs":{},"型":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"型":{"docs":{},"，":{"docs":{},"派":{"docs":{},"生":{"docs":{},"类":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"公":{"docs":{},"有":{"docs":{},"继":{"docs":{},"承":{"docs":{},"的":{"docs":{},"基":{"docs":{},"类":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"数":{"docs":{},"组":{"docs":{},"退":{"docs":{},"化":{"docs":{},"为":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"指":{"docs":{},"针":{"docs":{},"变":{"docs":{},"为":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"提":{"docs":{},"升":{"docs":{},"转":{"docs":{},"换":{"docs":{},"后":{"docs":{},"的":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"即":{"docs":{},"位":{"docs":{},"宽":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"提":{"docs":{},"升":{"docs":{},"为":{"docs":{},"位":{"docs":{},"宽":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{"2022-03-02-appC-overload-resolution.html":{"ref":"2022-03-02-appC-overload-resolution.html","tf":0.0015408320493066256}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"length":10340},"corpusTokens":["!","!(f1","!(lh","!(x1","!=","!hashash>>","!isarrayt::valu","!isclasst::value;","!isfunctiont::valu","!isfundat::valu","!ispointert::valu","!ispointertomembert::valu","!israndomaccessiterator>","!isreferencet::valu","!std::is_final::value>","!std::is_same::value,","!v.is())","\"","\"!\",","\"\";","\"../typelist/typelist.hpp\"","\"1\"","\";","\"\\n\"));","\"accum1.hpp\"","\"accum6.hpp\"","\"accumtraits2.hpp\"","\"accumtraits3.hpp\"","\"accumtraits4.hpp\"","\"accumulate.hpp\"","\"anica\";","\"arrays.hpp\"","\"boolconstant.hpp\"","\"bottom\"），就会有一点复杂。由于stack","\"bye\"};","\"c++\"的。模板一般是可以外部链接的，但是也有例外：","\"char","\"commontype.hpp\"","\"conceptsreq.hpp\"","\"coord.hpp\"","\"ctvalue.hpp\"","\"decay.hpp\"","\"dynahier.hpp\"","\"elementtype.hpp\"","\"enableif.hpp\"","\"exprops1a.hpp\"","\"f.hpp\"","\"f.tpp\"","\"findindexof.hpp\"","\"foreach.hpp\"","\"foreachinvoke.hpp\"","\"frederic\";","\"funcoverload1.hpp\"","\"functionptr.hpp\"","\"gregor\"}","\"guy\");","\"hasmember.hpp\"","\"hasplus.hpp\"","\"hastype.hpp\"","\"header.hpp\"","\"hello\"","\"hello\")","\"hello\")的实例化结果为std::is_same::valu","\"hello\")结果为false，这是因为以42和hello作为参数调用valuet()时无法进行推导。","\"hello\",","\"hello\";","\"hello\"_b7;","\"hello\"});","\"hello,","\"hi\");","\"hi\";","\"identity.hpp\"","\"ifthenelse.hpp\"","\"initi","\"initializer\",","\"insert","\"invalid","\"iscontextualbool.hpp\"","\"isconvertible.hpp\"","\"isequalitycomparable.hpp\"","\"isfunda.hpp\"","\"islvaluereference.hpp\"","\"isrvaluereference.hpp\"","\"issame.hpp\"","\"isvalid.hpp\"","\"josuttis\"},","\"lessresult.hpp\"","\"list\"});","\"lucas\";","\"max1.hpp\"","\"min.hpp\"","\"monkeys\",","\"my\",","\"myclass.hpp\"","\"myfirst.hpp\"","\"new\",","\"no","\"nontemplate\";","\"objectcounter.hpp\"","\"on\";","\"ordinary\"","\"out","\"removeconst.hpp\"","\"removevolatile.hpp\"","\"rparam.hpp\"","\"rparamcls.hpp\"","\"sarray1.hpp\"","\"sarray2.hpp\"","\"sarrayops1.hpp\"","\"sarrayops2.hpp\"","\"say\",","\"sname\";","\"specialmemtmpl3.hpp\"","\"sqrt1.hpp\"","\"stack1.hpp\"","\"stack3.hpp\"","\"stack9.hpp\"","\"stackauto.hpp\"","\"stacknontype.hpp\"","\"statichier.hpp\"","\"sumpolicy1.hpp\"","\"sumpolicy2.hpp\"","\"template\";","\"templates\"","\"times\",","\"tracer.hpp\"","\"true\"","\"tupleelt1.hpp\"","\"tuplestorage3.hpp\"","\"unsigned\");","\"vandevoorde\"},","\"variant.hpp\"","\"world\"};","#1","#1,","#10","#11","#2","#2,","#2a","#2b","#3","#3,","#4","#5","#6","#7","#8","#9","#defin","#endif","#ifndef","#includ","#undef","&","&&","&&)","&&;","&&求值为true","&(*a)[0];","&(*b)[0];","&(*lhs)","&(*rhs);","&;","&a1[0];","&a2);","&c,","&f;","&func);","&input[9]+1);","&node::left;","&node::right;","&person::firstname),","&person::lastname),","&s1.x;","&s2);","&x::m;","&x;","&y);","'.'","'0'","'0')","'1',","'a'","'b');","'b')时，可能找不到最佳匹配的函数。","'b':","'c',","'c';","'e',","'i',","'o',","'u',","'x':","(","(!source.empty())","(!tmp.empty())","(\"hello\",","(#2","(#4","(#6","(&)[20]);","(&)[20]类型，实参类型为int[20]，形参类型为t，因此t被推导为int[20]。","(&)[4]","(&a3)[42],","(&arg1)[l1],","(&arg2)[l2])","(&arr)[n])","(&array)[n])","(&orig!=this)","(&x0)[],","((","((arg","((int*)nullptr);","((p%i)","((s1","()","());","())>*);","())>>","();","(*)(a))","(*)(args...);","(*)(args...,","(*)(const","(*f)(int))","(*funcptr)(vector","(*iter).*member;","(*pf)(char,","(...","(...)","(1.0,","(10","(42,77),","(7.5,","(a","(a1","(access","(all","(also","(an","(and","(arg","(args...","(arr[1])","(array","(array*","(assum","(auto","(auto&","(base","(becaus","(beg","(best)","(bi","(c","(c&","(c)","(c*","(call","(can’t","(char","(coll.begin(),","(coll[2],","(coll[idx]...);","(comparearrays(pa,","(const","(constructor)","(convert","(copiednoncopyable)","(count","(current","(custom","(decay","(default:","(deriv","(disabl","(double*)nullptr)可以同时匹配两个可变参数模板，参数列表分别为(a1)和(a2*)，显然参数列表1可以代换为参数列表2，但是反过来不能，也就是得到参数列表2的函数模板更为特化","(double,","(either","(element.first","(empty())","(equival","(even","(f1","(field.is())","(foo,","(for","(full","(generally,","(geoobj","(geoobj1","(getderived().getdiscriminator()","(hopefulli","(i);","(i.e.","(i>0)","(if","(ignor","(in","(includ","(insert","(instead","(int","(int)","(int*)nullptr的类型是int*，可以匹配f(int*)，也可以匹配f(int*)，而f(t*)相对于f(t)则是更为特化的版本（具体规则见16.2.3），所以将匹配f(t*)","(int***","(intention","(isfundat::value)","(iter","(iterator&","(iteratorfacad","(last)","(list","(lo+hi+1)/2;","(lvalu","(machine*","(matrix*","(max(a,b),","(may","(midsquar","(ml,","(modifi","(myclass1","(myint","(n","(n::valu","(n::x*","(n_creat","(no","(noncopy","(noncopyable&&)","(np","(num,","(objectcount","(op1","(op1.size()==0","(or","(other.bridge)","(overloaded)","(p%2","(p%2!=0);","(p%d","(p%d!=0)","(p==2)","(person","(po","(pointer,","(pos=coll.begin();","(print","(prvalue)","(rare)","(refer","(rep","(s","(s)，firstarg值为\"world\"，args为空，types也为空","(sarray","(see","(sinc","(sizeof(t)","(sizeof...(tail)","(source.begin(),","(srct","(stack","(start","(std::array","(std::bitset","(std::is_same::valu","(std::meta::info","(std::ostream&","(std::ostream&,","(std::pair,","(std::size_t","(std::size_t)","(std::size_t);","(std::size_typ","(std::string","(std::string&&","(std::vector","(still)","(substitut","(t","(t&","(t&&","(t&&)","(t(&)[n])","(t(&a)[n],","(t)","(t*","(t*&,","(t*)","(t...","(t1","(t1&","(t1&&","(t1);","(t1,","(t2","(t2::*)(t3*));","(take","(that","(there","(thi","(to","(trait()","(ts*...)","(ts...)","(typenam","(unlik","(unsign","(v.is())","(v.templat","(v2.is())","(variant","(variant&&","(variant.templ","(variantchoice::destroy()","(void)(t.size()),","(void*)nullptr;","(which","(with","(x","(x&","(x&&","(x&)","(x,","(x1","(x::*p)(typenam","(x[idx]*y[idx])。","(y","(“stealing”)",")","))",")))",");","){};","*","*()","*=","*>(this)","*a","*b","*b;","*beg);","*beg;","*cp","*current);","*getderived().templ","*p","*pos++;","*pos;","*q","*start;","*static_cast(this);","*thi","*this;","*和std::string","*，args中包含s，types中包含std::str","+","++()","++(int)","++beg;","++count;","++current;","++i)","++i;","++iter;","++manager::counter;","++n_created;","++numcopies;","++pos)","++start;","++x,","++x;","+=","+=(difference_typ",",",",求值为void()","...","...)","...),","...);",".templat","/","//","//input","/usr/include/c++/7/bits/char_traits.h:39,","/usr/include/c++/7/bits/hashtable.h:35:0,","/usr/include/c++/7/bits/hashtable_policy.h:","/usr/include/c++/7/bits/hashtable_policy.h:87:34:","/usr/include/c++/7/bits/move.h:54:0,","/usr/include/c++/7/bits/predefined_ops.h:","/usr/include/c++/7/bits/predefined_ops.h:283:11:","/usr/include/c++/7/bits/stl_algo.h:104:42:","/usr/include/c++/7/bits/stl_algo.h:161:23:","/usr/include/c++/7/bits/stl_algo.h:3932:28:","/usr/include/c++/7/bits/stl_algobase.h:64,","/usr/include/c++/7/bits/stl_algobase.h:71:0,","/usr/include/c++/7/bits/stl_pair.h:59,","/usr/include/c++/7/bits/unordered_set.h:","/usr/include/c++/7/bits/unordered_set.h:105:45:","/usr/include/c++/7/bits/unordered_set.h:106:47:","/usr/include/c++/7/bits/unordered_set.h:107:43:","/usr/include/c++/7/bits/unordered_set.h:108:46:","/usr/include/c++/7/bits/unordered_set.h:109:51:","/usr/include/c++/7/bits/unordered_set.h:114:45:","/usr/include/c++/7/bits/unordered_set.h:115:50:","/usr/include/c++/7/bits/unordered_set.h:116:47:","/usr/include/c++/7/bits/unordered_set.h:117:52:","/usr/include/c++/7/bits/unordered_set.h:118:46:","/usr/include/c++/7/bits/unordered_set.h:119:51:","/usr/include/c++/7/bits/unordered_set.h:120:51:","/usr/include/c++/7/bits/unordered_set.h:121:57:","/usr/include/c++/7/bits/unordered_set.h:122:47:","/usr/include/c++/7/bits/unordered_set.h:123:52:","/usr/include/c++/7/bits/unordered_set.h:282:7:","/usr/include/c++/7/bits/unordered_set.h:375:2:","/usr/include/c++/7/bits/unordered_set.h:419:7:","/usr/include/c++/7/bits/unordered_set.h:423:7:","/usr/include/c++/7/bits/unordered_set.h:478:7:","/usr/include/c++/7/bits/unordered_set.h:679:7:","/usr/include/c++/7/bits/unordered_set.h:683:7:","/usr/include/c++/7/bits/unordered_set.h:98:63:","/usr/include/c++/7/string:40,","/usr/include/c++/7/type_traits:","/usr/include/c++/7/type_traits:143:12:","/usr/include/c++/7/type_traits:154:31:","/usr/include/c++/7/unordered_set:47,","/usr/include/c++/7/unordered_set:48:0,","0","0)","0);","0,","0.0)有两个参数，且没有指针类型，所以只能匹配f<>(ts...)","0.0;","0815_b7;","0;","0b","0x","0x,","0x7f},","0xff00_b7;","0的类型是int，显然只能匹配f(int)","1","1)","1)...);","1);","1)>*);","1,","1...","1...);","1.1","1.1.1","1.1.2","1.1.3","1.2","1.2*x","1.2*x返回array,","1.2;","1.3","1.3.1","1.3.2","1.3.3","1.4","1.5","1.6","1.6.1","1.6.2","1.6.3","1.7","1/3","1/3000","10","10.1","10.2","10.3","10.3.1","10.4","10.5","10.6","100;","108","10;","11","11,","11.1","11.1.1","11.1.2","11.1.3","11.2","11.2.1","11.2.2","11.2.3","11.4","11.5","11.6","11.7","12","12.1","12.1.1","12.1.2","12.1.3","12.2","12.2.1","12.2.2","12.2.3","12.2.4","12.2.5","12.3","12.3.1","12.3.2","12.3.3","12.3.4","12.3.5","12.4","12.4.1","12.4.2","12.4.3","12.4.4","12.4.5","12.4.6","12.5","12.5.1","12.5.2","12.5.3","12.6","120","12;","13","13,","13.1","13.2","13.2.1","13.2.2","13.2.4","13.3","13.3.1","13.3.2","13.3.3","13.3.4","13.3.5","13.3.6","13.3.7","13.4","13.4.1","13.4.2","13.5","14","14.1","14.2","14.2.1","14.2.2","14.3","14.3.1","14.3.2","14.3.3","14.4","14.4.1","14.4.2","14.4.3","14.5","14.5.1","14.5.2","14.6","14.7","14.8","15","15.1","15.10","15.10.1","15.10.2","15.10.3","15.10.4","15.10.5","15.10.6","15.11","15.12","15.12.1","15.12.2","15.12.3","15.13","15.2","15.3","15.4","15.5","15.5.1","15.6","15.6.1","15.6.2","15.6.3","15.6.4","15.7","15.7.1","15.8","15.8.1","15.8.2","15.8.3","15.8.4","15.9","15};","16","16.1","16.1.1","16.1.2","16.2","16.2.1","16.2.2","16.2.3","16.2.4","16.2.5","16.3","16.3.1","16.3.2","16.3.3","16.3.4","16.4","16.5","16.6","16;","17","17,","17.1","17.10","17.11","17.2","17.3","17.4","17.5","17.6","17.7","17.8","17.9","18","18.1","18.2","18.3","18.4","18.5","18.6","18.7","19","19.1","19.1.1","19.1.2","19.1.3","19.10","19.11","19.2","19.2.1","19.2.2","19.2.3","19.2.4","19.3","19.3.1","19.3.2","19.3.3","19.3.4","19.3.4节中的traits/plus2.hpp解决了t1和t2需要默认构造才能相加求和的问题，但是还存在+未定义的问题，例如对于如下代码：","19.4","19.4.1","19.4.2","19.4.3","19.4.4","19.5","19.6","19.6.1","19.6.2","19.6.3","19.6.4","19.7","19.7.1","19.7.2","19.7.3","19.8","19.8.1","19.8.2","19.8.3","19.8.4","19.8.5","19.8.5节中的判断枚举类型的模板不太容易直接实现，类似的还有标准库中的std::is_union模板，为此编译器提供了一些支持。","19.9","19.9.1","197).","1994","1:","1;","1>","1>::pri)","1];","1st","2","2*p;","2,","2.0);","2.1","2.1.1","2.1.2","2.10","2.11","2.2","2.2f,","2.3","2.3.1","2.4","2.5","2.5,","2.6","2.7","2.8","2.9","2/3","20","20.1","20.2","20.3","20.3.1","20.3.2","20.3.3","20.3.4","20.4","20.4.1","20.4.2","20.5","20.6","20.7","21","21.1","21.1.1","21.1.2","21.2","21.2.1","21.2.2","21.2.3","21.3","21.3.1","21.3.2","21.4","21.5","21:","22","22.1","22.2","22.3","22.4","22.5","22.6","22.7","22:","23","23.1","23.1.1","23.1.2","23.1.3","23.1.4","23.2","23.3","23.3.1","23.4","23.5","23.6","23.7","24","24.1","24.2","24.2.1","24.2.2","24.2.3","24.2.4","24.2.5","24.2.6","24.2.7","24.3","24.3.1","24.4","24.5","24.6","25","25.1","25.1.1","25.1.2","25.2","25.2.1","25.2.5","25.3","25.3.1","25.3.1、25.3.2、25.3.3中没有给出别名模板，配套代码中也缺少省略的内容，完整的反转算法如下：","25.3.2","25.3.3","25.3.4","25.3.5","25.3.6","25.4","25.5","25.5.1","25.5.2","25.6","25.7","26","26.1","26.2","26.3","26.3中的is()和get()可以用来查询和提取可识别联合体中的类型，但是这将会导致冗长的判断语句，例如打印可识别联合体：","26.4","26.4.1","26.4.2","26.4.3","26.5","26.5.1","26.5.2","26.6","26.7","26:","27","27.1","27.2","27.2.1","27.2.2","27.2.3","27.2.4","27.2.5","27.3","27.4","28","28.1","28.2","28.3","28.4","28.5","28.6","2:","2;","2e","2nd","2});","3","3);","3,","3.0);","3.0;","3.1","3.14,","3.2","3.3","3.4","3.4);","3.5","33","35)","3;","3x3","4","4)>","4)>::type","4)匹配三参数版本，因为7.2默认为double类型，而long","4,","4.0;","4.1","4.1.1","4.1.2","4.1.3","4.2","4.3","4.4","4.4.1","4.4.2","4.4.3","4.4.4","4.4.5","4.5","40","400u;","41;","42","42)","42);","42,","42.7);","42;","42});","42};","44.3);","44.3,","4:","4;","4的本意是通过一系列的值初始化元组，5的本意是从其它的元组初始化，所以应该在两个模板构造函数中添加std::enable_if来保证参数包的大小是相同的：","5","5);","5)包含三个参数：funcobj、3和5。如果解析为函数调用运算符，则后两个参数都需要进行标准转换；而如果解析为functype类型的函数指针，则需要将funcobj隐式转换为函数指针类型——二者对比没有更为匹配的重载函数。","5,","5.1","5.2","5.3","5.4","5.5","5.5.1","5.5.2","5.6","5.7","5.8","5});","6","6,","6.1","6.2","6.3","6.4","6.5","6.6","627","68);","6;","7","7,","7.1","7.2","7.2)匹配两参数版本，因为三参数版本中的rt没有默认模板参数，无法推导其类型","7.2)无法匹配","7.2.1","7.2.2","7.2.3","7.3","7.4","7.4.1","7.5","7.5,","7.6","7.7","7.7)","7.7);","77;","7;","8","8,","8.1","8.2","8.3","8.4","8.4.1","8.5","8.6","8;","9","9%2!=0","9%3!=0","9%4!=0","9,","9.1","9.1.1","9.1.2","9.2","9.3","9.4","9.5","9.6","9});",":","::begin(a);","::begin(v);","::c","::error()","::feed()","::feed(creator)","::first:","::info())\\n\";","::live()","::max('a',","::max(1.0,","::max(4,","::max(7,","::max(7.2,","::max(s1,","::max<>(7,","::msg())\\n\";","::multiply(double*);","::multiply(int)","::multiply(int);","::multiply(void*);","::numcopi","::size:","::type).name()","::valu","::value_type:","::x",":中可以作为隐式转换，称为特定语境下的类型转换（contextu",";","=","==","=>",">",">()",">(nullptr)",">)",">*",">*取出二叉树中指定节点的例子：",">::c",">::c>::c)",">::type",">::type;",">::valu",">;",">=",">>>;",">]’",">class",">clone();",">data",">data;",">decltype(applyimpl(f,",">decltype(f(get(t)...))",">equals(f2.bridge);",">exchangewith(b);",">foo();",">functor);",">functor;",">get();",">getdiscriminator()",">i",">invoke(std::forward(args)...);",">left",">mem;",">next;",">right",">setdiscriminator(0);",">size();",">templat",">value;",">~t();",">’",">’:",">，则就是受限名称","?","[","[&values](int","[0]","[10]和char","[]","[](auto","[](auto&&...","[](difference_typ","[](std::string","[b,","[i]","[stepanov","[with","[x,","\\","\\n\";","^","^~~~~~","^~~~~~~","^~~~~~~~","^~~~~~~~~","^~~~~~~~~~","^~~~~~~~~~~","^~~~~~~~~~~~~","^~~~~~~~~~~~~~","^~~~~~~~~~~~~~~","^~~~~~~~~~~~~~~~","^~~~~~~~~~~~~~~~~~~~","__args)","__bool_const","__gnu_cxx::__ops::_iter_pr","__gnu_cxx::__ops::_iter_pred::operator()(_iterator)","__l)","__uset_hasht","__x)","_b7","_b7()","_c()","_hashtable::allocator_typ","_hashtable::const_iter","_hashtable::const_local_iter","_hashtable::const_point","_hashtable::const_refer","_hashtable::difference_typ","_hashtable::hash","_hashtable::iter","_hashtable::key_equ","_hashtable::key_typ","_hashtable::local_iter","_hashtable::point","_hashtable::refer","_hashtable::size_typ","_hashtable::value_typ","_hashtable;","_iiter","_iiter,","_inputiter","_inputiterator,","_iter","_iterator,","_predic","_predicate)","_predicate,","a()","a(b)","a)","a*3","a,","a,b,c,d","a.f();","a1","a1(a),","a1,","a1;","a1[0]","a1[7],","a1[a2[idx]];","a2","a2(b)","a2)","a2*)，因此没有办法将参数列表1代换为参数列表2，也没有办法将参数列表2代换为参数列表1，所以两个函数模板之间不存在偏序关系，重载解析过程将会失败。","a2.size();","a2;","a2[0]","a2[],","a;","a;”","a[10];","a[42];","a_add","a_add,array>,","a_add<>和a_mult<>是不能出现在表达式的左边的，因为其中的下标运算符返回的是过期值，但是某些表达式模板应该是可以返回左值的，例如a_subscript<>：","a_add<>和a_mult<>的模板参数op1和op2既可以是数组，也可以是数组的运算结果，书中为了统一，定义了新的数组表示类模板array<>，其中仍然使用sarray<>来存储数据：","a_mult","a_mult,","a_scalar","a_scalar::operator[]返回s只是为了方便。","a_scalar;","a_subscript","a_trait","a_traits::exprref","a_traits>","above,","absolut","abstract","accept","access","access:","accord","account)","acct","accum","accum()","accum_hpp","accumul","accumulate,","accumulate>::valu","accumulatet","accumulatet,","accumulatet::type;","accumulatet;","accumulationtrait","accumulationtraits::acct;","accumulationtraits::zero;","accumulationtraits;","accumulationtraits>","achiev","activate(indirectfunctor","actual","ad","add","add_rvalue_reference_t","adda(...);","adda(t","addab(array","addb","addb(...);","addb(t","addconst","addconstt","addconstt::type;","addit","addlvaluerefer","addlvaluereferencet","addlvaluereferencet::type;","addon","addr]","address","addressof(t&","addresulta","addresultb","addrvaluerefer","addrvaluereferencet","addrvaluereferencet::type;","addspac","addspace(t","addvalu","addvalue);","adl!","adl和显示模板实参","advanc","advance(iterator&","advance;","advanceiter()也可以借助类模板实现：","advanceiter(inputiterator&","advanceiter(iterator&","advanceiter(randomaccessiterator&","advanceiterimpl(iterator&","advanceiterimpl(x,","against","aggregates）","algorithm","algorithms.","alia","alignas(types...)","alloc","alloc()","allocate();","allocator>","allocator_type;","allocchunk","allow","allowed!","alreadi","altern","alternative,","although","alway","always,","ambigu","ambiguity!","ambiguous:","angl","anonymous;","anoth","another,","any)","any):","appear","append","appendix","appli","applic","apply(f","apply(tupl","apply,","apply.","apply;","apply>","applyimpl(f","applyimpl(f,","approach","arbitrari","areequal(a,","areequal(array","aren’t","arg","arg)","arg,","arg1","arg1,","arg1;","arg2","arg2)","arg2;","arglist","arglist::v","args&&...","args)","args...","args...);","args...,","args:","args为转发引用。当以typet类型或者typet类型的临时对象调用isdefaultconstructible时，推导结果为typet和typet。由于上述return语句的最后是{}，所以isdefaultconstructible返回的将是isvalidimpl<>模板的返回类型创建的临时对象，也就是std::true_type或者std::false_type类型的临时对象。","args称为函数参数包（funct","argtyp","argument","argument)","argument,","argument:","arguments,","arguments.","arguments:","argument）：代换模板形参的实际参数，也就是实例化模板时<>中的参数，能够在编译时计算出的值","arr","arr()","arr1({1,","arr1({10u,","arr2(array)","arr2({\"hello\",","arr2({10,","arr<>","arr[0]","arr[10];","arr[42];","arr[4];","arr[];","arr[n];","array","array&","array(array","array(std::initializer_list)","array(t,","array*","array,","array,r2>>","array,r2>>(a_mult,r2>(a_scalar(s),","array:","array::iter","array::type>","array;","array>","array>(a_add(a.rep(),b.rep()));","array>(a_mult(a.rep(),","array>>","array[i]","arraya","arraya,","arrayb)","arrayb);","arrayb;","arrays,","arrays:","arr{};","as:","asderived()","asderived().dereference();","asderived().increment();","asderived();","assert","assert(!elems.empty());","assert(a.size()==b.size());","assert(c","assert(is());","assert(numelem","assert(size()==b.size());","assert(size()==orig.size());","assign","assignments()","associ","assum","at::acct","at::zero();","author","auto","auto&","auto&&","auto*","auto::*pm2","automat","auto或者decltype(auto)","auto或者decltype(auto)类型的变量，以及返回类型为auto的函数模板","auto推导的特殊情况","auto类型的非类型模板参数","aux(to)","aux(to);","avail","available.","averag","avoid","away","away):","a{42,45,77}，enable_if_t","a和b同时匹配两个推导指引（类型分别为tuple>和tuple），但是第二个更匹配，所以类型为tupl","b","b(x);","b)","b);","b*2000","b,","b.1","b.1.1","b.2","b.2.1","b.3","b.4","b.rep()));","b::i","b;","b[42];","b[idx]会由于b[idx]的递归而最终展开为(1.2*x[idx])","back","back:","back;","backt;","badstr","badstring(char","bar()","bar();","bar(tupl","base","base&","base()","base(b),","base*","base::*","base::foo()","base;","base_member_pair_hpp","basememberpair","bases...","bases::operator()...;","bases::operator()...引入了各个基类中的调用运算符()。","baset","basi","basic","basic_str","basic_string;","basics/addspace.hpp","basics/addvalue.hpp","basics/arrays.cpp","basics/arrays.hpp","basics/boolstring.hpp","basics/boolstringgetbool.hpp","basics/cref.cpp","basics/errornovel1.cpp","basics/errornovel2.cpp","basics/foldtraverse.cpp","basics/foreach.cpp","basics/foreach.hpp","basics/foreachinvoke.cpp","basics/foreachinvoke.hpp","basics/invoke.hpp","basics/invokeret.hpp","basics/isprime.hpp","basics/isprime11.hpp","basics/isprime14.hpp","basics/len1.hpp","basics/len2.hpp","basics/lessarray.hpp","basics/lessstring.hpp","basics/max1.cpp","basics/max1.hpp","basics/max2.cpp","basics/max3ref.cpp","basics/max3val.cpp","basics/max4.cpp","basics/maxauto.hpp","basics/maxcommon.hpp","basics/maxconstexpr.hpp","basics/maxdecltype.hpp","basics/maxdecltypedecay.hpp","basics/maxdefault1.hpp","basics/maxdefault3.hpp","basics/maxdefault4.hpp","basics/maxdefaultdeclval.hpp","basics/message.cpp","basics/move1.cpp","basics/move2.cpp","basics/myfirst.cpp","basics/myfirst.hpp","basics/myfirst2.hpp","basics/myfirstmain.cpp","basics/printcoll.hpp","basics/referror1.cpp","basics/referror2.cpp","basics/specialmemtmpl1.cpp","basics/specialmemtmpl2.hpp","basics/specialmemtmpl3.cpp","basics/specialmemtmpl3.hpp","basics/stack1.hpp","basics/stack1test.cpp","basics/stack2.hpp","basics/stack3.hpp","basics/stack3test.cpp","basics/stack5assign.hpp","basics/stack5decl.hpp","basics/stack6assign.hpp","basics/stack6decl.hpp","basics/stack7assign.hpp","basics/stack7decl.hpp","basics/stack8decl.hpp","basics/stack9.hpp","basics/stack9test.cpp","basics/stackauto.cpp","basics/stackauto.hpp","basics/stacknontype.cpp","basics/stacknontype.hpp","basics/stackpartspec.hpp","basics/tmplparamref.cpp","basics/varprint1.hpp","basics/varprint2.hpp","basics/varusing.cpp","bc;","be","becom","befor","before)","beg,","begin","begin()","begin(container&","begin(t","behavior","below)","best","best>;","bestmatchinset","bestmatchinset<>的功能为找到最匹配的类型，这可以借助函数的重载机制：","bestmatchinsett","bestmatchinsett::type;","better","better.","between","beware:","bi;","bidirect","bidirectional,","bidirectional_iterator_tag","bigint","bigint;","bigint{0};","bignum","bignum(doubl","bignum(long","bignum(std::str","binari","bind","bindings）","bizarre(t&&,","bizarre(val,","bi{true,","blue","blue;","bn1(100103);","bn1;","bn2(\"7057103224.095764\");","bodi","body)","bool","bool()","bool(_m_pred(*__it));","bool:","bool>,","bool_const","bool_constant<>","boolconst","boolconstant;","boolstr","boolstring::get()","boolstring::getvalue<>()","boom;","both","bound","bounds):","box;","brace","brackets,","branch","breadslic","breadslicer>","break;","bridg","bridge(nullptr)","bridge(other.bridge)","bridge(std::forward(f));","bridge/forupto1.cpp","bridge/forupto2.hpp","bridge/forupto3.hpp","bridge/forupto4.cpp","bridge/functionptr","bridge/functionptr.hpp","bridge/functorbridge.hpp","bridge/isequalitycomparable.hpp","bridge/specificfunctorbridge.hpp","bridge/tryequals.hpp","bridge;","bs)","buffer","buffer;","buffer[sizeof(largestt)];","built","bxt","bxt::mystery;","bxt::templat","by:","byte","bytes[sizeof(t)];","c","c&","c()","c(c","c)","c);","c*","c++","c++,","c++03","c++11","c++11中引入了移动语义","c++11后的值类型","c++11引入了sizeof...运算符（没错就是包含三个点）来计算模板参数包或者函数参数包的大小：","c++11引入的static_cast关键字可以在编译时进行检查，例如可以使用下面的类型特征模板检查类型是否可以解引用：","c++14","c++14)","c++14),","c++14开始支持变量模板","c++14开始支持变量模板：","c++17","c++17)","c++17,","c++17.","c++17:","c++17之前要求模板的模板实参要完全和模板的模板实参匹配，不能有多余的默认模板参数，但是c++17中取消了这个限制：","c++17使用带_v后缀的变量模板来简化标准库中产生布尔变量的型别模板，例如：","c++17开始支持折叠表达式，即可以使用二元运算符作用于参数包中所有的参数：","c++17引入了推导指引，用来推导类模板参数：","c++17引入了结构化绑定，用于以下三种情形：","c++17引入了编译时if语句来实现模板的选择，回顾第4章中的print()模板，使用编译时if的改写版本如下：","c++17支持类模板参数推导","c++17支持编译时if","c++98","c++:","c++中有两种名称分类的方式：","c++中的可调用对象类型（callabl","c++名称分类","c++头文件编译的很慢，预编译头文件技术就是提取公共头文件提前编译好。","c++支持3种模板形参：","c++支持c风格数组和字符串的模板，参见5.4","c++支持四种类型的模板，可以声明在命名空间中，具体为：","c++标准中针对变量模板偏特化还有很多问题没有规定，取决于编译器的实现。书中只有两个例子：","c++标准允许在解析模板时就报错，而不必等到两阶段实例化时，例如下面的代码在解析时就能发现错误：","c++标准库提供了一些对类型进行操作的模板，可以修改类型：","c++标准库设置了如下的推导指引：","c++标准要求模板定义要出现在所有特化和实例化之前，这也就意味着一般要将模板定义在头文件中。","c++的复杂之处在于源程序的解析是上下文相关的，例如在c++11之前，>>总是会被解释为右移运算符，除非在其中加一个空格：","c++编译器只在需要获取类大小或者访问类成员时才会对类模板进行实例化：","c++编译器只实例化需要用到的模板代码。","c++编译器在检查模板定义时，总是假设为最好的情况：","c+1;","c,","c.1","c.2","c.2.1","c.2.2","c.3","c.3.1","c.3.2","c.3.3","c.3.4","c.3.5","c.3.6","c.abs();","c.begin();","c.f();","c1(22,","c1,","c1.getname()","c10(\"hi\",\"my\",","c11(22,","c12(\"hi\",\"my\");","c1;","c2(22,","c2)","c2.getname();","c2;","c3(\"hi\",","c3;","c4;","c5(\"hi\");","c5;","c6;","c7;","c::f()","c;","c<>","c>*","call","call(callable&&","call:","callabl","candid","candidate.","candidate:","captur","case","case)","case,","case1","case2","case:","case;","catch","categori","category;","caus","center","center_of_gravity()","chang","chapter","char","char&","char)","char)，因此t可以被推导为char，同时pf为f的地址。","char*","char*]’:","char*，所以会调用非模板的max()，而该函数返回值会创建一个临时变量，且三参数版本的max()又返回了该临时变量的引用，这就导致main()中会出现悬垂引用。原文：","char,","char;","char>::value;","charact","characterist","chars)","chars{cs...};","check","check(bool);","check(m);","check(void*);","check)","check,","choos","circl","circle::draw()","clang:","clarity.","class","class,","class;","classes:","classt","class”?）","class）有时指类模板，有时指类模板实例化后得到的类","clear","clear(a);","clear(p);","clearli","client","clone()","clone()接口用来实现拷贝，invoke()接口用来实现调用，所以functionptr<>中的拷贝构造和调用就可以像下面这样实现：","cmplx)","code","code.","code;","coll","coll)","coll,","coll.end())","coll.end(),","coll.push_back(&c);","coll.push_back(&l);","coll.push_back(l);","coll1;","coll2;","coll:","coll;","coll[0],","coll[3])","collaps","collect","color","combin","combine()","combine(char&,","combine(char,","combine(int,","combine(t1,","combine<>(int&,","combine<>(long,","come","comma","comment;","common","commonprocess","commontyp","commontypet","commontypet,","commontypet::type;","compar","compare,","compare>","compare>,","compare>::templ","compare>>::type;","compare>并不是模板，所以需要再次引用嵌入的类模板apply<>，同时提示编译器apply<>是模板。","comparison","comparisons()","compil","complet","complete,","complex","compos","compose(tensor,","comput","comrad","con","concept","conceptu","concept是指模板实参类型所需要支持的接口操作：","concret","cond","condit","condnul","condnull::valu","condnull::value;","conflict","cons;","cons>>>;","consequence:","consid","considered).","considered,","consist","const","const\");","const&","const&&","const&&，折叠后模板构造函数的参数类型为c","const&&，比移动构造函数更为匹配","const&)","const&);","const&)传递value时，就需要为value分配地址了，value不再是编译期间的常量了。","const&)，用t初始化t2时4比5的匹配度更高，编译器将匹配构造函数4，这就导致了在构造head的过程中出现类型转换的错误。","const&,","const&...","const&...);","const&;","const&>","const&>;","const&，和拷贝构造函数一致，优先匹配非模板函数","const&，常量左值引用","const&，折叠后模板构造函数的参数类型为c","const(&)[3]","const(&a)[n],","const(&b)[m])","const*","const*)","const*);","const*)和t(int","const*)，参数列表2为(a2","const*,","const*>(this)","const:","const;","const[3]","const[4]类型中没有size_type成员，所以会匹配第一个函数模板，同时编译器不会因为第二个函数模板代换错误而报错。但是对于len(x)，由于只能匹配第二个，但是却没有size()成员，所以会触发编译时错误。","const[6]","const_iterator;","const_local_iterator;","const_pointer;","const_reference;","constant","constexpr","constexpr(isbidirectionaliterator)","constexpr(israndomaccessiterator)","constexpr(std::has_virtual_destructor_v)","constexpr(std::is_convertible_v,t>)","constexpr(std::is_integral_v)","constexpr(std::is_reference_v)","constexpr(std::is_same_v,","constexpr(std::numeric_limits::is_signed)","constexpr中的条件会被计算，如果为假，则要求以t类型为参数的undeclared()存在。","constexpr也可以用于模板，用于提示编译器这个函数的返回值可以在编译期间被计算：","constexpr也可以用在普通函数中，功能应该是只是迫使编译器在编译时计算条件表达式的结果。","constexpr使得普通函数可以在编译时进行计算","constexpr是在两阶段翻译的第二阶段中起作用的：","constr","constraint","constraint），这一类限制由于缺少特定的构造函数或者成员函数导致，第二类是语义限制，比如在要求模板实参支持运算符的语法限制下，可能就要求模板实参是具有偏序关系的。","construct","constructible)","constructible,","constructor","constructor)","constructor,","constructor1","constructors:","const、volatile修饰符","const版本的array::operator[]返回decltype(auto)的原因是a_mult::operator[]和a_add::operator[]可能返回临时量，此时推导结果为非引用类型。","const类型。对于第二条推导指引，t仍然被推导为std::string，但是由于参数类型是转发引用，还会考虑值类型（在这里是左值），根据引用折叠规则得到的参数类型为std::string&，明显更为匹配，但是这并不是我们想要的结果，所以这种情况下的推导不考虑值类型。","cons风格的类型列表","cont","cont2>","cont>","contain","container()","container(iter","container)","container.begin();","container.end())","container::iter","containers>","contend","contender,","contents.","context","context:","contexts.","contexts，包括指针、引用、数组、函数、成员指针、模板标识等）从而进行推导。原文：","context），除了下面的这些代换位置，其余都可以视为代换相关上下文，也就是sfinae规则起作用的范围：","continu","conv(bool);","conveni","convers","conversely,","conversion)","conversion），这种转换保证了左值可以当作右值使用，以及机器会执行一条装载指令。","convert","converted），而isconvertible<>是借助decltype中的函数调用判断是否可以进行转换的，所以x7中的类型转换不起作用，为此需要引入iscontextualboolt<>：","convertible,","convertible:","convertibletoboolarchetyp","coord","coord;","coordin","copi","copiednoncopy","copiednoncopyable();","copies;","copy()","copy(orig);","copy.","copyabl","copycount","copycounter()","copycounter(copycount","copycounter,","copycounter>","copycountertest()","core","core(p);","correspond","couldn't","count","count(int);","count(object);","count)","count;","counter;","cout","cp","cp;","cpand","cpinv.hpp","creat","creations()","creator","criteria","criterion","cttypelist","ctvalu","ctvalue({cs...})>{};","ctvalue,","ctvalue;","ctvalue>","ctvalue>;","current","current(current)","current,","custom","customer&)","customer&)’","customer(std::str","customereq","customerhash","customerop","customers:","cx","c{x,","c的类型为tuple,","c风格字符串和数组的处理","c风格数组和字符串的模板","c风格的字符串和数组在模板中处理起来非常麻烦，这是由传值和传引用时模板的推导规则决定的，所以最好的办法就是单独重载：","d","d!=2","d(void*);","d)","d:","d::x","d;","d=2;","danger","dangl","data","data)","data.back().second;","data.push_back(pair(key,","data:","data::copyable;","data;","data[k];","data[key];","datacopy","datalist","dblstack;","debug","debugging/hasderef.hpp","debugging/tracer.hpp","debugging/tracertest.cpp","decay","decay::type>","decay::type>(","decayt","decayt::type;","decid","decim","decimal)","decision,","decision.","declar","declaration)","declaration).","declarators;","declared)","decltype(","decltype((void)&x.first)","decltype((void)decltype(valuet(x))())","decltype((void)decltype(valuet(x))()))","decltype((void)decltype(valuet(x))())),","decltype((void)valuet(x).first)","decltype(*pos)","decltype(adda(x(),","decltype(addb(x(),","decltype(args)&&...","decltype(auto)","decltype(b","decltype(conv(!(std::declval()","decltype(declval()(declval()));","decltype(f(2))","decltype(getheight(t))","decltype(hasfirst(std::declval()));","decltype(hasless(std::declval(),","decltype(hassizetype(std::declval()));","decltype(isvalidimpl","decltype(isvalidimpl(nullptr)){};","decltype(maketuple(get(t)...))","decltype(matchoverloads::match(declval()));","decltype(maxsize);","decltype(n)","decltype(reverseimpl(t,","decltype(std::declval()","decltype(t+u)","decltype(t1()","decltype(test(nullptr))::value;","decltype(test(nullptr));","decltype(test(nullptr,","decltype(true?","decltype(v)","decltype(valuet(x)","decltype(valuet(x))::size_typ","decltype(x","decltype,","decltype中的,运算符保证了表达式的返回值为t::size_type()，这也是函数模板的返回类型，但是在此之前需要先保证表达式是合法的，也就是t.size()不会报错。","decltype可以推导变量、函数等的类型，也可以推导表达式的返回类型，此时还会带上表达式最终求值后的值类型：","decltype和sfina","declval","declval()","declval());","decrement","decrement(iterator&","deduc","deduce/aliastemplate.cpp","deduce/initlist.cpp","deduce/resulttypetmpl.cpp","deduced,","deduceelement(*pos++);","deduceelement(t&","deducepos(container.begin());","deducepos(t","deduct","deduction)","deduction;","deep","deep&","deep*","deep::f();","default","default:","default;","defaultcopy,","defaultinit,","defaultkill>","defaultpolici","defaultpolicy1;","defaultpolicy2;","defaultpolicy3;","defaultpolicy4;","defaultpolicyarg","defaultswap,","defin","define_has_member(first);","define_has_member(member)","define_has_member(size);","define_has_type(char_type);","define_has_type(memtype)","define_has_type(value_type);","definit","definition.","definition:","definition;","definitions）","delet","delete:","delete;","delete[]","demo(array*","den","denomin","denot","depend","dependent,","depth","dequestack","deref(typenam","dereference()","dereference(iter","deriv","derived&","derived::foo()","derived;","describ","desired.","dest.begin(),","destin","destroy()","destroy();","destruction).","destructions()","destructor","destructor:","details/adl.cpp","details/definitions1.hpp","details/definitions2.hpp","details/definitions3.hpp","details/fppm.cpp","details/funcoverload1.cpp","details/funcoverload1.hpp","details/funcoverload2.cpp","details/implicit.cpp","details/inject.cpp","details/lazy1.hpp","details/lazy2.cpp","details/max.cpp","details/nontmpl1.cpp","details/nontmpl2.cpp","details/tmplconstr.cpp","details/tupleoverload.cpp","details/variadicoverload.cpp","detect)","detect.","determin","dictionari","dictionary>>","did,","differ","differ:","difference_typ","difference_type;","differencetyp","differ。","digit","dimens","direct","directli","discard","discarded)","discarded).","discrimin","discriminator)","discriminator,","discriminator:","discriminator;","discriminator<>","dispatch","distanc","distance(c1,c2);","distance(geoobj&,geoobj&)","distance(geoobj1&,geoobj2&)","distance(l,c);","distance;","distinguish","divisor","doesn’t","doisprim","doisprime(p,d","doisprime::valu","doisprime::value;","done","don’t","dotproduct(std::array","dotproduct::result(a+1,b+1);","dotproductt","dotproductt::result(x.begin(),","doubl","double&","double&&","double&&);","double();","double)","double,","double;","double>","double>&)’","double>’","double}","double},","double和double不是同一类型","doublifi","doublify::longtype,","draw","draw()","drawelem","drawelems(coll);","dstt","due","dump","durat","duration(val);","duration(valuetyp","duration>(4);","duration>(7.5);","duration>(x);","duration>(y);","dure","dval","dxtm","dxtt","dynam","dynamic_cast(fb))","d{x};","d的类型为tupl","e","e)","e);","e)中的x应该是等价于x的，而不是x，所以在这种情况下禁用了推导。","e*3","e1","e1;","e2;","e3;","e;","each","earlier","easi","edit","effect","effici","elem","elem)","elem);","elem)是传引用的，所以不会发生任何类型转换，因此类模板实例化后的类型为stack。但是我们需要的类型是stack，所以需要添加一个传值类型的构造函数，并且将其移动到stack中：","elem)，那么便可以使用一个初值来实例化：","element","element);","element,","element.second;","element:","element>","elementari","elements,","elements.","elements:","elements>","elementt","elementt;","elementt>","elems(sz)","elems({elem})","elems({std::move(elem)})","elems)","elems.back();","elems.clear();","elems.empty();","elems.insert(elems.begin(),","elems.pop_back();","elems.push_back(elem);","elems.push_front(tmp.top());","elems;","elems[10];","elems[numelem","elid","elis","elision）取消了这个限制，但还是推荐大括号的写法，因为即使没有默认构造函数，还可以通过初始化列表进行初始化。原文：","ellipsi","ellipsis)","elsewher","emplace(_args&&...","employ","empti","empty()","empty,","empty:","emptyclass","emptythre","emptytoo","emptytupl","emptyvari","emptyvariant();","enabl","enable_if","enable_if.","enable_if<>","enabled,","enableif","enableif,","enableif<>一般写在函数模板的返回类型处，对于没有返回类型的函数，enableif<>可以作为默认的模板实参：","enableif>","enableif>,","enableifstr","enableift","enableift::type;","enclos","end","end(coll.end());","end)","end,","endless","ensur","entiti","entity）包括函数、成员函数、全局变量、静态数据成员，这些实体也可以是模板生成的。","enum","env)","equal","equal:","equal_range(const","equalitycompar","equalitycomparable,","equalitycomparablearchetyp","equals(functorbridg","equals(iterator&","equals(listnodeiter","equals(projectioniter","equals(t","equival","err1;","err2;","err3;","error","error)","error).","error,","error.","error:","error?:","errornovel1.cpp:11:53:","errornovel1.cpp:13:30:","errornovel1.cpp:1:","errornovel2.cpp:1:","errornovel2.cpp:22:21:","errornovel2.cpp:28:49:","errornovel2.cpp:2:","error，sfinae）”原则，foo()的模板定义就被忽略了","error，sfinae，读作sfe","erwin","etc.","evalu","evaluated:","even","eventu","exact","exactli","exampl","example(int*","example,","example.","except","exchang","exchange(p++,","exchangewith","execut","exist","expand","expans","expect","expir","explicit","explicit.","explicitli","expr_rep(rb)","expr_rep(s)","expr_rep;","express","expression:","exprref","exprtmpl/exprarray.hpp","exprtmpl/exprops1.hpp","exprtmpl/exprops1a.hpp","exprtmpl/exprops2.hpp","exprtmpl/exprops3.hpp","exprtmpl/exprscalar.hpp","exprtmpl/sarray1.cpp","exprtmpl/sarray1.hpp","exprtmpl/sarray2.cpp","exprtmpl/sarrayops1.hpp","exprtmpl/sarrayops2.hpp","extern","external();","extra","extract","f","f((int*)nullptr)可以同时匹配三个函数模板，参数列表分别为(a1*)、(a2)和(a3*)，显然参数列表2不够特化，所以接下来要比较参数列表1和参数列表3特化偏序关系。虽然可以双向代换，但是由于a3是参数包，单个参数a1不能转换为参数包，所以得到参数列表1的函数模板更为特化——这条规则也意味着普通函数模板比可变参数函数模板更为特化","f((int*)nullptr,","f()","f();","f(*p);","f(0,","f(2);","f(42);","f(7);","f(args...)","f(array::iter","f(c","f(c);","f(char);","f(d*","f(double*);","f(e)","f(first","f(get(t)...);","f(i);","f(i,","f(innertyp","f(int","f(int&)","f(int)","f(int);","f(int*)","f(int,","f(iter","f(j);","f(long);","f(n);","f(p);","f(s);","f(s)试图将s转换为int","f(std::initializer_list)","f(std::initializer_list);","f(std::move(v));","f(t","f(t&&","f(t&)","f(t)","f(t);","f(t*)","f(t*,","f(t,","f(ts*...)","f(ts...)","f(tuple)","f(types(values)...);","f(v&&","f(v);","f(x","f(x&&)","f(x&&);","f(x&)","f(x());","f(x);","f({'a',","f({2,","f)","f);","f,","f.cpp:","f.hpp:","f.tpp:","f1","f1();","f1(4);","f1(7);","f1(double);","f1(int)","f1(int);","f1(intstack);","f1(ppp);","f1(stack);","f1(sv,","f1(t","f1(t*);","f1(t1,","f1(t2,","f1(tuple,","f1,","f1.bridg","f2","f2()","f2(b);","f2(char);","f2(dequestack);","f2(e(&)[n]);","f2(int);","f2(intstack);","f2(sv,","f2(t);","f2(true);","f2(tuple,","f2)","f2);","f2;","f3(&s::f);","f3()","f3(...);","f3(7);","f3(intstack);","f3(stack);","f3(t1","f3(x);","f:","f<>(float);","f<>(tuple)","f>","f>::type>","fact","factori","factory;","fail","failed\");","failur","failure.","fair","fallback","fallback:","fals","false)","false;","false>","false_typ","false_type,","falsetyp","falsetype)","falsetype;","fb)","feed(creator)","feed(one);","feed(two);","field","field(17);","file","file,","find","find(equalitycomparablearchetyp","find(t","findindexoft","findindexoft,","findindexoft;","fine","fine:","first","first()","first,","first.","firstarg,","firstname;","fix","float","fold","foldsum","follow","foo","foo()","foo();","foo(42);","foo(7.7);","foo(a,","foo(i);","foo(int","foo(mc1,mc2);","foo(pair","foo(s);","foo(t","foo(t&)","foo(w);","foo(wrapp","foo_cor","foo_core(mc1,mc2)","foo_core(std::forward(p1),std::forward(p2));","fooimpl(42,","fooimpl(t,","foreach","foreach(primes.begin(),","form","forth),","forupto(5,","forupto(int","forward","forward(a),","forward(b));","forward_iterator_tag","forwardcopy(f","forwardtog(0);","forwardtog(c());","forwardtog(c);","forwardtog(std::move(v));","forwardtog(t&&","forwardtog(v);","found","found!","four","fp1,","fp2)","fp2.bridge);","fppm(&x::f);","fppm(void","fraction","free","friend","friendli","front","front,","front:","front;","front>","front>();","front>;","frontt","frontt::type;","frontt;","frontt>","fstack;","full","fulli","func(int","func);","funcobj());","funcobj(3,","funcobj)","function","function(s)","function,","function.","function:","functionptr","functionptr&","functionptr()","functionptr(f&&","functionptr(functionptr","functionptr(functionptr&","functionptr(functionptr&&","functionptr(static_cast(other))","functionptr::functionptr(f&&","functionptr::functionptr(functionptr","functionptr::operator()(args...","functionptr;","functionptr<>只包含一个functorbridge<>类型的指针bridge。","functionptr<>通过任意函数对象进行构造的代码为：","functions,","functions”","functor","functor(std::forward(args)...);","functor(std::forward(functor))","functor)","functor;","functorbridg","functorbridge*","functorbridge<>实现为一个抽象基类：","functyp","functype*()","fundament","funsign","funtion","funtionptr<>的特性包括：","furthermore,","futur","f是一个非依赖型名称，编译器通过普通查找规则可以确定f<>是一个模板，而对于g，由于其定义在命名空间n中，其后的会被解析为小于号运算符，所以在第一阶段就会触发编译错误。","g","g(","g()","g();","g(...)","g(...);","g(0);","g(c","g(c&&)","g(c&&);","g(c&)","g(c&);","g(int","g(int)","g(int*)","g(int*);","g(outertypes(innertypes(innervalues)...)...);","g(p);","g(static_cast(x));","g(std::forward(val));","g(std::forward(x));","g(std::move(val));","g(std::string","g(t);","g(types...","g(val);","g(x","g(x&&)","g(x&)","g++","g++产生的编译错误如下（人间真实）：","g++的编译警告为：","g1","g1(int)","g1(x);","game","gener","general,","generated).","generation(1)","generation;","geometr","geoobj","geoobj2","get()","get()));","get(*this);","get(copies));","get(copies),","get(tupl","get(tuple&","get(x);","getbufferas()","getbufferas();","getderived()","getderived().destroy();","getderived().setdiscriminator(discriminator);","getderived().templ","getderived();","getdiscriminator()","gethead()","getheight(t);","getheight(tupleelt&","getname()","getrawbuffer()","gettail()","given","global","glvalue，全称gener","gp","graviti","greaterthant,","greaterthant;","green","green,","gregor","guarantee)","guid","guide）的，没有示例代码，我根据原文的意思写代码测试了一下，编译命令为g++","h","h()","h(n::e);","h(t","h1(pair","h1(pif,","h2(pair","h2(pif,","h;","half","halv","hand","hand,","handl","handle;","hasbegint","hasbegint().begin())>>","hasderefer","hasfirst","hasfirstt","hash","hasher","hasher;","hasless","haslesst","haslesst()","hasmembert_##memb","hasmembert_##member>","hasplust","hasplust()","hassizetyp","hassizetypet","hassizetypet>","hastypet_##memtyp","hastypet_##memtype>","hasvarioust","hasvarioust().begin()),","have","head","head&","head(head),","head(other.gethead()),","head(std::forward(vhead)),","head,","head;","headelt","header.hpp:","headt;","hello_b7","hello_b7;","helper","helper:","helper;","helpers:","henc","hence,","here","here)","here,","here?","heterogen","hexadecim","hi","higher/low","hold","holder","homogen","however,","https://rayonicks.github.io/cpp","i(&input[0],","i(geoobj&)","i)","i);","i*","i,","i.advance(n);","i.decrement();","i.dereference();","i.increment();","i.size();","i;","i=0)","i=0;","i>","i[2];","i]","ic","identifi","identity;","identityt","identityt,","idraw();","ids;","idx","idx)","idx...","id）：模板名称和模板参数的结合","if,","ifthenels","ifthenelse,","ifthenelse,sqrt>,","ifthenelse::valu","ifthenelse=","ifthenelse>::value,","ifthenelse_hpp","ifthenelset","ifthenelset::max(),","ifthenelset::type;","ifthenelset::value,","ifthenelset=","ignor","ignore(*ptr);","ignore(t","il,","il.equals(ir);","ill","immedi","impact","impl.","implement","implementation/definit","impli","implic","implicit","implicit_cast","implicit_cast(","implicitli","import","important.","impress","in::templ","inclass()","includ","incomplet","increment()","increment(iterator&","index","indic","indices());","indices)","indirectfunctor","info()","info_and_storage;","inform","infot","inherit","inherit/basememberpair.hpp","inherit/countertest.cpp","inherit/ebco1.cpp","inherit/ebco2.cpp","inherit/empty.cpp","inherit/equalitycomparable.cpp","inherit/iteratorfacadeaccessskel.hpp","inherit/iteratorfacadeskel.hpp","inherit/listnode.hpp","inherit/listnodeiterator0.hpp","inherit/objectcounter.hpp","inherit/person.hpp","inherit/projectioniterator.cpp","inherit/projectioniteratorskel.hpp","inherit/virtual.cpp","inherit/wrapper.cpp","inhibit","init","init()","init();","init.hpp","initdemo()","initi","initialization）的方式来统一对类类型和内置类型进行初始化：","inject","inlin","inline)","inner","innervalues)","input","input:","input[]","input_iterator_tag","insert","insert(const","insert(initializer_list","insert(value_type&&","insertionsort","insertionsort,","insertionsort;","insertionsort<>中第一个参数是需要排序的值列表，第二个参数是比较值列表的元函数。因为不是简单的比较值列表中索引的大小，而是比较元组中具有该索引的类型的大小，因此需要将额外的参数tuple和比较函数smallerthant<>进行组合。此外由于insertionsort<>中第二个参数依然是模板（模板的模板参数），而metafunofnthelementt,","insertionsortt","insertionsortt::type;","insertionsortt;","insertsort","insertsortedt","insertsortedt,","insertsortedt::type;","insertsortedt;","inst;","instanc","instance.","instanti","instantiated.","instantiation):","instantiation,","instantiation:","instantiations:","instantiation）和未知特化类型（unknown","instantiation）指将被实参替代后的模板代码插入到源代码中的位置。","instead","instead,","inst实例化上面的类模板时，编译器将只实例化类中的成员函数声明和匿名的联合体，所以anonymous和unsafe()会报错。","int","int&","int&&","int&&;","int&);","int&,","int(&)[4]","int()","int)","int);","int*","int*)，第一个函数的第一个形参比第二个函数的第一个形参更为匹配，而第二个函数的第二个形参却比第一个函数的第二个形参更为匹配，因此这里存在模糊调用。","int**","int*}","int,","int20stack.push(7);","int20stack;","int40stack;","int:","int;","intchartupl","integ","integral\");","integral\")生效；在两阶段翻译的第二阶段，if","integral)","intent","intention","interfac","interface:","intern","internal();","interpret","interv","interval:","introduc","introduct","ints:","intstack","intstack)","intstack.push(7);","intstack1;","intstack2","intstack3","intstack;","inttripl","inttupl","intuit","int},","int，而stringstack中的size_type是int，所以程序的输出是s","invalid","invalid;","invent","invocation:","invoke(args...","invoke_result<>","ir)","is()","is())","is,","is_assignable_v","is_const::value;","is_const_v","is_copy_assignable_v","is_prim","is_prime2?p:0),i","is_prime::pri","is_same_v","is_same_v，如果u1、u2和u3的类型不同，推导就会失败，标准库通过这种方式来保证std::array中的元素具有同一类型。","is_sign","is_swappable_v","is_swappable_with_v","isarrayt","isarrayt::valu","isbidirectionaliter","isclasst","isclasst>","iscontextualbool","iscontextualboolt","iscontextualboolt::value;","isconvert","isconvertible::iterator_category,","isconvertiblehelp","isconvertiblehelper::typ","isconvertiblet","isconvertiblet::type;","isconvertiblet::value;","isconvertiblet<>","isdefaultconstruct","isdefaultconstructible(type)","isdefaultconstructiblehelp","isdefaultconstructiblehelper::typ","isdefaultconstructiblet","isdefaultconstructiblet::valu","isdefaultconstructiblet>","isdefaultconstructible是一个泛型lambda表达式，所以auto&&...","isempti","isempty::value>","isempty>","isenumt","isequalitycompar","isfirst","isfunctiont","isfunctiont::value>","isfundat","ishomogen","ishomogeneous(43,","isinputiter","islvaluereferencet","islvaluereferencet,","isnothrowmoveconstructiblet","isnothrowmoveconstructiblet()))>>","isn’t","ispointert","ispointertomembert","isprim","isprime::valu","israndomaccessiter","isreferencet","isrvaluereferencet","issam","issamet","issamet(nullptr)),","issamet::value;","issamet<>判断两个类型是否相同：","issamet{});","issign","issu","istack.push(1);","istack.push(2);","istack;","isvalid","isvalid([](auto","isvalid([](auto&&","isvalidimpl(...);","isvalidimpl(void*);","isvoidt::value>;","iter","iter(iter),","iter,","iter;","iterator&","iterator;","iterator_categori","iteratorfacad","iteratorfacade,","iteratorfacade;","iteratorfacade<>通过下面的方式调用派生类中的实现：","iteratorfacadeaccess","iteratorfacadeaccess::dereference(asderived());","iteratorfacadeaccess::equals(lhs.asderived(),","iteratorfacadeaccess::increment(asderived());","iteratorfacadeaccess;","iterators:","itself","it’","i是左值，所以t被推导为int&，根据引用折叠规则，最终p的类型为int&，而2是右值，所以t被推导为int，最终p的类型为int。综上，引用折叠规则也适用于转发引用。","j","j*","j,","j;","josutti","k","k)","k);","key)","key:","key;","key_equal;","key_type&","key_type;","kill","kind","know","known","l1,","l2))","l;","label","label(\"\")","label()","label;","labeledpoint","labeledpoint()","labeledpoint(doubl","lambda","lambda表达式","lambda表达式的捕获列表中","languag","larg","larger","largertypet","largertypet,","largestt","largesttyp","largesttype>;","largesttypeacc","largesttypeacct","largesttypeacct::type;","largesttypeacct;","largesttypet","largesttypet::type;","largesttypet;","largesttypet>","largesttypet>::type;","last","last);","lastname;","lasttype;","late:","lay","lead","leav","left","left(nullptr),","left,","left;","len","less","lessresult","lessresultimpl","lessresultimpl::value>","lessresultt","lessresultt::type;","lessthancompar","letters:","level","lhs,","lhs.asderived().equals(rhs.asderived());","lhs.gethead()","lhs.gettail()","lhs.value()","librari","library，stl）是泛型编程的典型代表。stl中定义了算法和容器，容器是类，但是算法并不是容器类的成员函数，所以它们可以被应用于各种容器，并且用迭代器的类型进行了限制，这也是concept的一种体现。","limit","line","line::draw()","linear","linkag","linkage:","linker","list","list()","list):","list.","list:","list::handl","list::head;","list::list","list::tail;","list::zero","list;","listnod","listnode*","listnodeiter","listnodeiterator(listnode*","liter","literals):","literals,","live()","lo","local","local_iterator;","log","logic","long","long();","long)","long)sizeof(s);","long,","long;","longer","longtyp","long}","long},","look","lookup","lookup_example(int","lookup，adl）规则。当一个非受限名称可能是非成员函数或者运算符时，编译器会在关联的命名空间和类中尝试查找该名称，就像是这个非受限名称被这些命名空间和类按顺序修饰变成了受限名称一样：","loop","lose","lr","lref1","lref2","lref3","lvalu","lvalue();","lvalue)","lvalue;","lvalues)","lvalues,","lvalues.","lvalue，glvalue中非xvalue的部分","lvalue，会被存储的值，包括lvalue和xvalu","m","m)","m03;","m1","m11;","m17;","m2","m;","machin","machine)","macro","made,","magic","magic*","magic;","main","main()","main()::","main()::]’","main()::]’:","main()::mycustomerhash)","main()::mycustomerhash*’","main()::mycustomerhash::operator()(const","mainclient;","make","make_n()","make_n();","make_pair","make_unsigned_t","makeindexlist","makeindexlist()))","makeindexlist());","makeindexlistt","makeindexlistt::type;","makeindexlistt>>","maketuple(0,","maketuple(get(copies),","maketuple(get(t)...);","maketuple(types&&...","makeunsignedt","makeunsignedt,","manag","mandatori","mani","manipul","manual","map","match","match()","match(...);","match(t1);","match,","match:","matched:","matches)","matches,","matchoverload","matchoverloads::match;","matchoverloads;","matchoverloads<>","matchoverloads<>通过递归的方式重载了多个match()，每个函数接受不同类型的参数。当在decltype对match()调用进行推导的过程中，就可以实现最佳匹配。个人认为实例化的过程应该为：","materi","materialization）","matrix","max","max()","max(a,","max(a,b)","max(const","max(int,int)","max(t","max3ref.cpp:","max3ref.cpp:20:26:","max3ref.cpp:30:29:","max_live()","maximum","maybeint","mc1;","mc2;","mean","meaning:","meant","mechan","meet","mem(m)","mem;","member","member&","member()","member(member)","member)","member);","member;","membert","memfunc(int","memori","messag","meta/duration.hpp","meta/durationadd.hpp","meta/pow3const.hpp","meta/pow3enum.hpp","meta/ratio.hpp","meta/ratioadd.hpp","meta/removeallextents.hpp","meta/sqrt1.cpp","meta/sqrt1.hpp","meta/sqrt2.hpp","meta/sqrtconstexpr.hpp","meta/unruh.cpp","metafun,","metafun>","metafun>::type,","metafun>::type>","metafunct","metafunofnthelementt","metafunofnthelementt,","metaprogram","metaprogramming）","metaprogramming）是在编译期间以类型作为参数产生新类型的技术，下面的是一个利用模板递归实例化技术提取变量类型的例子：","metaprogramming）是在编译期间对变量进行求值的技术。c++11引入的constexpr解决了大量需要在编译期间求值的问题，c++14开始支持复杂的控制结构，下面是一个在编译时计算平方根的例子：","metaprogramming）是在编译期间生成代码并在运行期间进行求值的技术。例如要计算向量点积，通常会将代码写为下面的样子：","mff;","mfi;","mid","mid;","middl","middle(i);","midpoint,","midsquar","mif;","millisecond","min(t","mismatch","miss","mix*","mix;","mixer","mixin","mixins()...","mixins()...,","mixins(mixins)...","mixins)","mixins...","mixins>","mk_funda_typ","mk_funda_type(bool)","mk_funda_type(char)","mk_funda_type(char16_t)","mk_funda_type(char32_t)","mk_funda_type(double)","mk_funda_type(float)","mk_funda_type(long","mk_funda_type(sign","mk_funda_type(std::nullptr_t)","mk_funda_type(t)","mk_funda_type(unsign","mk_funda_type(void)","mk_funda_type(wchar_t)","ml)","model），这会带来两个问题：","modifi","more","movabl","move","mp;","msg()","msg1.print();","msg1;","msg2.print();","msg2;","multiarray;","multipl","multipli","multiply(int)","multiply(t);","multiply(void*);","multiplyt,","multiplyt::type;","multiplyt;","multpolici","mutat","myclass","myclass1","myclass2","myclass2;","myclass::print();","myclass;","mycustomerhash","mydraw","mydraw(c);","mydraw(geoobj&)","mydraw(l);","myfirst.cpp,","myfirst_hpp","myint","myint(int","myint;","mypoint","mysort","mysteri","mystery*","mystr","mytupl","n","n();","n(n","n(n&&)","n)","n);","n)比person","n+1>>","n,","n.","n::e","n;","n]","n_assign","n_assigned;","n_compar","n_compared;","n_creat","n_created;","n_destroy","n_destroyed;","n_max_liv","n_max_live)","n_max_live;","name","name(n)","name(std::forward(n))","name)","name:","name;","names/anglebrackethack.cpp","namespac","nay）原则。","nc;","nearest","necessari","necessarili","need","needed).","needed.","nest","never","new","new(getderived().getrawbuffer())","new,","newelement>","newhead","newtail","next","next;","nfg","nil","nobodyhere(saf","noboomyet;","node","node(int","node*","node*;","node::allocate();","node;","nodeptr","node{0};","node{1};","node{2};","noexcept(declval()(declval()))>","noexcept;","nomin","non","nonconst","noncopy","noncopyable&","noncopyable()","noncopyable(noncopy","noncopyable(noncopyable&&)","nondependent;","nondependentcall()","none","nonempti","nonmodifi","nontempl","nontyp","not,","notat","note","note:","notequalitycompar","notequalitycomparable();","notes.","notes]","noth","notvirtu","now","np","np,","nth","nthelement","nthelement>","nthelementt","nthelementt,","nthelementt::type;","null","null;","null_iter","null_iterator;","null_ptr;","nullptr)","nullptr))::value;","nullptr);","nullptr,","nullptr;","nullptr_t","nullptr的类型是std::nullptr_t，也只能匹配f(std::nullptr_t)","num","num+5)","num[]","number","number:","numcopi","numelem","numelems(0)","numelems(matrix","numelems(vector","numelems;","numer","numeric_limit","n{};","o","obj)","obj.draw();","object","object(obj)","object)","object:","object;","objectcount","objectcounter()","objectcounter>","objects:","occur","octal","offset","ok","ok:","old","on","on.","onc","one;","oops:","op","op(*current);","op)","op,","op1(a),","op1.size()","op1.size()!=0","op1.size()==op2.size());","op1;","op1[idx]","op2","op2(b)","op2)","op2.elems.begin(),","op2.elems.end());","op2.size();","op2.size()==0","op2;","op2[idx];","oper","operand","operation:","operations,","operations:","operator!=","operator!=(functionptr","operator!=(iteratorfacad","operator\"\"","operator()","operator()(args...","operator()(double,","operator*","operator*()","operator+","operator+(array","operator+(dur","operator++()","operator++(int)","operator+,","operator=","operator=(f&&","operator=(functionptr","operator=(functionptr&&","operator=(initializer_list","operator==","operator==(","operator==(functionptr","operator==(iteratorfacad","operator==(tupl","operator==(tuple<>","operator[]","operator[](ctvalue)","operator[](key","operators:","optim","optimiz","optimization,","optimization，ebco）是指当同一类型的对象（也包括派生类对象）不会被分配到同一起始地址时可以不为空基类分配额外的空间。原文：","option","optional,","oracl","order","ordinari","orig)","origin","os","other)","other);","other.bridg","other.bridge;","other.current;","other.iter;","otherinternal();","otherwis","ouch;","out","out:","outer","outer::cod","outer::code;","outer::inn","outer::inner::count","outer::inner::count;","outer::inner;","outer::print()","output_iterator_tag","outr","outr(\"hi\");","outr(c);","outr(returnconststring());","outr(returnstring());","outr(s);","outr(std::move(c));","outr(std::move(s));","outr(std::string(\"hi\"));","over","overload","overload.","overload/initlist.cpp","overload/initlistctor.cpp","overload/initlistovl.cpp","overload:","overloader;","overloader通过可变参数模板实现了多重继承，同时使用us","overrid","override;","ovl(std::initializer_list)","p","p({0x7f,","p)","p);","p)匹配度更高，但是std::string却无法通过person进行构造，所以需要通过std::enable_if来禁止匹配模板函数。","p)时，两个函数模板实例化后的结果分别为t(int*,","p,","p.compare(0)","p.templat","p/2:","p1","p1(s);","p1,","p1;","p2","p2(\"tmp\");","p2)","p2);","p2)可以匹配两个版本的quickexchange()，但是第二个比第一个更为特化（具体规则见16.2.3）。","p2,","p2;","p3","p3(p1);","p3(p1)会报错，因为根据模板匹配规则，p1不是常量，所以person(str&&","p3,","p4","p4(std::move(p1));","p:","p;","pa","pack","pack).","pack.","pack1","pack2","packn","pack）。可变参数模板通过递归的方式进行实例化，例如对于下面的代码：","pack），types称为模板参数包（templ","page","pages:","pair","pair(a,b);","pair::type,","pair::type,typenam","paramet","parameter","parameter)","parameters:","parameters）","parameter）","parameter）：模板声明和定义中template后的参数","paramst","parent;","pars","parseint(char","part","partial","pass","passr","passr(\"hi\");","passr()","passr(arr);","passr(c);","passr(returnstring());","passr(s);","passr(std::move(s));","passr(std::string(\"hi\"));","passr(t&&","paths)","paths);","paths1","paths2","pattern","pattern）将接口与实现分离开。抽象类中包含一个实现类，抽象类通过该实现类提供具体的功能。可以简单理解为抽象类提供了一个功能，但是这个功能需要分若干步骤实现，实现类接口定义了每个步骤。","pattern，crtp）是指将派生类作为模板参数传递到基类中来为派生类提供一些功能，这样可以在避免使用虚函数的情况下实现多态。例如利用这种方式可以实现对象计数：","pb","pb,","pd","pd)","pdd)","pdd);","per","perfect","perfectli","perform","person","person(std::str","person(str&&","person,”","person.","pfew;","pfiie","pi","pi;","pick","pid);","pid,","piec","pif,","pi{3.1415926535897932385};","place","placement","plink;","plot(pt);","plusresult","plusresultt","plusresultt.","plusresultt::type;","pm","po","poi","point","point()","point(),","point(doubl","point(mixins...","point(x,","point.","point;","pointer","pointer)","pointer:","pointer;","pointers:","points;","polici","policies::p1,","policies::p2,","policy1_i","policy2_i","policy3_i","policy4_i","policy::accumulate(total,","policy;","policyselector","policyselector;","poly/conceptspoly.hpp","poly/conceptsreq.hpp","poly/dynahier.hpp","poly/dynapoly.cpp","poly/printmax.cpp","poly/statichier.hpp","poly/staticpoly.cpp","polygon","polymorph","pop","pop();","popback","popback(tupl","popback>","popbackt","popbackt::type;","popfront","popfront(tupl","popfront;","popfront>","popfrontt","popfrontt::type;","popfrontt;","popfrontt>","pos!=end;","pos);","pos;","posit","possibl","potenti","pow3","pow3::valu","pow3::value;","power","ppp)","practic","practice).","pre","preced","predefin","prefer","prefix","prefix,","prepar","prevent","previou","previous","previous;","pri","primari","prime","prime_print","primes.end(),","principl","print","print()","print();","print(args...)","print(args...);","print(args...)实例化为print","print(coll[idx]...);","print(firstarg);","print(std::get(t)...);","print(v);","print(vari","printbitset","printbyidx(arr,","printbyidx(t","printbyidx(t,","printcol","printdecayedtype()","printdecayedtype();","printdoubl","printdoubled(7.5,","printelem","printelementtyp","printelementtype(arr);","printelementtype(s);","printelems(coll,2,0,3);","printidx","printidx(coll);","printimpl(v","printimpl(v);","printimpl,","printint(int","printint);","printmax","printmax(c1);","printmax(c2);","printon()","printparametertype(&f);","printparametertype(void","printr","printr(returnstring());","printr(s);","printr(std::move(s));","printr(std::string(\"hi\"));","printstring(arg);","printstring(std::str","printt","printt(s);","printt(std::cref(s));","printtuple(std::ostream&","printtuple(strm,","printtypeof","printtypeof()","printtypeof(ice);","printv","printv(returnstring());","printv(s);","printv(std::move(s));","printv(std::string(\"hi\"));","prior","privat","private:","problem","proce","process","process(deriv","produc","product","program","program.”","programm","project(authors.end(),","project(iter","projectioniter","projectioniterator(iter","projectioniterator(iter,","promot","properti","protected:","provid","provided,","prvalu","prvalue();","prvalue.","prvalue，全称pur","ps;","pt;","pt[3];","ptr)","ptr;","ptr，则编译器会认为表达式的含义为t类型的静态成员subtype和ptr相乘。","public","public:","pull","push","push(std::str","push(t","push(t*);","pushback","pushback(reverse(t.gettail()),","pushback(tupl","pushback(tuple.gettail(),","pushback(tuple<>","pushback>,","pushbackrect","pushbackrect::type;","pushbackrect;","pushbackt","pushbackt,","pushbackt::type;","pushbackt;","pushbackt>,","pushfront","pushfront(tupl","pushfront,","pushfront;","pushfrontt","pushfrontt,","pushfrontt::type;","pushfrontt;","pv;","q","q*","q++);","qualifi","quickexchange(&a1,","quickexchange(&s1,","quickexchange(&x,","quickexchange(array*","quickexchange(p1,","quickexchange(t*","quintuple;","r","r(args,","r(args...","r):","r*","r1::den","r1::den;","r1::num","r2::den","r2::den;","r2::num","r;","random","random_access_iterator_tag","rang","ratio","ratio::den>;","ratio;","ratioadd","ratioaddimpl","ratioaddimpl::type;","ratios:","raw","rb)","rci","reach","read","realli","rearrang","reason,","recogn","recomput","recur","recurs","recursively,","red","red,","redeclar","ref","ref(r)","ref)","ref;","refer","reference)","reference,","reference.","reference;","reference?","references,","reference”","reference），实参可以是常量左值、非常量左值和可移动对象。即使模板函数中的typenam","reference），或者在c++17之前叫做通用引用（univers","refin","reflexpr(t);","refmem","refmem()","rel","rel;","relat","relax","reli","remain","remaind","remark","rememb","remov","removeallext","removeallextentst","removeallextentst::type;","removeconst","removeconstt","removeconstt::type;","removeconstt::type>","removecv","removecvt","removecvt::type;","removecvt<>通过removevolatilet<>移除了volatile限定，还通过继承的方式继承了removeconstt::type。","removerefer","removereferencet","removereferencet::type;","rep","repeat","replac","replicatedindexlist","replicatedindexlist());","replicatedindexlistt::type;","replicatedindexlistt;","replicatedindexlistt>","report(int","report(int&);","report(int);","report(t","report(x","repres","represent","request","requir","requires(t","resolut","resolve)","resourc","rest","rest);","rest...","rest>;","restrict","result","result(a.size());","result(asderived());","result(t*","result(t*,","result;","results[]","resulttyp","result{};","ret;","retr(t&&","rett()","return","return;","returnconststring()","returnstring();","retv(t","retv(x);","ret{std::invoke(std::forward(op),","revers","reverse(copies);","reverse(popfront(reverse(tuple)));","reverse(t);","reverse(tupl","reverse(tuple<>","reverse<>也可以用来实现popback<>（感觉有些多此一举）：","reverse>","reverse>()))","reverse>());","reverse>>;","reverseimpl()中第二个参数没有名字，因为在函数体中并不需要使用该参数，主要作用是通过该参数推导indices。如果没有该参数，则必须要通过显示实例化模板的方式显式指定。","reverseimpl()只是通过一个递减的值列表选择出元组中的元素，其核心是提取算法：","reverseimpl(t,","reverseimpl(tupl","reverset","reverset::type;","reverset;","rhs)","rhs);","rhs.asderived());","rhs.gethead()","rhs.gettail();","rhs.value()","right","right(nullptr)","right);","right;","rm1","rm1,","rm2;","rm3;","rm4;","rm5","rm5,","rm6;","root","root:","round","rparam","rparam::typ","rparam_hpp","rr","rref1","rref2","rref3","rri","rt","rule","rule）","run","runtests(t","rvalu","rvalue;","rvalues.","rvalue，包括xvalue和prvalu","rvalue，求值结果被用来初始化一个对象，或者是运算符的求值结果","s","s&","s(\"world\");","s()","s().f1();","s().f2();","s().f3();","s(argtyp","s(t","s(t)","s(typenam","s(v)","s)","s);","s)实例化为print","s)，firstarg值为\"hello\"，t为char","s)，firstarg值为7.5，t为double，args中包含\"hello\"和s，types中包含char","s*","s,","s.printon(strm);","s03[]","s1","s1,","s1.x","s11[]","s17[]","s2","s2)","s2,","s2.x","s2;","s3","s3)","s3);","s:","s::*pm","s::i","s::print()","s;","s[]","safe","same","sampl","sarray","sarray&","sarray::operator*=","sarray::operator+=","sarray>,","sarray>>>","sarray>>类型的临时对象","sarray>>类型的对象，虽然还是临时对象，但是该临时对象中是x的引用，不会带来拷贝","scalar","scalar,","scalar:","scalars:","schedule::dispatch(task*);","scope","scope)","sd依然是错误的，但是由于字符串可以被作为常量数组，所以下面的代码是合法的：","search","second","second()","second.","second;","section","see","select","select()","select();","select(t,","select(tupl","select(x*);","select(xp);","selectt::type;","selectt;","selectt>","semant","separately.","sepcialization）","sequence:","serialize(commonprocesses*);","serialize(interface*);","serialize(machine);","set","set():","set(std::forward(val));","setdiscriminator(unsign","sfina","sfinae’d","sfinae特性","sfinae规则起作用的范围就是代换相关上下文（immedi","shall","shallowcheck","shell","shell(mainclient);","shell::templ","short()","short)","short,","side。不过后来在c语言中某些被const修饰的变量也可以存在于内存或者寄存器中，但却是不可修改的。c++扩展了右值的含义，对于类的右值，其也是可以在=左边的，此时的=应该理解为重载的=运算符。","side，相应的，右值（rvalue）来源于在=右边的值，r表示right","sight","signal","signific","similarli","simplifi","singl","size","size()","size_typ","size_type:","size_type;","sizeof(best)),","sizeof(c);","sizeof(empty):","sizeof(emptyclass):","sizeof(emptythree):","sizeof(emptytoo):","sizeof(rest)),","sizeof(t)","sizeof(t);","sizeof(u),","sizeof(void*);","sizeof,","sizeof...","sizeof...(args)==0","sizeof...(args)>0","sizeof...(u))>;","sizeof...(values)","sizeof...运算符可以求出参数包中参数数量","skip","smaller","smallerth","smallestintt","solut","somecompilerspecificnam","somecompilerspecificname();","somecompilerspecificnamex","somecompilerspecificnamex();","somecompilerspecificnamez","somecompilerspecificnamez();","sometim","soon","sort","sort(tupl","sorted):","sortedinteg","sortedtyp","sorttrac","sorttracer'","sourc","source)","source);","source.end(),","source.visit([&](auto","space","speaking,","spec.","specfb","special","specialization,","specialization.","specialization:","specializations.","specialization）","specialization）。类模板、函数模板、变量模板和成员模板可以被全特化。","specialization）是为某种特定类型设计的算法，通常比泛型算法性能高。在定义了特化的算法后，一般只需借助重载解析规则便可以自动调用特化的算法，例如：","specialization）是指代换模板中的一部分参数得到一个新的模板，原始模板称为主模板。偏特化的限制如下：","specialization）：","specialize?","specif","specifi","specificfunctorbridg","specificfunctorbridge(functor);","specificfunctorbridge(functorfwd&&","specificfunctorbridge*","specificfunctorbridge;","specificfunctorbridge<>保存了函数的类型f，但是functionptr::bridge是抽象基类functorbridge<>的指针，无法访问specificfunctorbridge::functor，所以函数的类型不可见了，只能进行调用，这就是将静态多态的类型信息擦除转换为动态多态的方式。","specified,","splat(tupl","split","split;","sqrt","sqrt(n)","sqrt(t","sqrt::valu","sqrt::value;","sqrt<>的例子表明模板元编程是可以实现任意计算的。","sqrt>;","squar","srct","st","stack","stack&","stack();","stack(char","stack2{stringstack};","stack3(stringstack);","stack4","stack::operator=","stack::pop","stack::push","stack::stack","stack::top","stack;","stack<>","stack>","stack>;","stack不能直接访问stack的私有对象，只能通过top()和pop()访问stack的元素。方便起见，还可以添加一个友元定义，使其可以访问stack::elems：","standard","start","start,","state","statement","static","static_assert(!std::is_const::value,","static_assert(!std::is_integral_v,","static_assert(!std::is_same_v,void>,","static_assert(!std::numeric_limits::is_signed,","static_assert(false,","static_assert(std::is_same_v>,","static_cast","static_cast(","static_cast('0');","static_cast('a')","static_cast(*this);","static_cast(this)","staticvalu","std","std:","std::__and_,","std::__cxx11::basic_string&)}","std::__cxx11::basic_string&}’","std::__detail::__is_noexcept_hash","std::__detail::__is_noexcept_hash’:","std::__find_if(_inputiterator,","std::__find_if(_iterator,","std::__not_,","std::_rb_tree_iterator,","std::addressof","std::addressof(x);","std::addressof可以取出变量和函数的地址：","std::address可以取出依赖于模板参数的对象的地址","std::allocator>();","std::array","std::bidirectional_iterator_tag,","std::bidirectional_iterator_tag>;","std::bool_constant()))>","std::cerr","std::common_type_t","std::common_type_t...>;","std::complex(4,2)","std::complex(4,2))的实例化结果为print(7.5","std::complex(4,2)。","std::conditional::value,","std::copy(project(authors.begin(),","std::cout","std::cref()","std::decay::typ","std::decay_t","std::decay_t::size_typ","std::decay_t;","std::decay可以将引用类型还原为引用的类型","std::declval","std::declval())))","std::declval())),","std::declval()));","std::declval());","std::declval())>>","std::declval;","std::declval可以在不创建对象的情况下使用某种类型的对象：","std::declval的定义如下：","std::dequ","std::deque<>","std::deque>","std::enable_if","std::enable_if::value>::type;","std::enable_if_t","std::enable_if_t::value>;","std::enable_if_t>;","std::except","std::false_typ","std::find_if","std::find_if(_iiter,","std::forward()","std::forward(args)...);","std::forward(args)...)};","std::forward(variant).templ","std::forward(vis)(","std::forward(vis),","std::forward_iterator_tag>","std::forward可以通过上面的方式实现。","std::function","std::get是编译时求值的，所以下面的代码是合法的（这个例子不太好解释，意会一下）：","std::hash()(c.getname());","std::initializer_list和模板参数推导","std::initializers中","std::input_iterator_tag)","std::input_iterator_tag,","std::input_iterator_tag>;","std::integral_constant,","std::integral_constant::valu","std::invoke()","std::invoke(op,","std::invoke(std::forward(op),","std::invoke可以处理可调用对象为成员函数","std::invoke的另一个应用是包装函数调用：","std::is_lvalue_reference::value;","std::is_rvalue_reference::value;","std::is_same::value;","std::is_same::value。","std::is_same<>","std::is_same_v","std::is_trivially_move_constructible::value),","std::iterator_traits::difference_type;","std::iterator_traits::difference_type>","std::iterator_traits::iterator_category());","std::iterator_traits::iterator_category,","std::iterator_traits::value_type;","std::launder","std::launder()","std::launder(),","std::launder().","std::launder(reinterpret_cast(buffer));","std::list","std::make_tuple(12,","std::make_unsigned::type;","std::map","std::max_element(coll.begin(),coll.end());","std::meta::data_members(infot))","std::meta::info","std::move()","std::move(source).visit([&](auto&&","std::move(value);","std::nullptr_t","std::numeric_limits::is_signed;","std::ostream&","std::ostream_iterator(std::cout,","std::pair<>","std::random_access_iterator_tag)","std::random_access_iterator_tag>;","std::random_access_iterator_tag>>","std::ref和std:cref","std::ref的实现方式是创建了一个新的std::reference_wrapper对象来包装传入的参数，并将新的对象以值得方式传入模板，同时提供了隐式类型转换来将std::reference_wrapper转换为原始参数的类型。","std::remove_const::type;","std::remove_const::type;502","std::remove_const_t","std::remove_const_t>","std::remove_reference_t>","std::size_t","std::size_t;","std::sort()","std::string","std::string&","std::string&&","std::string(\"hello\")","std::string(\"hello\"));","std::string(\"hello\"),","std::string,","std::string{\"hello\"});","std::swap(fp1.bridge,","std::transform","std::true_typ","std::tupl","std::unordered_set","std::unordered_set’","std::unordered_set’:","std::vector","std::vector<>","std;","std=c++17，同时hasless(42,","std=c++17，在我的机器上输出为（只保留了关键部分）：","std=c++17，输出为true：","step","still","stl","storag","storage(new","storage;","storage[idx];","storage_size(orig.size())","storage_size(s)","storage_size;","store","str","str(\"correkt\");","str[5]","str[5]包含*this和5两个参数，如果解析为badstring::operator[]，由于std::size_t一般为无符号类型，所以5需要进行类型提升转换；而如果解析为语言内置的下标运算符，由于其参数类型一般为ptrdiff_t（也就是int），则只需要隐式将*this转换为char*即可——二者对比没有更为匹配的重载函数。","strange(1.2,","strange(t&&,","strange(val,","strictli","string","string&","string&)","string:","strings,","stringstack","stringstack;","stringstack{\"bottom\"};","strm","strm)","strm,","strm;","stronger","struct","structur","structure:","style","subobject","subobjects.","subscript","subscripted）","subscripting:","substitut","substituted,","substitutes,","subt","subt::value.","subt::value;","succe","succeed),","succeed:","such","sum","summarize,","sumpolici","sumpolicy,","sumpolicy_hpp","suppli","support","supported)","sv);","sv,","sv;","swap","swap(*this,","swap(array&","swap(functionptr&","swap(t&","swap(x.len,","swap(x.ptr,","switch","synonym","syntact","syntax","synthes","system","sz","s{12};","s的推导指引，而valuearg::type并不是可推导的上下文（参见15.2）。","t","t&","t&&","t&&);","t&&,","t&&;","t&&表明模板的参数的类型是转发引用（forward","t&();","t&)","t&,","t&;","t(&b)[m])","t()保证了可以默认初始化对象和用零值初始化内置类型，且在c++17之前，还要求类的拷贝构造函数不能是explicit的。c++17中的强制拷贝省略（mandatori","t(1,","t(17,","t(p,","t(std::forward(other))","t(std::move(value));","t(t","t(t*,","t(value);","t)","t);","t)，实参类型为void(char,","t*","t*)","t*);","t*,","t*;","t,","t.","t.cpp:","t.gethead());","t.gethead();","t.hpp:","t.size();","t1","t1);","t1,","t1;","t1{},","t1的大小是5字节，说明继承链中的空元组的存储空间被优化了。由于上例中的a和b也是空类型，所以可以改进tupleelt<>来将a和b所占用的存储空间也优化掉：","t1的推导结果为int","t2","t2&","t2&&","t2());","t2(t);","t2);","t2,","t2:","t2;","t2{},","t2和t3的推导结果为int(&)[]","t2的初始化会报错，显示无法将tuple转换为long类型。","t3","t3&&","t3{});","t4","t5","t:","t::const_iter","t::default_value();","t::difference_type,","t::index","t::iter","t::iterator&&也只是声明变量的类型为右值引用，而不是转发引用","t::iterator,","t::iterator>>","t::size_typ","t::size_type()","t::subtype*","t::type;","t;","t>,(1","t>::valu","t>::value,","t>会被展开为is_same_v","t[2_c];","t[3_c];","t[ctvalue{}];","t[orig.size()]),","t[s]),","tabl","tada;","tag","tail","tail(other.gettail())","tail(std::forward(vtail)...)","tail(tail)","tail(tail...)","tail)","tail;","tail>;","tailt;","take","task;","tatic","te)","te.get();","templ_func();","templat","template()","template()(std::declval()...))>","template()))>","template,","template.","template...","template:","template::i>","template::iterator_category,","template::valu","template::value>","template<>","template>","template>>","templateclass>","templates,","templates.","templates）。下面的代码不是可安全实例化的，因为无法保证类型t支持运算符，也无法保证结果可以转换为bool：","templates）：","template”","template）、成员模板（memb","template）。","template）和变量模板（vari","template）替换模板的模板形参","template）表示这个类是一个模板，是一类类的统称","template），成员函数模板（memb","temporari","temporaries,","temporary.","tensor","tensor);","tensor;","term","termin","terminolog","test","test()","test()中不能使用t作为模板参数的原因在于isdefaultconstructiblet::value会先以参数t实例化类模板，在这个过程中会实例化test()的声明，如果t不能被默认构造，将会出现编译错误，使用u将实例化推迟到了引用value的时刻，也就是利用sfinae规则的时刻。原文：","test(...);","test(decltype(conv(std::declval()","test(dequestack","test(identity()","test(identity())>*);","test(matrixlist","test(void*);","test.cpp","testcontainers();","them,","them.","therefor","therefore,","third","this?","this指针","those","though","though.)","three","through","throw","ticket()","time","time:","tmp","tmp(*a);","tmp(op2);","tmp(other);","tmp(std::forward(f));","tmp(x);","tmp);","tmp);522","tmp.pop();","tmp;","tmpl","tmplparamisreference(r);","tmplparamisreference(t)","tn...)","to)","toint(char","top","top()","total","total,","total;","total{};","tp...","tracer","tracertest","tracertest.cpp","trait","traits/accum0.hpp","traits/accum1.cpp","traits/accum1.hpp","traits/accum2.hpp","traits/accum3.hpp","traits/accum5.hpp","traits/accum6.cpp","traits/accum6.hpp","traits/accum7.hpp","traits/accumtraits2.hpp","traits/accumtraits3.hpp","traits/accumtraits4.hpp","traits/accumtraits4bigint.hpp","traits/addreference.hpp","traits/boolconstant.hpp","traits/decay.cpp","traits/elementtype.cpp","traits/elementtype.hpp","traits/hasbegin.hpp","traits/hasless.hpp","traits/hasmember.cpp","traits/hasmember.hpp","traits/hasplus.hpp","traits/hassizetype.hpp","traits/hastype.cpp","traits/hastype.hpp","traits/hasvarious.hpp","traits/ifthenelse.hpp","traits/isarray.hpp","traits/isclass.hpp","traits/isconvertible.hpp","traits/isdefaultconstructible1.hpp","traits/isdefaultconstructible2.hpp","traits/isdefaultconstructible3.hpp","traits/isenum.hpp","traits/isfunction.hpp","traits/isfunda.hpp","traits/isfundatest.cpp","traits/islvaluereference.hpp","traits/isnothrowmoveconstructible1.hpp","traits/isnothrowmoveconstructible2.hpp","traits/ispointer.hpp","traits/ispointertomember.hpp","traits/isreference.hpp","traits/isrvaluereference.hpp","traits/issame.cpp","traits/issame.hpp","traits/issame0.hpp","traits/isvalid.hpp","traits/isvalid1.cpp","traits/isvalid2.cpp","traits/passbyvalue.cpp","traits/plus1.hpp","traits/plus2.hpp","traits/plus3.hpp","traits/removeconst.hpp","traits/removecv.hpp","traits/removereference.hpp","traits/rparam.hpp","traits/rparam1.cpp","traits/rparam2.cpp","traits/rparamcls.hpp","traits/sizeof.cpp","traits/smallestint.hpp","traits/sumpolicy1.hpp","traits/sumpolicy2.hpp","traits::acct;","traits::zero();","traits）","transform","transformmatrix","transformt","transformt,","transformt::type;","transformt;","translat","translate(t);","travers","traverse(root,","tree","tree,","tree:","tri","tricki","troubl","trouble::longtyp","trouble::longtype>;","true","true)","true);","true;","true_typ","true_type,","truetyp","truetype)","truetype;","tryequal","tryequals::equals(functor,","ts","tt>","tupl","tuple&","tuple()","tuple(head","tuple(ts...)","tuple(ts...);","tuple(tupl","tuple(tuple.gethead(),","tuple(value);","tuple(vhead&&","tuple)","tuple);","tuple,","tuple...>(std::forward(elems)...);","tuple.gettail();","tuple:","tuple;","tuple<>","tuple<>;","tuple>","tupleelt","tupleelt()","tupleelt(u&&","tupleelt,","tupleelt;","tupleget","tupleget::apply(t);","tupleget::apply(t.gettail());","tuples/apply.hpp","tuples/compressedtuple1.cpp","tuples/constantget.hpp","tuples/copycounter.hpp","tuples/copycountertest.hpp","tuples/indexlistreverse.hpp","tuples/literals.hpp","tuples/makeindexlist.hpp","tuples/maketuple.hpp","tuples/popback.hpp","tuples/popfront.hpp","tuples/pushback.hpp","tuples/pushfront.hpp","tuples/reverse.hpp","tuples/select.hpp","tuples/splat.hpp","tuples/tuple0.hpp","tuples/tupleelt1.hpp","tuples/tupleelt2.hpp","tuples/tupleeq.hpp","tuples/tupleget.hpp","tuples/tupleio.hpp","tuples/tuplesort.hpp","tuples/tuplesorttest.hpp","tuples/tuplestorage1.hpp","tuples/tuplestorage2.hpp","tuples/tuplestorage3.hpp","tuples/tupletypelist.hpp","tuple{1,2};","turn","two","two;","type","type\");","type)","type)和hasless(type,","type.","type:","type;","typedef","typelist","typelist());","typelist)","typelist,","typelist...>;","typelist/accumulate.hpp","typelist/addconst.hpp","typelist/cons.hpp","typelist/consfront.hpp","typelist/consisempty.hpp","typelist/conslisttest.hpp","typelist/conspopfront.hpp","typelist/conspushfront.hpp","typelist/cttypelist.hpp","typelist/ctvalue.hpp","typelist/ctvalue17.hpp","typelist/genericlargesttype.hpp","typelist/genericpushback.hpp","typelist/insertionsort.hpp","typelist/insertionsorttest.hpp","typelist/insertsorted.hpp","typelist/largesttype.hpp","typelist/largesttypeacc.hpp","typelist/largesttypeacc0.hpp","typelist/multiply.hpp","typelist/nthelement.hpp","typelist/select.hpp","typelist/transform.hpp","typelist/typelist.hpp","typelist/typelistfront.hpp","typelist/typelistisempty.hpp","typelist/typelistpopback.hpp","typelist/typelistpopfront.hpp","typelist/typelistpushback.hpp","typelist/typelistpushfront.hpp","typelist/typelistreverse.hpp","typelist/valuelist.hpp","typelist/valuelisttest.hpp","typelist/variadictransform.hpp","typelist::type...>;","typelist;","typelist>;","typenam","typename...","typename关键字","typename用来表明后面的标识符是一个类型：","typename的这种使用方式更多的用于使用容器中的迭代器打印容器：","typeoverload/advance2.hpp","typeoverload/advance3.hpp","typeoverload/container1.hpp","typeoverload/container4.hpp","typeoverload/enableif.hpp","typeoverload/iscontextualbool.hpp","typeoverload/lessresult.hpp","typeoverload/min.cpp","typeoverload/min2.hpp","typeoverload/min3.hpp","types","types,","types.","types...","types...:","types...>(v);","types1","types2","types:","typet","typet{};","type）包括：","type）替换模板形参","type），并为该类型重载函数调用运算符()：","t{...};","t{3.1415926535897932385};","t{};","u","u)","u,","u...)","u1::den","u1::num","u2::den","u2::num;","u:","u::type;","u;","u>","unari","unbound","undeclared()","undeclared();","undeclared(42);","undeclared(t);","undefin","undefined):","unevalu","unexpand","unfortunately,","union","uniqu","unit","unittyp","unknown","unless","unnam","unordered_map","unrel","unruh)","unruh提出的元编程例子：","unsign","unsigned\");","unsigned,","unsignedt","until","unwrap","up","up,","update_max_live()","update_max_live();","us","usag","usage:","usecontainer(contain","user","usual","uv)","uv);","v","v(1.5);","v(17);","v(values...);","v)","v.visit([](auto","v1((short)123);","v2(v1);26.6","v2;","v3(std::move(v1));","v4(std::move(v1));","v;","v>","v>(value,","val","val(v)","val)","val);","val)中仍然需要std::move，这是因为c++默认不传递右值的属性。当使用val时，仍然是非常量左值，和void","val)中的val属性是一样的。如果默认传递右值，那么当该值第一次作为某函数的实参时，函数返回后该值可能就失效了。原文：","val;","valid","valid;","valu","value\";","value\"};","value&","value()","value()));","value(i),","value(s)","value(std::forward(other)","value(std::forward(other))","value(v),","value)","value));","value);","value*;","value.","value:","value;","value_typ","value_type&","value_type;","valuearg","valuearg::type)","valuearg::type;","valueholder;","valuelist","valuelist)","valuelist;","valuelisttest()","values)","values.push_back(i);","values:","values::hold","values;","valuet(typet);","valuetyp","valuewithcom","valuewithcomment(char","valuewithcomment;","value）更合适，这样左值的含义就更加广泛了：","value）替换非类型模板形参","value，可以被重用的值，具有固定的生命周期，姑且称为到期值","val{};","vandevoord","var1","var2","vararg","variabl","variable/funct","variad","variant","variant&","variant();","variant(doubl","variant(double&&);","variant(int","variant(int&&);","variant(str","variant(string&&);","variant(vari","variant(variant&&","variant,","variant/commontype.hpp","variant/findindexof.hpp","variant/printrec.cpp","variant/variant.cpp","variant/variant.hpp","variant/variantchoice.hpp","variant/variantchoiceassign.hpp","variant/variantchoicedestroy.hpp","variant/variantchoiceinit.hpp","variant/variantcopyassign.hpp","variant/variantcopyctortmpl.hpp","variant/variantdefaultctor.cpp","variant/variantdefaultctor.hpp","variant/variantdestroy.hpp","variant/variantdestroy17.hpp","variant/variantempty.hpp","variant/variantexception.cpp","variant/variantget.hpp","variant/variantis.hpp","variant/variantmovector.hpp","variant/variantpromote.cpp","variant/variantstorage.hpp","variant/variantstorageastuple.hpp","variant/variantstorageasunion.hpp","variant/variantvisit.hpp","variant/variantvisitimpl.hpp","variant/variantvisitresult.hpp","variant/variantvisitresultcommon.hpp","variant/variantvisitresultstd.hpp","variant/visit.cpp","variant::destroy()","variant::empty()","variant::get()","variant::is()","variant::operator=","variant::variant()","variant::variant(vari","variant::variant(variant&&","variant::visit(visitor&&","variant;","variant<>中的成员函数将在后面的小节中详细说明。","variantchoic","variantchoice()","variantchoice(t","variantchoice(t&&","variantchoice...","variantchoice::destroy()","variantchoice::destroy()...","variantchoice::discriminator;","variantchoice::operator=","variantchoice::operator=...;","variantchoice::operator=...拉取了基类中的赋值运算符：","variantchoice::variantchoice(t","variantchoice::variantchoice(t&&","variantchoice::variantchoice...;","variantchoice::variantchoice...拉取了所有基类的构造函数，例如variant继承了下列构造函数：","variantchoice;","variantchoiceassign.hpp","variantchoicedestroy.hpp","variantchoiceinit.hpp","variantcopyassign.hpp","variantcopyctor.hpp","variantcopyctortmpl.hpp","variantdefaultctor.hpp","variantdestroy.hpp","variantget.hpp","variantis.hpp","variantmovector.hpp","variantstorag","variantstorage,","variantstorage;","variantstorage<>","variantvisit.hpp:","variantvisitimpl(*this,","variantvisitimpl(std::forward(variant),","variantvisitimpl(std::move(*this),","variantvisitimpl(v&&","variou","vc.comment","vc.valu","vc2","vc;","vec)","vector","vector>","versa,","version","versions)","versu","vhead,","via","vice","virtual","virtualclass","vis)","vis)&","vis,","visibl","visit(visitor&&","visitelementresult","visitelementresult<>得到所有可能的返回类型形成类型列表，最终通过类型列表的累加算法accumulate<>推导公共返回类型。当然也可以使用std::is_common_type_t来简化：","visitmixins(visitor","visitor","visitor&&","visitor(static_cast(*this)...);","visitor)","visitresult","visitresult;","visitresultt","visitresultt::type;","vmem();","void","void*","void,","void:","void;","void>)","void_t","voidt","void是不完整类型，很多时候都需要单独考虑void：","volatil","volatile&&","volatile&)","volatile):","volatile;","vs.","vstack.push(5.5);","vstack.push(6.6);","vstack;","vt","vt::den","vtail&&...","vtail)","w","w(s);","want.","warning:","way","way,","way.)","weird","weren’t,","wherea","whether","whichev","while(i","whole,","within","without","wonder","words,","work","work,","world!\");","wors","wrap","wrapper","wrapper(t","wreturn","write","ws;","w关联的类是wrapper，其中定义了foo()，而s关联的类是s，没有定义foo()。","x","x&&，右值引用，该值可以被修改，或者移动","x&和x&&，如果重载了以x和x&为参数的函数，则有可能出现模糊调用：","x&，非常量左值引用","x()));","x();","x(0.0),","x(1000),","x(12);","x(b,","x(int);","x(iter","x(t&&);","x(u,","x(x&&);","x(x),","x)","x);","x*i","x*y;","x*y产生临时量和读写次数多的原因在于编译器是根据表达式的优先级进行计算的，如果将整个表达式的计算推迟到最终的赋值运算，就可以生成最优的代码了，也就是在计算1.2*x","x*y产生了6000次读和3000次写","x*y的过程中保留结果的生成过程，这可以通过下面的类型保留：","x*y返回array,","x*y返回的临时对象类型为：","x,","x.center_of_gravity()","x.draw()","x.print();","x1","x1,","x1.center_of_gravity()","x1;","x2)","x2);","x2,","x2.center_of_gravity();","x2;","x3)","x3报错的原因在于运算符不能比较两个临时对象，x4报错的原因在于没有匹配的运算符，x6报错的原因在于notboolconvertible不能隐式转换为bool类型。","x:","x::*","x::i));","x::i)也可以被推导。","x;","x=42,","x[]","x[];","xa","xp","xp)","xrvalu","xs","xvalu","xvalue();","xvalue)","xvalue，全称expir","x{12};","x{};","x};","x的类型为tupl","y","y(0.0)","y(1000);","y(12);","y(t","y(t&&)","y(t&&);","y(x","y(x&&);","y(x)","y(y)","y)","y),","y,","y.begin());","y.len);","y.ptr);","y;","y=","yield","ys","y中，y发生了的左值到右值的隐式转换（lvalu","z","z(t","z(t&&)","z(t&&);","z1","z2{2};","z;","z]","zero","zero()","zero;","zero{z}","zip,","zip;","{","{\"center\"});","{\"david\",","{\"douglas\",","{\"good\",","{\"hello\",","{\"nicolai\",","{0,","{616","{aka","{double,","{float,","{int,","{pri=0};","{pri=1};","{short,","{stringstack};","{}","{};","{}中的参数可以转换为std::initializer_list、通过std::initializer_list构造的对象、通过多个参数构造的对象和聚合类型的对象：","{}调用isvalid()返回的lambda表达式，代换后的结果为：","||","||求值为fals","}","});","};","};\\","~dynamic();","~functionptr()","~functorbridge()","~geoobj()","~listnode()","~objectcounter()","~sarray()","~variant()","~virtualclass()","~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~","‘(const","‘(main()::)","‘_iiter","‘_inputiter","‘_iter","‘bool","‘class","‘const","‘friend’","‘std::__and_,","‘std::__not_,","‘std::pair,","‘struct","‘this’","‘value’","“a","“b","“c*","“declarator”","“not","“ordinari","“program","“templat","《stl源码剖析》一书中介绍了大量有关这部分的内容。","一个有意思的例子如下：","一些不合法的例子如下：","一些合法的例子如下：","一些奇怪的推导规则","一点点分析。isdefaultconstructible和isvalid()都是常量表达式，可以在编译时计算。isdefaultconstructible是以lambda表达式[](auto","一种可以检查语义的东西，姑且就叫神谕吧~","一般下列情况需要传引用：","一般不提供默认模板实参，需要显示指定","一般和其它模板参数关系不大","一般和模板参数密切相关","一般实现在普通类或者类模板","一般将模板的调用参数设置为传值的方式，如果对象很大，尝试使用std::ref和std::cref进行包装","一般是类型或者常量","一般来说c++代码的组织方式为：","一般来说传值，因为：","一般来说只将特化版本定义为内联，而不将函数模板定义为内联。","一般来说文档中会对模板实参提出需要满足的限制，因此可以根据这些限制构造一个测试类型（archetype）来测试。例如对于下面的模板代码：","一般来说是不能转换为数组类型和指针类型的，所以还需要如下特化：","一般来说模板错误都会超级复杂，本节给了两个例子。","一般通过成员函数实现","一般通过类型特征模板获取","一遍定义规则可以简单解释为：","一遍定义规则（the","三个问题","上一节中的反转算法效率可以通过统计拷贝的次数来测量：","上例中实例化后的函数之所以可以共存是因为函数签名不同，函数签名包含以下内容：","上例中的exchange()适用于简单类型，对于具有较大拷贝开销的array<>不是最好的实现，成员函数exchangewith()是更好的选择，但是却无法实现一个泛型算法。","上例还表明，全特化可以只是声明。一旦全特化被声明，编译器将不再考虑模板定义，即全特化的实例和普通类是一样的，唯一的不同就是需要对应一个模板定义，因此定义成员函数时不需要前缀template<>：","上述规则也适用于需要参数包展开的可变参数模板：","上述限制对应的例子如下：","上面三种的引用","上面代码包含的两条隐式推导指引为：","上面代码包含的推导指引为：","上面代码错误的原因是：","上面斜体原文：","上面的代码中，模板参数包types和函数参数包values通过一一的类型转换进行了展开。","上面的代码写为模板的形式会是这个样子：","上面的代码创建的闭包类型为：","上面的代码很乱，完整代码应该为：","上面的代码无法处理重载函数（可能是因为区分确定两个重载函数的地址），但是可以通过调用的方式来侦测：","上面的代码是可以直接在n中构造对象的，但是在c++17之前，这是一个优化措施，语言不能提供保证，并且因为n{}是一个右值，在要调用类n的移动构造函数来初始化n时还会报错，这是因为移动构造函数被删除了。原文：","上面的代码要求在实例化tree时，node也要是可见的的，否则就会报错，但是普通类却没关系：","上面的代码通过decltype(auto)实现返回引用。如果还需要对std::invoke的返回值进行处理然后再返回，则应该写为下面的样子：","上面的代码通过typename来提示编译器后面的t是模板参数。std::enable_if的含义为：","上面的使用方式会报链接错误，这是因为模板定义和触发实例化模板的代码在两个文件中。编译器并不知道编译printtypeof(ice)时需要实例化模板，而当编译另一个文件时，由于没有代码触发模板实例化，模板自然也就不会被实例化。原文：","上面的推导指引并不和任一构造函数对应，它只是指出当以x类型构造y时，类模板参数类型也为t。","下一个是发生在定义类模板的非类型模板参数时：","下列情况中，形参类型不一定要和实参类型完全匹配：","下标运算","下标运算符可以应用于函数参数包：","下表列出了支持的折叠表达式及相应的展开结果：","下面分析下构造函数的重载解析过程。1和2参数数量不匹配，3中head为long，不能匹配tuple。4实例化后的构造函数为tuple&>(tuple&)，5实例化后的构造函数为tuple(tupl","下面是c++11扩展后的值类型：","下面是一个例子：","下面是一个利用分支模板选择容纳n的最小整型的例子：","下面是一个可以接收任意函数对象并调用的模板：","下面是一个在构造函数中初始化基类时展开参数包的例子：","下面是一个将i重复n次的索引序列，可以用来生成由元组中第i个元素重复n次的新元组：","下面是一个带非类型参数的函数模板：","下面是一个测试std::sort的追踪器：","下面是使用方法：","下面是元组的编译时算法，主要用来确定类型：","下面是类似std::for_each功能的模板：","下面的代码根据sz的素性使用了不同的结构体：","下面的代码都是错的（感觉retv太扯了）：","下面的例子将stack<>中的内置容器类型也变成了一个模板参数：","下面的偏特化模板可以获取容器中元素的类型：","下面的模板包括一个模板参数，以及该类型的非类型模板参数，还为非类型模板参数提供了默认参数值：","下面的程序可以用来测试优化后的存储空间：","下面给出几个常见的参数包展开的例子，第一个发生在多重继承和函数参数调用时：","不允许直接定义引用的引用，但是在模板代换和使用类型别名时可能会出现多重引用，这时会应用引用折叠规则，具体为：内层引用的const和volatile会被丢弃，只有在内外层都为右值引用的情况下，最终结果才为右值引用：","不包含模板参数的基类就是非依赖型基类。","不可推导的上下文包括：","不完整类型包括：","不支持首部和中间位置的参数包展开：","不是用来表示基类和表示初始化列表的情况","不能将临时量作为传非常量引用的参数：","不能是：","不能用0等常量值初始化引用类型","不能通过std::enable_if禁掉编译器合成的拷贝和移动构造函数，除非拷贝构造函数被删除了：","不过在c++17中，对于自定义类型还可以写为inline的形式：","不过有方法可以解决这个问题：","不返回引用的函数返回值","两个advanceiter()模板只有模板参数名字不同，编译器将无法解析。","两种方法虽然效果一样，但是在编译时间上有很大差别，原因在于第一种方法只需要实例化多个typelist<>就可以，而第二种方法还会实例化pushbackrect<>、pushfrontt<>、frontt<>和popfrontt<>。","两阶段查找","两阶段翻译","临时实体化是左值到右值转换的逆转换，可以将prvalue转换为xvalue，也就是用rvalue临时初始化一个xvalue，一般发生在下面的情况中：","临时实体化（temporari","临时量和循环分割","为c风格数组和字符串进行特化重载","为了保证类型t支持运算符，需要实现lessresultt<>：","为了利用空基类优化，就不能将tuple::tail作为成员，而应该作为基类：","为了实现泛型算法，需要提供一个特化版本，并在其中调用exchangewith()：","为了将元组传递给接收可变参数的函数，可以利用和select()中同样的方式将参数包展开：","为了能够接收任意函数对象，需要将functorbridge<>的派生类实现为specificfunctorbridge<>以接收任意函数对象：","为了解决上面的问题，可以将模板定义为：","为了解决这个问题，需要把所有可能的失败挪到代换相关上下文中，而不是在函数体或者类定义中：","为了解决这个问题，需要显示的引入一个模板声明来指出select是一个函数模板：","为了避免上述错误，可以使用std::remove_reference和std::decay去除类型推导结果中的引用，或者使用auto保证永远返回值。","为了避免贪心实例化策略带来的问题，可以通过显示实例化的方式实现只在一个翻译单元中进行实例化。这需要只在该翻译单元中提供模板定义，其余翻译单元只提供模板声明，例如将实例化的模板放入后缀为.tpp的源文件中：","为数组单独重载，更详细的例子见第5章","为模板提供类型检查","为此c++17提供了std::launder()的解决办法，它以一个地址作为参数，只是简单的返回该地址，同时提示编译器这两个地址所存储的对象可能已经不同了。原文：","为每个类型成员都定义上述的模板过于麻烦了，可以使用宏来简化：","为返回类型定义新的模板参数","主模板","主要用来提升编译速度，目前模板代码只能写在头文件中，虽然程序中可能只实例化很少的模板代码，但是却会对整个头文件进行词法分析和语法分析，引入模块后可以提前将头文件编译好以提升编译速度。","举个例子：","也可以实现将函数参数包中每个参数加1：","也可以用来检测多个条件：","也可以通过std::declval来实现上述类型特征模板（原理上都是产生某种类型的临时对象）：","也就是point将没有基类，v将被通过默认构造函数初始化，但是不会被编译器解析为函数定义。","书中一直都用函数模板（function","书中关于这一部分的解释：","书中提到了其它几个构造函数，但是配套代码中没有，下面的是我自己写的：","书中的代码判断有错误，应该是只有在两个函数都不为空时才调用equals()进行比较。然后在functorptr<>中添加接口，并在specificfunctorbridge<>中实现：","书中的是“非其它”的实现方式：","书中给了一种将模板实参和数据成员绑定在一起的方法，但是没想明白代码的使用场景：","书中给了一种解决办法：","书中给出了std::make_pair从c++98到c++11的发展历史：","书中给出的一段解释解答了一个让我疑惑很久的问题。原文：","书中还有一个例子：","书中还给出了一个根据索引提取类型列表中指定类型的例子：","产生的编译错误如下（看到这我不由自主地笑了，傻叉编译器确实都是这样子的）：","从auto进行推导","从c++11开始，使用auto可以让编译器自动推导类型，其原理和模板实参推导是类似的，例如对于下面的代码：","从c++11开始，函数传引用参数分为下面三种类型：","从c++11开始，即使模板的调用参数是传值的，也可以使用std::ref和std::cref来传引用：","从c++11开始，可以使用std::enable_if来在某些条件下禁掉函数模板：","从c++11开始，某一类型x可以匹配的类型包括x、x&、const","从c++14开始，也可以简写为下面的样子：","从c++14开始，可以使用decltype(auto)的写法，用来统一decltype上述的区别：","从c++14开始，被constexpr的函数中也可以使用较为复杂的程序控制结构：","从c++17开始，也可以写为下面的形式：","从c++17开始，也可以根据类的构造函数对类模板参数进行推导，但是一个原则是要么全部指定类模板参数的类型，要么全部让编译器进行推导：","从c++17开始，可以使用二元运算符作用域参数包中的所有参数，例如：","从c++17开始，有时可以省略模板参数，而让编译器去推导，例如下面的代码：","从c++17开始，由于auto可以用来推导非类型模板参数的类型，所以ctvalue<>还有更简单的定义：","从c++17开始，非类型模板参数的类型可以为auto：","从decltype(auto)推导","从decltype进行推导","从std::tuple、std::pair和std::array模板初始化变量（这些模板支持std::tuple_element系列模板）：","从函数对象到函数指针再到std::function","从初始化和表达式进行推导","从另一个类型的可识别联合体初始化：","代换、实例化和特化（substitution,","代换中的错误可以迫使编译器去选择其它并不精确的匹配：","代换相关上下文","代换（substitution）：使用模板实参替代模板形参的过程","代码体积小","代码可以被编译为二进制，源码可以不公开","代码运行速度会快一些","以下情况不允许使用默认模板实参：","以前一节（16.2.2）中代码为例：解析f((int*)nullptr)时，两个函数模板实例化的结果分别为f(int*)和f(int*)，形参是一样的，参数列表分别为(a1)和(a2*)，用a2*代换第一个函数模板中的t后可以和参数列表2完全匹配，而用任何类型代换第二个函数模板中的t*都将得到指针类型，和参数列表1无法匹配，因此f(t*)更为特化。","以往函数模板是作为一个整体实例化的，但是在支持编译时if后，编译器必须支持部分实例化模板。原文：","以某些类型调用std::copy时最终会调用std::memcpy或者std::memmov","以某些类型调用std::fill时最终会调用std::memset","任何情况下，非模板函数的匹配度都比模板实例化后的函数匹配度高：","任何类型都可以作为类型模板实参，但是要保证代码是合法的：","任意位置的参数包展开","任意指针类型到void*类型的转换","优化","会被编译器解析为：","传值","传值会发生类型退化（decay），而传引用不会","传值和传引用","传值是一定会发生对象构造的，但是拷贝构造可能会被编译器优化掉，还有可能进行移动构造：","传值最大的问题在于拷贝带来的性能开销","传值还是传引用","传常量引用","传常量引用能保证不会发生拷贝：","传引用","传统意义下的左值和右值","传转发引用","传递只读类型的参数","传非常量引用","但也不是所有的特化算法都可以简单的转换为函数模板，例如下面的迭代器前进的例子：","但是c++只允许类的静态常量数据成员是整型或者枚举类型，对于浮点型，应该使用constexpr；对于自定义类型，只能通过静态函数的方式：","但是decltype(auto)结果不能是void，因为void不完整类型，应该写为下面的样子：","但是tuple<>的方法占用了过多的存储空间，union的方式无法使用继承，书中最终采用的方式是使用一个足够大的缓冲区来容纳所有可能的类型，并通过variantstorage::discriminator标识缓冲区中的数据应该解释为哪种类型（下标从1开始，0表示未存储数据），代码如下：","但是一般是不会将重载的运算符实现为内联函数的，而是声明其为友元，然后类外部进行定义，有下面两种方法：","但是上面的代码会报错，这是因为实例化的print()是否被调用是运行时决定的，而sizef...会在编译期间求值，所以尽管if中的条件恒为真或者恒为假，编译器还是会递归的实例化所有的print()，当找不到无参数版本的print()的定义时就会报错。原文：","但是不便之处在于编译器无法进行类型推导了，这是因为rparam::type不是可推导的上下文，但是可以通过包装器（wrapper）包装一下：","但是也可以通过front<>、pushfront<>、popfront<>和isempty<>实现：","但是函数模板实例化的函数不会和普通函数、虚函数、编译器隐式合成的构造函数和运算符等价。","但是只对左值版本有效（详见第1章中的推导规则）。为了支持右值版本，应该写成下面的样子：","但是在某种程度上有点像特化：","但是在类的外部必须要使用完整的类型名，除非需要的是类的名字而不是类的类型：","但是在解析f1('a',","但是实际实例化的过程并没有这么简单，这是因为sqrt::value包含两个分支，编译期间无法根据条件优化掉无效的分支，最终的结果是一个超长的条件判断表达式。虽然是通过二分法计算平方根，但是实际实例化的类模板为o(2logn)个。不仅如此，当使用::运算符引用value时，还需要实例化整个类。不过好在可以借助ifthenelse<>实现分支优化：","但是此时person","但是输出却多了三行：","但是这个模板太通用了，可以挪到基类中然后通过crtp为特定的派生类所用：","但是这就不能传递lambda对象了（因为是类），为此可以使用std::function：","但是这种方式要求t1和t2可以被默认构造，为了消除这个限制，可以使用std::declval：","但这还是可能报错，原因是虽然重载版本更为匹配，但是标准并没有规定此时是否需要实例化模板，如果实例化了，就有可能报错。原文：","使得类成员可写","使用19.4.2节中偏特化的方法可以侦测类中是否定义了size_type类型：","使用auto&&实现模板中临时量的完美转发","使用auto推导非类型模板参数","使用concepts简化enable_if","使用concept可以最简单的实现启用和禁用模板，但可惜的是还没有支持：","使用decltype(auto)实现返回类型的完美转发","使用sizeof和typeid对纯右值进行求值","使用std::declval提取没有被求值的表达式的类型","使用std::enable_if","使用std::enable_if改写的person类如下：","使用一个新的模板参数u：","使用公共类型","使用到的方法和19.4.1节中的类似。书中的代码有错误，调用test()时应该提供两个模板实参，这里是修改后的正确版本。","使用大括号可以保证所有类型都能被正确初始化，参见5.2","使用数组初始化多个变量：","使用方式如下：","使用方法为：","使用术语类模板、函数模板和变量模板","使用栈类模板时，如果要指定内部容器的类型，需要在实例化类模板时写两遍元素的类型：","使用模板","使用模板可以得到上例的静态多态版本：","使用泛型lambda表达式侦测类型成员","使用独特的构造值（a","使用独特的构造类型（a","使用独特的构造类类型（a","使用简单类类型初始化多个变量：","使用类模板","使用转发引用来转发模板参数，使用auto&&声明需要转发的模板临时变量","使用静态断言","例如为stack<>定义一个printon()方法，同时实例化模板参数类型为std::pair的类模板，那么只要不调用printon()函数，就不需要为std::pair重载运算符。","例如实例化array时，实例化后的友元函数存在于全局命名空间中，可以访问array的protected和private成员，同时只是一个普通的函数，可以被重载。在c++支持函数模板重载后，这个“注入到全局命名空间”的技巧不适用了。现代c++中的名称查找是基于adl规则的：","例如对于加法，最简单的实现为：","例子","依赖型using声明","依赖型友元查找","依赖型名称和非依赖型名称：如果一个名称中包含模板参数，则就是依赖型名称","依赖型名称查找","依赖型基类","依赖型模板名称","依赖型类型名称","依赖型表达式","依赖型表达式分为实例化依赖型表达式、值依赖型表达式和类型依赖型表达式。","侦测不抛出异常的成员","侦测任意类型成员","侦测类型成员","侦测类成员","侦测非类型成员","便于优化","借助c++17的编译时if可以避免使用enableif<>：","值元编程","值元编程（valu","值操作算法","值特征","值类型","假如c++不支持可变参数模板，那么类型列表就只能写成lisp中的样子了：","假如再为stack<>提供一个以t类型的引用为参数的构造函数stack","假设将16.2中的details/funcoverload1.cpp替换为下面的代码：","假设有一个对容器中元素累加的模板：","假设有下面两个模板：","假设有下面的递归模板：","偏特化","偏特化的模板中不能包含默认实参","偏特化的模板实参列表应该和主模版的形参列表不同","偏特化的模板应该和主模板对应","偏特化的非类型模板实参应该是非依赖型的值或者其它的非类型模板形参","偏特化（partial","允许的实参类型转换","元组","元组中的元素通过tupleget<>提取：","元组也可以定义下标运算符，内部借助get()实现：","元组和上一章实现的类型列表typelist<>类似，都存储了一系列的类型，但不同的是元组中还包括类型所对应的值，因此元组所支持的算法既要在编译时确定类型，又需要在运行时对值进行计算。","元组和空基类优化","元编程","元编程中的反射","元编程是对程序进行编程，也就是在编程系统对源代码进行构建的过程中产生出新代码、实现新功能的技术。原文：","先声明类模板和运算符，然后声明友元，注意友元声明中的:","全局变量和函数声明在头文件中，定义在源文件中","全特化时要为所有的模板形参提供模板实参（具有默认实参的模板形参除外）：","全特化类模板以template<>开始，且特化的结果可以和原始模板没有关系，例如：","公共返回类型","关于性能的问题最好测一下，不要去猜","关于指针的标准转换包括：","关键问题是不知道split模板该在哪一个t的位置对参数包进行分割。","其中的第一个auto等价于：","其余都是完整类型。例子如下：","其它类型特征模板","其它重载情景","其它问题","其它非类型模板形参","具体来说，因为std::deque包含两个模板参数，虽然第二个参数是std::allocator并且有默认值，但是编译器无法进行匹配，所以应该写为下面的形式：","具体见下例：","具有继承关系的类之间的转换总是在具有更近继承关系的类之间进行：","内置算术运算符的结果","内置类型数量较少，可以通过穷举的方式提供所有的特化版本：","内置集合类型的处理很方便，但是类类型的通用接口不能通过统一的接口定义","内联","内联函数模板","减少到只有2000次读和1000次写。","函数参数包","函数参数调用时","函数可能包含任意数量的参数，为此需要为类型特征模板提供一个参数包：","函数名后面存在<>的函数模板可以被声明为类的友元，但是不能定义该函数模板：","函数名称所在的类和命名空间，如果是内部链接的名称，还包括翻译单元的名称","函数和代理函数","函数定义重载函数模板，由于普通函数更为精确，编译器在解析的过程中会优先匹配：","函数对象","函数抛出的异常中（从c++11开始不再支持）","函数指针","函数最好是返回值而不是返回引用","函数模板","函数模板偏特化","函数模板全特化时不能包含默认实参，因为会被视为一个新的函数定义：","函数模板可以被重载","函数模板和普通函数之间重载","函数模板定义了一类可以用于不同参数类型的函数","函数模板实参","函数模板实参可以通过显示指定、推导或者默认形参的方式指定：","函数模板并不是让一个函数可以处理不同类型的参数，而是为每种类型的参数单独生成了一份函数定义。用具体类型替换模板参数的过程称为实例化（instantiation），该过程产生一个实例（instance）。","函数模板是一个函数，该函数可以操作不同类型的数据，也就是返回类型和函数参数类型是暂时不确定的，例如求最大值的函数模板，只要类型t支持运算符，则max()就能正常工作：","函数模板的全特化","函数模板的全特化会考虑模板之间的特化偏序关系，例如：","函数模板的定义","函数模板的异常声明","函数模板的重载","函数模板速览","函数模板重载","函数模板重载更多用于重载c指针和c字符串版本的函数：","函数的形参类型，如果是函数模板，则是代换前的类型","函数的非受限名称","函数签名","函数类型的参数中","分别使用该模板对整型数组和字符进行累加：","分支型模板","创建了3个临时量，大小都为1000","初始化","初始化x2时，t的推导类型为c&，折叠后模板构造函数的参数类型为c&，比拷贝构造函数更为匹配","初始化x3时，t的推导类型为c&&，折叠后模板构造函数的参数类型为c&&，和移动构造函数一致，优先匹配非模板函数","初始化x4时，t的推导类型为c","初始化x5时，t的推导类型为c","初始化列表的转换","判断内置类型","判断可识别联合体是否存储值的empty()定义如下：","判断复合类型","判断最匹配的函数是否被删除","判断枚举类型","判断类型是否相同","判断类类型","利用popfront<>和递归可以实现获取类型列表中第n个类型的算法：","利用参数包展开优化算法","别名模板","到期值的例子：","前面两个例子都是普通类，对于类模板规则是一样的：","前面的方法可以有效解决编译时问题，但是还有运行时的问题需要解决，为此可以设计一个追踪器（tracer）作为模板实参来记录模板代码的执行过程，通常追踪器也是测试类型。","前面的累加模板都是通过指针实现的，标准库中更通用的方式是通过迭代器（书中的例子还是会导致溢出和截断）：","剔除不匹配的函数形成可行函数集合","动态多态","动态多态和静态多态的对比","动态多态是使用同一种方法在运行时调用不同的代码，书中给出的是最为熟知的画图形的例子：","动态是指在运行时通过函数指针调用正确的函数","包含模型","包含非类型模板参数的表达式，例如不能通过s推导i，也不能通过int(&)[sizeof(s)]推导t","包含额外的头文件（也就是定义模板时使用的和）","包装函数调用","匹配构造函数","匹配规则的原文：","匹配过程为：","区别","参数包也可以嵌套展开：","参数包可以让模板处理任意数量的参数","参数包展开","参数包展开会发生在：","参数包展开是指将参数包分成一个个参数的过程，例如下面代码中的types...：","参数包展开的时机","参数包操作","参数化声明","参数化虚函数","友元","友元函数也可以定义在类模板中，多用于友元函数依赖于类模板的模板参数：","友元函数声明可以是该函数的第一次声明：","友元函数声明（友元函数定义可以）","友元模板","友元模板只能是主模板。","友元类","友元类声明中麻烦的在于指定某个类模板的特化结果作为友元：","双向迭代器应该支持decrement()","双括号版本的decltype((x))的结果为：","反射元编程（reflect","反射指通过代码获取程序的信息，例如类的非静态数据成员：","反射（reflection），通过代码在编译期间侦测程序的特性","反转算法","反转算法的一种实现方式是通过front<>取出类型列表首部类型，然后递归反转剩下的类型列表，最后再进行组合：","反转算法通过递归的方式实现：","取地址运算符的结果","受限名称会在指定的作用域中进行查找：","受限名称和非受限名称：如果一个名称包含作用域运算符::或者成员访问运算符.和","受限名称，例如不能通过q::x推导t","变换元函数metafun<>可以是下面的形式：","变换算法","变换算法是将类型列表中的类型进行变换生成新的类型列表的算法，实现方法是先对首部类型进行类型变换，然后递归的对去除首部的类型列表进行变换，最终再拼接：","变量和函数变量","变量或者函数的地址（函数或者数组可以不加取地址运算符&）","变量模板","变量模板支持非类型模板参数：","变量模板支持默认模板参数：","变量模板的偏特化","变量模板的全特化","变量模板的典型应用是用来表示类模板成员变量：","变量模板的初始化部分","另一种基于谓词模板的判断方式如下：","另一种实现方式是通过混入：","另一种方式是为不同的类型t关联一个返回值的类型，这个相关联的类型可以视为t的类型特征。原文：","只包含类型成员、非虚成员函数和静态数据成员的类型为空类型，但是所占内存大小并不为0：","只应用上述规则会出现名称无法查找的情况，例如下面的例子：","只有可以被移动的对象才可以作为参数类型为x&&的函数的参数","只有在两个模板实参两两相等的情况下才是完全等价，这样实例化的结果就是一样的，比较的过程不考虑类型别名和常量表达式的计算：","只有在头文件中类外（也包括结构体外）定义的特化函数模板需要inlin","只有当非受限名称是函数时，才会应用adl规则：","只有显示指定模板实参为引用类型时，模板参数才会变成引用类型：","只有真正被调用的函数才会被实例化，例如在上面的例子中，编译器分别实例化了接收int和std::string类型的push()和top()，但是也只实例化了元素类型为std::string的pop()。如果类模板中有静态成员，那么当类被使用时，静态成员就会被实例化。","只有被调用的类模板才会被实例化","只考虑以std::initializer_list为唯一非默认模板参数的构造函数","可以不作为模板参数传递","可以为模板参数提供默认参数，且默认参数可以依赖于前面的参数","可以为空","可以为类模板提供默认的模板参数，例如为stack<>提供默认的内部容器类型：","可以仅对类的静态数据成员和成员函数进行特化，类中其余部分将仍然从模板定义生成：","可以使用auto作为非类型模板参数","可以使用sfinae规则来实现特定模板的选择","可以使用using引入基类中的依赖型类型，但是引入基类中的模板需要变通一下：","可以分别通过tuple<>和union来实现可识别联合体：","可以在不同的翻译单元中使用实例化的同一变量模板（全局变量）：","可以在模板定义中声明多个模板参数，例如可以为max()函数定义两个不用的模板参数：","可以定义实例化聚合类的模板","可以将构造函数模板化：","可以拷贝、移动和赋值","可以构造下面的测试类型来测试：","可以通过不同长度的c风格字符串来测试模板的正确性","可以通过转发引用t&&和std::forward来实现完美转发","可以通过递归解决这个问题：","可以通过重载运算符并将其定义为友元函数来实现打印：","可变参数和下标运算符","可变参数基类和using声明","可变参数应该在偏特化模板的最后","可变参数推导指引","可变参数模板","可变参数模板可以实现函数参数包中每个参数和自身相加：","可变参数模板可以实现多重继承：","可变参数模板的典型应用是转发任意数量和类型的参数","可变参数模板的重载","可变参数类模板","可变参数类模板和可变参数表达式","可变参数表达式","可安全实例化的模板","可推导的上下文","可识别联合体","可识别联合体中存储了一组可能类型之一的值，但是和传统的联合体不同的是可识别联合体知道当前其中存储的是什么类型，也就可以提高安全性。本章实现了variant<>，类似于std::variant，一个简单的应用如下：","可识别联合体初始化后也可以通过某种类型的值进行赋值，为此也通过use","可识别联合体可以被默认构造，但是并不是不存储值，而是用第一个类型的默认值初始化，这样就尽量避免了不存储值的特殊情况：","可识别联合体可以通过某种类型的初值初始化，为此通过use","可识别联合体的初始化和赋值","可识别联合体的定义如下：","可调用对象也可以是lambda表达式，也可以称为闭包（closures）","可调用对象包括函数、函数指针、函数对象、仿函数（functor）和lambda表达式","可调用对象类型","可选的桥接","可链接实体（linkabl","右值就是纯粹数学意义上的、不会被存储的、只能使用一次的值。总之，所有的临时量都是右值，但是引用右值的引用不是右值。原文：","右值引用","右值的例子：","合成类模板的默认函数","同时移除const和volatile限定：","同样的技巧也可以用于检测表达式：","同理，实例化的类模板s不能插入到位置2和位置3。如果将实例化的类模板s插入到位置4，则无法在h()中求出s的大小，所以只能将实例化的s插入到位置1。","名称中包含::运算符","名称中包含模板参数","名称查找","后记","后面就是解释了一下该怎么去读懂这个错误信息，不过如果有经验的话应该一眼就能看明白这个错误信息是啥的。","后面是关于推导指引（deduct","向函数传递只读类型的参数有两种方法，分别为传值和传常量引用，可以通过下面类型特征模板简单判断哪种方式开销更小：","启用和禁用函数模板","启用和禁用特化的类模板","和19.6.2节中使用宏定义模板最相近的方法是使用19.4.3节中的isvalid()：","和20.3.2一样，可以通过引入默认模板参数来匹配特化的类模板，本节中以实现一个字典为例：","和下面的调用代码：","和前一节类型操作算法对应的值算法如下：","和前面的类模板一样，非类型模板参数也是可以有默认值的。","和变参函数的匹配，任意参数都可以和变参函数匹配（除了具有非平凡的构造函数的类类型）","和常量表达式关联的模板","回到第1步，引用bestmatchinsett::type得到最终结果","回到第2步，decltype中的推导会根据重载解析规则选择最匹配的match()，最终推导出bestmatchinset<>::type的类型","因为c++不允许在函数定义中再定义函数，所以不能在位置2和位置3插入实例化的f(int)。因为g(int)的定义在位置1处不可见，所以实例化的f(int)不能插入到位置1，只能插入到位置4。","因为dequestack就是stack>，所以f2()和f3()等价，因此使用stack>推导t","因为elem没有使用，所以也可以写为下面的形式：","因为优化后的元组是私有继承的方式，所以需要将get()声明为友元。","因为运算符不是bignumber的成员函数，而是定义在命名空间bigmath中的函数，所以max()无法解析它，这就需要应用依赖于实参的名称查找（argu","因为这个模板只用在decltype和sizeof，所以标准库并不提供定义。原文：","因此下面的代码是错误的：","固定类型特征","在c++11中，这个对象必须是可以被外部链接的","在c++11之前，第一行会被解释为取出y::c并且和::c进行两次的比较，最终输出0；第二行会被解释为y::c>::c，最终输出3。不过从c++11开始，两行的输出都为0。","在c++11之前，语句t","在c++14中，这个对象必须是外部链接或者内部链接的","在c++17中也可以写为下面的形式：","在c++17之前，即使实例化时使用的模板中包含默认参数，也要保证模板的模板参数中的参数数量和实例化时使用的模板需要的参数数量相同，而在c++17中解除了这个限制。原文：","在c++17之前，推导规则仅限于函数模板和成员函数模板，对于类模板必须显示指定实参：","在c++中，泛型编程基本等价于模板编程，就像面向对象编程基本等价于使用虚函数一样。c++标准模板库（standard","在一个翻译单元中，可能存在多个实例化后的类模板和函数模板，编译器只保留第一个实例化的类模板，但是保留所有实例化的函数模板，同时不去检查这些函数模板是否是完全一致的。在实际的编译器中，很多编译器简单的将实例化的函数模板插入到翻译单元的最后。","在上面的例子中：","在上面这种内联的形式中，重载的运算符并不是函数模板，而是一个实例化的普通函数。原文：","在下面的例子中，quickexchange()并不能保证语义一致性：","在下面的例子中，如果没有.template，则to_string后面的会被编译器解析为小于比较运算符（目前好像感受不到作用）：","在下面的例子中，实例化后的s被插入到位置1，s被插入到位置2a，f(double)被插入到位置2b：","在下面的情况下，&&不会被解释为转发引用：","在两阶段查找的第一阶段，因为g1(t)是一个依赖型名称，所以会应用普通查找规则进行查找，但是此时g1(t)定义不可见，因此名字g1(t)是无法解析的。当将实例化的f1(int)的定义插入到位置2时，因为int类型不和命名空间相关联，所以g1(int)无法应用adl规则进行查找。","在两阶段翻译的第一阶段，要保证能够找到undeclared(t)和undeclared()的声明，同时static_assert(false,","在传统的设计模式中，桥接模式（bridg","在作为模板参数的情况下一般具有默认值，调用时基本不需要提供模板实参，见19.1.3","在使用模板时，编译器会通过名称查找规则自动找到模板定义并将生成的模板代码插入到合适的位置，这一过程不需要程序员参与，但是c++也支持通过template关键字实现显示的插入生成的模板代码：","在使用这种条件模板时，一定要使用对应的语义，如str类型可以转换为std::string则模板定义有效，而不能是str类型不能转换为person。原文：","在动态多态下，抽象类中包含的是实现类的指针，而在静态多态下，抽象类中包含的是实现类的对象。","在同一行使用auto定义多个变量时，仅当变量类型一致时才是合法的：","在基类中调用派生类对象的接口要求派生类中的实现是public的，为此可以定义访问类iteratorfacadeaccess，然后在listnodeiterator中将iteratorfacadeaccess定义为友元来解决这个问题：","在头文件中声明类和定义类型","在头文件中定义模板","在定义类的成员函数时，需要指出这是一个模板，所以前面要加上template。","在定义阶段检查语法错误、和参数类型无关的类型错误和断言","在实例化的过程中会报错，因为模板中使用的是!=运算符，而不是==。解决办法是重载!=运算符，或者修改实现（但最好不要这么做）。同样的方法也可以测试==运算符转换为bool类型的要求。","在实例化阶段检查所有的错误","在引入了推导指引的情况下，类模板的每一个构造函数都有隐式的推导指引。如果想要禁掉某一隐式的推导指引，可以将相关构造函数写为这样子：","在引入表达式模板之前，先看一个数组运算的例子：","在当前的标准下，即使模板参数有默认值，除非其后面的模板参数均使用默认值，否则必须显示指定模板实参，未来可能纳入标准的一个规则是类似c结构体的指定初始化：","在我的机器上输出为：","在指定了返回类型r的情况下，返回类型就是r，而当未指定返回类型时（也就是r仍然为默认模板实参computedresulttype，参见26.2），就要推导可识别联合体中所有可能类型的值调用访问函数的返回类型的公共类型。","在推导返回类型的过程中，如果a和b不能相加，则编译器会因为实例化plusresultt::type失败报错，因为此时是在实例化类成员的过程中，而不是在代换的过程中，所以sfinae规则并不适用。原文：","在有多个模板参数的情况下，只对部分参数进行特化也是偏特化：","在有序类型列表中插入类型的模板insertsortedt<>依然是通过递归的方式实现的：","在没有constexpr之前，通过元编程计算平方根的方法为：","在注入类名称的情况下禁用类模板参数推导","在现代c++中已经废弃了。","在第一个quickexchange()后，p和a2.data指向同一缓冲区，如果保证语义一致性，应该这样写（虽然有bug）：","在第一阶段，非依赖型名称通过普通查找规则或者adl规则进行查找，依赖型非受限名称也会被查找，但是不作为最终结果","在第二阶段，会查找依赖型受限名称，第一阶段中查找过的依赖型非受限名称会再次使用adl进行查找","在类型列表首部添加一个新的类型：","在类模板内部，可以使用t来声明和定义任何成员变量。类的类型为stack，所以当需要使用类的类型时需要写明stack（除非t可以被推导）。但是在类的内部也是可以直接使用类名字stack的，所以下面两种定义拷贝构造函数和拷贝赋值运算符的方式是一样的，书中推荐第一种：","在编译时被计算的整型常量","在编译的过程中不实例化模板，并使用预链接器来进行链接。如果发现未实例化的模板，则去重新编译模板代码，重复上述过程直到链接成功。","在调用函数模板时保证编译器可以看见所有的重载版本","在转发引用的情况下不考虑值类型","在这个例子中，如果select是一个函数模板，那么就应该是显示指定的模板实参；如果是一个显示的模板实参，那么select就应该是一个函数模板，这就出现了先有鸡还是先有蛋的问题。原文：","基于crtp的混入","基于iteratorfacade<>的链表迭代器如下所示：","基于sfinae规则实现的偏特化也可以用于判断类型是否可以被默认构造：","基于sfinae规则实现的函数重载可以用于判断类型是否可以被默认构造：","基于sfinae规则实现的泛型lambda表达式也可以用于判断类型是否可以被默认构造，但是很复杂：","基于sfinae规则的模板还可以用来侦测某个类中是否定义了某个成员。","基于sfinae规则的泛型lambda表达式","基于sfinae规则的类型特征模板","基于sfinae规则的类型特征模板可以用来判断是否可以进行类型转换：","基于类型属性的类模板特化","基于类型属性的重载","基本操作","基本每一次调用forupto()都会实例化新的函数，这会增加代码体积，解决方法是不实现为模板而是通过函数指针：","基本设计","基类variantstorage为可识别的联合体提供存储，其余基类variantchoice...为可识别联合体提供标识——这是一种嵌套的展开参数包的方式，展开后将继承多个variantchoice<>，其中第一个模板参数是types中的每一个类型，第二个模板参数是types中的所有类型。将type...作为第二个模板参数传入到variantchoice<>中以使getdrived()返回派生类的引用用到了crtp技术。","基类成员指针到派生类成员指针的转换","声明但未定义的类","声明和定义（declar","声明对齐时","声明（declaration）：只引入名字，不提供细节","处理模板中的编译错误被推迟到了链接阶段，排错成本提高","处理派生类集合的代码很优雅","复杂类型可以通过递归的方式转换为多个可推导的上下文（deduc","外观模式","外观模式中的基类定义了大量或者全部的接口，这些接口借助派生类的接口实现。外观模式可以通过crtp实现，本节中给出了一个迭代器外观类的例子：","多个参数包可以同时展开：","多条件下的算法特化","多模板参数","多重和嵌套参数包展开","大多数字面值","大多数情况下要通过模板参数传递才能发挥作用","大括号初始化的方式也适用于成员变量初始化、类内初值和函数的默认参数。","奇异递归模板模式","奇异递归模板模式（curious","好像在c++20中才有，书上说了一段没什么实质内容的话。","如果t类型没有移动构造函数（或者拷贝构造函数），则表达式t(std::declval())是非法的，也就无法进行编译。借鉴19.6.3中的方法，可以在侦测移动是否抛出异常之前侦测是否可以移动：","如果x为xvalue，则为type&&","如果x为左值，则为type&","如果x为纯右值，则为type","如果一个函数更为匹配，那么每一个参数都至少应该和另外一个函数一样或者更为匹配。原文：","如果不对内置类型进行初始化，则其初值为内存中的残留值。c++提供使用大括号进行值初始化（valu","如果不知道数组的长度，那么只能通过重载或者偏特化的方式定义模板：","如果两个翻译单元中存在相同函数的定义，则在链接过程中就会发生错误，对于模板也存在同样的问题，解决办法包括贪心实例化、查询实例化和迭代实例化。","如果两个翻译单元都实例化了同一模板函数，则可能会出现重复定义","如果两个重载函数模板只有尾部参数包不同，那么编译器优先匹配没有尾部参数包的版本，所以上面的代码也可以这样实现：","如果为每一个简单的操作都实现类似的函数则要编写很多代码，解决办法是将访问函数作为参数：","如果仅对类的静态数据成员和成员函数进行声明，应该写为：","如果传递给std::invoke的可调用对象是成员函数指针，则会将可变参数中的第一个参数作为this指针，后面的参数照常传递。","如果使用预编译头，要保证头文件的包含顺序是一致的","如果再为每个点增加颜色和标签等属性，同时还要保证可以在polygon中使用扩展的点，则可以从point派生出新的labeledpoint，并将polygon泛化为模板：","如果函数模板2的推导类型和参数列表1完全匹配，但是反过来不能，则得到参数列表1的函数模板更为特化，否则两个函数模板之间不存在更为特化的偏序关系","如果函数模板中的参数为传引用类型，同时重载了传c字符串类型的版本，就会出现问题：","如果原地析构正常完成而原地构造抛出了异常，则可识别联合体将处于未存储值的状态，例子如下：","如果参数包为空，一般来说会抛出异常，但是也有例外：","如果参数需要修改，同时可以考虑禁掉推到类型为常量引用","如果可行函数集合中既包括静态成员函数，也包括非静态成员函数，则重载解析规则会忽略this参数。","如果基类中含有类模板参数，使用成员变量或者成员函数时最好带上this：","如果实参是指针或者成员指针类型，则可以被隐式转换为被const和volatile修饰","如果将例子中的myint更换为int，就会报错：","如果将每一个模板参数都使用enableif进行限制，则当模板代换失败时sfinae规则会起作用，不会导致编译失败，这样的模板称为可安全实例化的模板（instanti","如果将第二个参数定义为模板的模板参数，就可以只写一遍元素的类型：","如果形参是传引用类型的，则形参在被const和volatile修饰的同时实参可以不必","如果形参类型为std::initializer_list，且实参中所有元素的类型一致，则t可以被推导：","如果性能瓶颈确实是性能瓶颈，考虑使用常量引用","如果想要获取某种整型的无符号类型，可以将模板写为下面的形式：","如果是函数模板，还包括模板形参类型和模板实参类型","如果是函数模板，还包括返回类型","如果是成员函数，还会包含左值、右值引用限定符","如果有下面两个函数模板定义：","如果模板中有多个参数，且每个参数都有默认值，当前标准并不支持指定初始化靠后的模板参数，所以下面的代码得不到想要的结果：","如果模板参数是传值的，那么参数会退化为原始类型","如果模板参数被推导为引用类型，那么可以使用std::decay来去掉引用：","如果模板需要传递参数，考虑使用转发引用","如果没有被作用域运算符::修饰，就当做友元函数声明，也可以进行定义","如果直接写为t::subtype*","如果相同形参类型的推导结果不一致，则推导失败。如果形参是传引用的，则实参被推导为引用类型；如果形参是传值的，则实参会发生类型退化（数组和函数转换为指针类型，const和volatile被丢弃）。","如果第1阶段没有匹配的函数，则尝试将初始化列表分割为多个参数来构造对象","如果编译器实现了空基类优化，则输出相同（但是不为0）；否则不同，在我的机器上输出为：","如果编译时值列表中的值都是同一类型的话，那么也可以使用下面的模板：","如果表达式时过期值，则decltype(e)结果为t","如果表达式是右值，则decltype(e)结果为t&&","如果表达式是左值，则decltype(e)结果为t&","如果被作用域运算符::修饰，则根据匹配规则匹配友元函数","如果要判断某操作是否会抛出异常，例如移动构造函数是否会抛出异常，可以使用下面的模板：","如果要处理const、volatile和引用等修饰符，还需要很多特化版本，具体见书。","如果要对元组中的元素按照大小进行排序进行排序，可以先对下标进行排序，然后再应用select()：","如果访问函数有返回类型，就要保证无论可识别联合体中是什么类型，访问函数的返回值都可以转换为该类型，否则将不能编译，为此需要实现visitresult<>：","如果还需要判断两个functionptr<>是否会调用同一函数，就需要为functionptr<>重载==运算符：","如果这个初值是一个字符串常量（例如stack","字符串字面值","字面值运算符模板","存储","完整代码","完整和不完整类型","完整程序如下：","完美匹配导致的模糊调用","完美匹配，形参和实参类型一样，或者形参类型是实参类型的引用（也可以包含const或者volatile）","完美转发","完美转发临时变量","完美转发是为了保证在模板实例化时仍然保持参数的属性：","完美转发的实现","完美转发的成员函数模板可能比普通的函数匹配度更高","定义专用的模板函数","定义了isempty<>、frontt<>、popfrontt<>、pushfrontt后就可以进行插入排序了：","定义了这些基础操作后，就可以进行插入排序了：","定义多重继承的基类时","定义新类型rt来表示返回类型，但是编译器是不能根据参数推导rt的，所以需要在在实例化过程中显示指出返回类型。","定义模板","定义（definition）：提供具体的细节","实例化bestmatchinset<>触发实例化bestmatchinsett<>","实例化bestmatchinsett<>时会检查type的定义，这会触发decltype中的推导，从而触发实例化matchoverload","实例化matchoverloads会递归实例化基类，然后在每个基类中定义match()，并在派生类中拉取基类的match()","实例化函数模板","实例化类模板时将首先匹配主模板，在找到了主模版后，如果存在部分匹配的偏特化类模板，将实例化偏特化类模板。原文：","实例化类模板时需要传递具体的类型作为类模板参数","实例化部分模板定义的过程称为部分实例化：","实参和形参的匹配程度优先级如下：","实现关系运算符时，一般会只实现==和，!=、、>和>=都通过组合来实现。如果很多类型都有这种需求，则可以泛化为模板：","实现泛型库的其它方法","实现类型退化","实际上27.2.4的分析并不是正确的，因为[]的在递归的过程中会进行函数调用，但是因为函数都很短小，所以内联可以解决问题。同时表达式模板还要求赋值的过程是不能覆盖后续计算需要的原数据。","对不同单位下的值运算进行混合元编程","对于24.2.5中的变换算法，还可以利用参数包展开来进行优化：","对于c风格字符串类型的非类型模板参数，由于会将字符串转换为地址，而两个相同的字符串也可能有不同的地址，这就很难区分实例化后的两个模板是否是同一个实例","对于c风格字符串，也可以写成下面的样子：","对于isprime::value，模板实例化的过程如下：","对于下面的初始化过程：","对于两个左值x和y，在表达式x","对于为什么需要第二个可变参数特化模板我也没看懂。原文：","对于值特征，也需要显示写出::value，为了简便可以使用变量模板来代替：","对于函数模板和类模板，模板参数也可以是普通的数值。","对于函数模板，主模板之间可能重载，所以偏特化的模板该对应哪个主模板呢？","对于双向迭代器，可以在线性时间内前进和后退","对于可变参数模板，形参类型可能和多个实参类型对应：","对于成员函数，由于其中存在隐式的参数this，无法通过前面的方式进行调用，所以c++17提供了std::invoke来解决这个问题：","对于普通类，默认注入的就是类名称，但是对于类模板，每次实例化都会产生不同的类型，所以类模板名称分为当前实例化类型（current","对于没有<>的友元函数声明：","对于浮点型，也是很难确定两个实例是否相等，因为浮点数存储存在误差","对于第一条推导指引，t被推导为std::string，所以在调用时需要将参数转换为std::str","对于类模板，同样会将类名称默认注入到作用域中：","对于类模板，模板参数包只能在最后。而对于函数模板可以有多个模板参数包，但是要保证用来分隔模板参数包的模板参数具有默认值或者可以被推导：","对于输入迭代器，只能在线性时间内前进","对于随机访问迭代器，可以在常量时间内前进和后退","对前几个素数的编译时值列表求积的代码为：","对对象类型的右值引用的强制类型转换的结果","对象不能拷贝","对象和函数的左值引用","将enableif作为默认模板参数","将元组像参数包一样展开","将函数声明为inline并不一定真正进行内联，而只是让同一个函数可以被定义很多次，对于模板来说也是这个道理。","将布尔值转换为类型","将布尔值转换为类型的好处是可以在编译时实现函数分发，相比于向函数中传递true和false从而实现在运行时执行不同分支的代码的方式来说会更快一些（我觉得是这样子）：","将成员作为基类","将栈的大小设定为固定值可以避免内存管理的问题，但是模板作者并不知道设定为多大是合适的，所以可以提供一个非类型模板参数来让用户设定栈的大小：","将模板定义在头文件中的方式就是模板的包含模型（inclus","将类型特征作为模板参数","将表达式作为模板实参","小结","嵌入类和成员函数也可以是模板，参见5.5","嵌套的模板参数包也是合法的：","嵌套类模板","左值仍然是左值","左值到右值的转换","左值引用","左值的例子：","左值（lvalue）是在内存或者寄存器中的值。起初这种说法来源于c语言中在=左边的值，l表示left","巴顿","带静态函数的类","常量仍然是常量","常量可以传给非常量引用，此时推导结果中会包含const，例子如下：","常量整数，也包括枚举类型","常量时间的get()","常量表达式","并对外层类模板进行了特化：","并改进min()的定义：","并用如下代码改写模板：","序列累加的例子","应用","延迟求值","异常部分","引入迭代器标签后就可以正确解析了：","引用折叠规则","引用折叠规则适用于这里。由于void是不完整类型，所以需要实现以下特化（这里只是addlvaluereferencet<>的例子）：","引用的内部机制仍然是传地址，但是不能保证函数不会修改该常量，因为const只是编译期间的检查。根据类型推导规则，传引用不会丢弃const和volatile，传数组时类型信息会包括数组长度。","引用类型","引用类型无法默认初始化","引用类型的变量","引用类型的模板形参","引用类型的非类型模板参数非常容易出错：","引用绑定到纯右值","当compare::value为true时，在排序后的类型列表中t会出现在u的前面，测试代码如下：","当lambda表达式的参数类型为auto时，就变成了泛型lambda表达式，编译器处理的方式依然是创建一个闭包类型，但是是为该类型重载了函数调用运算符()成员模板：","当x不支持运算符时，编译器将给出更简单的报错信息。","当一个类重载了函数调用运算符，或者可以隐式转换为函数指针或者函数引用类型时，可能导致模糊调用：","当传递重载了调用运算符()的类对象funcobj时，op(*current)等价于op.operator()(*current)，注意要将调用运算符声明为const的","当使用tricki","当使用如下代码实例化上一节的计算平方根的代码时：","当函数参数包args为空时，sizeof...(args)为0，可以不用继续实例化print()，递归就可以结束了。","当参数包为空时，&&运算符结果为true，||运算符结果为false，,运算符结果为void。","当参数包展开时，还要保证参数包展开后相同形参的推导结果一致，见下面两个例子：","当向largesttypeacc<>传递空类型列表时会出现编译错误，改进方法如下：","当在代换的过程中不会产生错误代码时，函数模板才可能被实例化","当成员函数模板作为构造函数时，可能会比普通的构造函数匹配度更高：","当推导指引中带有explicit关键字时，只有直接初始化的情况才可能有效。","当推导表达式的类型时：","当模板代码嵌套层数过多时就会引发难以查找的错误：","当模板参数为传值类型时，会发生类型退化：","当模板参数为传转发引用类型时，推导规则还会考虑实参是左值还是右值，如果实参是左值，推导结果为引用类型，否则为原始类型：","当模板参数为非常量引用时，需要注意参数可能被const修饰","当模板参数是c风格字符串且传引用类型类型时，考虑使用std::decay","当模板参数被声明为转发引用时，要保证转发到的模板的调用参数类型为传引用类型","当模板形参也可以用模板替代时，该模板参数就是模板的模板形参。","当模板调用参数为传引用类型时，由于不会进行任何转换，所以数组的推导类型也会包括数组的长度信息，因此如果要传递两个长度不同的数组，模板要写成下面的样子：","当然也可以为默认模板参数提供具体的参数：","当然非类型模板参数也是可以有默认值的。","当用auto作为函数模板的返回类型时，函数体必须被实例化才能推导函数的返回类型：","当用int*实例化f(t)且用int实例化f(t*)时，将会得到两个相同的函数，这两个函数也是可以共存的，例如下面的代码：","当用初始化列表构造对象时，重载解析分为两个阶段（例外的情况是初始化列表为空时会将跳过第1阶段）：","当类型名称中包含模板参数时，为了避免歧义，需要使用typename显示指出后面的是类型名称。必须要使用typename作为前导的情况要满足下面的四个条件：","当类模板中存在嵌入类时，二者更加难以区分：","当编译器已经通过模板定义生成了特化版本后，将不能再声明全特化版本：","当表达式为假（t类型的大小小于等于4）时，std::enable_if::type是未定义的，但是根据模板的“代换失败不是错误（substitut","当表达式为真时，如果没有第二个模板参数，则std::enable_if::type是void，否则就是第二个模板参数的类型","当这四种模板声明在类中时，就变成了：","当都通过模板参数传递类型特征和策略时，一般将策略放在类型特征之前，这是因为策略可能不使用默认模板实参，而类型特征一般使用默认模板实参。","当需要const转换或者引用转换时，如果普通函数不能精确匹配，则重载解析过程会尝试匹配函数模板；如果其余方面都相同，则重载解析过程会优先匹配普通函数，例如下面的代码：","当需要将模板实例化的所有结果都定义为友元时，需要使用友元模板：","当非类型模板参数是指针或者引用时，指针指向的对象或者引用引用的对象不能是字符串字面值、临时变量、成员变量或者其它子对象。不过随着演变到c++17，这些限制已经慢慢的放开了，所以可以精简为下面的几条：","形参类型为void(t,","形参类型可以是基类类型，而实参类型是派生类类型","循环中包含跳转，所以编译器可能会进行循环展开优化，从而形成一系列的乘法求和运算，这种优化也可以通过元编程来实现：","性能方面的考虑","总结","惰性实例化","想当然的会认为sqrt::value的递归过程为：","感觉很复杂，最有用的一条应该对于受限名称，先在当前实例化类和非依赖型基类中查找，最后在依赖型基类中查找。","感觉是不能在运行时计算的，因为编译后的这些信息都丢掉了。这些信息类似于调试信息，如果带着的话可执行文件将变大。","成员函数push()的定义也要进行相应修改：","成员函数中的隐含参数","成员函数中的额外参数","成员函数也可以是模板，下面的例子为stack<>定义了一个拷贝赋值运算符模板：","成员函数定义","成员函数指针","成员函数模板","成员函数模板可以被特化或者偏特化：","成员函数模板可能会比编译器隐式合成的构造函数和赋值运算符匹配度更高","成员别名模板","成员变量的默认初始化部分","成员指针类型","成员指针（类的非静态数据成员和非静态成员函数），此时非类型模板参数的类型必须是成员指针类型","成员模板的全特化","我本以为引用是一个很好的语法，但是看了这一章后我觉得引用会带来很多的问题，而且正是这些问题使得c++变得更加复杂，所以我开始怀疑：引用到底是不是一个好的语法？","或者不借助typelist<>，直接实现valuelist<>：","或者在下面的情况下可以传引用：","或许将左值中的l理解为局部化变量（localiz","所以作者给出的建议就是多用几个编译器试试。。。","所以只需要实现variantchoice<>的构造函数：","所以可能需要把代码写成这个样子：","所有迭代器应该都支持dereference()、increment()和equals()","手动实例化","折叠表达式","拷贝初始化最终转换为了26.4.1中的初始化：","拷贝和移动初始化","拷贝构造和初始化列表","拷贝次数过多主要是由于pushback()的递归，每次在构造tuple::tail时都会发生拷贝。更有效率的方式是使用maketuple()进行构造，类似下面的代码：","指向对象、函数和成员的指针","指针到bool类型的转换","指针类型","指针解引用后的对象","指针解引用的结果","指针转换","按需实例化","排除模板错误非常麻烦","接下来会调用array的成员模板operator=，循环中的expr_rep[idx]","接口隐藏","推导所有可能类型的公共返回类型的模板代码为：","推导指引","推导指引中的explicit","推导指引可以理解为当用类型t初始化类s时，模板参数的类型就为t。","推导过程的一些限制","推荐的模板参数声明方式","提取操作从可识别联合体中获取某种类型的值：","提取策略的类型特征模板","提高运行效率的方法之一是尽量避免在内存中复制值，为此编译器将假设某些值在一段时间之内是不会变的，但是可识别联合体中的原地析构和构造可能让编译器做出错误的判断，从而引发各种bug。","插入排序","插入排序的思路是首先取出类型列表的首部类型，然后对剩下的类型列表进行排序，最终再将首部类型插入到合适的位置：","改进后的代码为：","放入std::initializer_list中的纯右值","数据成员","数组元素类型是不完整的","数组类型","整型或者枚举类型","无法被推导的模板实参（例如函数返回类型）一般会被放在模板声明中靠前的位置：","早期c++只支持枚举类型作为元编程中的常量，例如下面计算3的幂的例子：","早期c++无法对函数模板进行重载，巴顿","早期的解决办法是使用运算赋值运算符来避免创建临时量以节省构造和析构：","显示实例化","显示实例化声明","显示指定函数模板实参","显示指定模板实参类型后，就省略了推导参数类型的过程，同时会将实参进行隐式类型转换。","显示特化","显示特化一般是指将全部的模板形参代换为模板实参后得到的具体实现代码，也称为全特化（full","显示的推导指引只用来推导","显著增加链接时间","普通非内联函数（包括成员函数）、非内联全局变量和类静态成员在整个程序中只能定义一次","更多类型的非类型模板形参","更宽松的typename关键字规则","最后一个需要注意的是定义的顺序：","最后是一个值类型的例子：","最后是测试代码：","最后，auto也可以用于推导函数返回类型非类型模板参数。","最早由erwin","最有意思的是x7。explicit修饰的类型转换只在条件表达式、逻辑运算符和条件运算符?","最简单的方式还是将元组拆分为头和尾的形式进行存储：","最终虚函数equals()实现为：","有一些特殊情况不适用于显示实例化声明：","有两种方法可以禁止将常量传递给以非常量引用作为参数的函数：","有了iteratorfacade<>后可以很容易的将构建迭代器适配器，例如通过对象的迭代器构建成员的迭代器：","有了反转算法后，就可以实现弹出最后一个元素的算法了：","有了完美转发，也可以将接受std::string的构造函数写成模板形式：","有些迭代器还可以后退，所以现在的需求变成了：","有时需要用template关键字显示指出后面的名称是模板：","未标准化的内容，不知道在说啥。","未绑定是指参与多态的类型的接口是不固定的","本来编译器是不需要为pow3::value分配地址的，但是当向void","本章中实现的functionptr<>虽然是模板，最终却是通过bridge变量实现的函数调用，完整了静态多态到动态多态的转换，这样做是否值得需要同时考量虚函数调用的开销和调用函数对象的开销。","本章中的实现的variant<>在实例化时不能使用相同的类型，但是std::variant可以。","本章实现了functionptr<>，类似于std::function。","本章实现了tuple<>，类似于std::tuple。","本章接下来实现一个可以替代std::funtion的funtionptr<>：","本节中首先定义了一个类模板：","本节开头定义的模板中还包含内嵌类，只可以逐次特化：","术语","构造valuelist<>的makeindexlist()代码如下：","构造函数","构造函数中初始化基类时","析构","析构时需要根据当前存储的类型释放缓冲区：","析构的最后将variantstorage::discriminator设置为了0，表示可识别联合体中未存储任何类型的值。","枚举值和常量值","枚举类型的基类和枚举值是未定义的","某些情况下不会发生拷贝和移动","查找算法","查找类型列表中最大位宽的算法如下：","查询和提取","查询实例化","查询操作判断可识别联合体中存储的是否是某一种类型的值：","标准库中使用可变参数模板的例子：","标准库中基于类型属性的重载","标准库中提供的某些模板一般只会被特定的类型实例化，其中就用到了显示实例化声明，例如std::basic_string（也就是std::string）：","标准库中的显示实例化","标准库中的类型特征模板","标准库中迭代器的分类如下：","标准库提供了类型识别和类型修改相关的模板（type","标准的发展方向是放宽typename关键字的限制，例如在之前不允许使用typename的地方可以使用typename关键字（c++11已经实现），以及在编译器可以推导出受限依赖型名称是类型时省略typename关键字（书中列出了几种正在被讨论的情形，但感觉只是语法糖而已，还是规范一些好）。","栈类模板实现","根据上面定义的作用范围，下面的代码会报错：","根据以上需求，实现的functionptr<>如下：","根据以下规则形成参数列表：","根据名称形成重载函数集合","根据推导指引，对于数组定义std::array","根据某种条件实例化主模板或者特化的模板称为分支模板，可以统一写为下面的形式：","根据类型推导规则，传值会丢弃const和volatile，数组会退化为指针。","桥接接口","桥接静态和动态多态","模块","模拟类型退化的模板为：","模板中的名称解析","模板中的复杂问题","模板偏特化是为部分模板参数提供特殊实现，例如为t*类型的模板参数进行偏特化：","模板偏特化（partial","模板元编程","模板参数也可以是非类型的","模板参数包","模板参数包也可以用来偏特化：","模板参数包的推导","模板参数推导","模板参数推导的特殊情况","模板参数推导过程","模板参数推导过程就是用实参类型a去确定形参类型p的过程。原文：","模板只是用来转发","模板只能被声明和定义在命名空间或者类声明的内部","模板和内联","模板和多态","模板和继承","模板和链接","模板在实际中的应用","模板实例化","模板实例化代码插入位置","模板实例化代码插入位置（point","模板实例化是用模板实参替代模板形参得到常规类和常规函数的过程，得到的结果为模板的特化","模板实例化模型","模板实例化（instantiation）：通过代换生成类和函数定义的过程，根据是否代换全部参数分为完整实例化和不完整实例化","模板实参","模板实参和模板形参（templat","模板实参指定初始化","模板实参的等价性","模板实参（templat","模板对于开发者和使用者都会带来问题：对于模板的设计者，该如何保证模板针对任意类型的实参都有效？对于模板使用者，实例化出错时该如何进行调试？本章将模板实参的限制分为了两类，第一类是语法限制（syntact","模板形参","模板形参（templat","模板是编译时实例化的，所以可以在编译时将模板递归的展开，从而生成程序，例如下面的素性判断程序：","模板构造函数和模板赋值运算符不能代替普通的构造函数和赋值运算符","模板标识（templat","模板特化","模板特化是为类模板提供某种模板参数类型的特殊实现，例如为std::string类型的模板参数进行特化：","模板的包含模型","模板的包含模型是最广的应用方式","模板的未来","模板的模板参数","模板的模板参数（templat","模板的模板实参","模板的模板形参","模板的默认模板实参","模板的默认链接方式是extern","模板相关术语","模板类（templat","模板调用参数不为引用类型时，数组类型会转换为指针类型","模板调用参数为传引用类型时，不会进行任何转换，相同参数类型的推导结果必须一致","模板调用参数为值类型时，修饰符const和volatile将会被丢弃，引用转换为引用的类型、数组和函数转化为指针类型，相同模板参数类型转换后的推导结果必须一致","模板调试","正常声明的模板称为主模板（primari","此外这些规则是在模板参数推导之后起作用的：","此外，auto只推导主类型，因此const、指针等需要显示添加：","此外，实例化类模板时还需要虚函数的定义，否则会出现链接错误：","此时len(p)会匹配最后一个函数模板，但是len(x)仍然会匹配第二个函数模板，还是无法避免触发编译时错误。","此时类模板的定义如下：","此时要保证返回类型和参数a的类型是一致的，但是如果返回b的话，则就会发生类型转换。c++提供了三种方法来解决这个问题。","比较","比较操作判断两个元组类型是否相同：","没什么可写的，推荐用using而不是typedef。","没有使用的具有默认实参的形参和没有使用的可变参数部分将被忽略","没有完整实现接口的类型也可以参与多态","没有定义长度的数组","泛化的函数指针","泛型lambda表达式","泛型lambda表达式只是成员函数模板的一种简便写法，例如：","泛型lambda表达式和成员函数模板","泛型代码无法解决的问题","泛型库","泛型编程","泛型编程是指用泛化的参数来为算法提供抽象的表达。原文：","注意int20stack中的size_type是unsign","注意replicatedindexlistt<>的主模板和特化模板之间的模板形参有区别。","注意上面的声明不能出现在函数或者块作用域中。下面是使用方式：","注意只能对类模板进行偏特化，如果要在编译期间对函数模板中的执行路径进行选择，可以使用：","注意同时也要禁用其它重载函数，否则会导致模糊调用。","注意在c++14中要写为这样子：","注意在void","注意处理模板参数被显示的指定为引用类型的情况","注意模板是否可以处理不完整类型","注意，类型提升转换的优先级高于标准转换的优先级：","注意：模板中的t&&和普通函数中的x&&是不一样的：","派生类指针到基类指针的转换","浅层初始化","测试代码如下：","测试代码：","测试类型","浮点类型","浮点类型和类类型是不能作为非类型模板参数的，对于指针和引用的限制在3.3节","深入模板","混入","混入也可以和crtp结合来进行定制：","混入也可以将成员函数变为虚函数，但是感觉很混乱：","混入（mixins）是一种通过反转继承关系的方式来对类型进行定制的方法。假如现在有一个point类和polygon类：","混合元编程","混合元编程的另外一个应用是对具有不同单位的值求和，具体为在编译期间确定求和结果的类型，并在运行期间进行计算，例如：","混合元编程（hybrid","添加引用","然后从c++98开始，可以使用类内静态常量参与元编程计算：","然后将模板修改为：","然后通过算法transform就可以实现将source中的每个值加5后存储到dest中：","特化和语义一致性","特化和重载","特化（specialization）：完整和不完整实例化模板得到的结果","特殊成员函数模板","现代c++中的元编程","现在只需要确定return后面的decltype的推导结果就可以了。注意到这是一个函数调用，参数为nullptr，将匹配isvalidimpl(void*):","理解模板编译错误","生成（generation），在编译器期间生成额外的代码","用auto作为递归函数的返回类型时，递归结束的情况应该写在前面，以让编译器可以推导递归函数的返回类型：","用const和volatile修饰的上面的类型","用同样的方法也可以侦测类中的数据成员和成员函数：","用户代码调用iteratorfacade<>中的各种运算符，而这些运算符调用派生类的接口实现：","由于auto和模板参数推导的原理一致，所以右值引用将解释为转发引用：","由于char所表示的数据范围较小，累加的过程可能存在溢出或者截断，所以会出现负值。当然可以通过将返回类型也作为模板参数解决这个问题，但是会比较麻烦。","由于constexpr的存在，上述代码将在编译时计算，最终结果类似于下面的代码：","由于foreach<>中的第三个参数是传值的，传递函数对象func会退化为指向该函数的指针，因此第一个调用和第二个调用时一样的","由于get(*this)是编译期间确定的值，所以参数也必须是一个编译期间的值。可以发现ctvalue<>的写法有些复杂，所以可以借助字面值运算符模板：","由于node是不完整类型，cont模板要能够处理不完整类型：","由于std::is_move_constructible必须用完整类型实例化，同时模板只在需要时才进行实例化，所以第二种声明方式可以使得cont不会报错。","由于std::move不是模板，所以要用std::forward来转发潜在的移动语义。","由于tupleelt<>的实现方法是通过继承，因此可以利用派生类到基类的转换实现常量时间的get()：","由于初值仍然为0，所以代码并不正确，有两种方法可以解决这个问题，一个是将初值作为策略的一部分，还有就是仿照标注库std::accumulate将初值作为参数。","由于可变参数模板的一个形参类型会对应多个实参类型，匹配情况就会有些复杂：","由于编译选项的不同，生成的代码可能是不一样的，但是链接器不进行比较","由于该值可以在编译期间被计算，所以isprime::value的最终结果为false。","由于运算符的优先级没有改变，因此编译器的计算顺序如下：","目前只能通过sizeof...求出参数包中剩余参数个数，未来还可能支持下标运算来获取参数包中某个参数。","目前标准只支持尾部的参数包展开：","目前非类型模板参数只能是整型，标准未来可能支持字符串类型和浮点型：","目标文件的体积会变大","直到c++17允许内联静态数据成员后，才解决了这个问题（但是原理书上没说）。","看一个例子：","看到这里我一下子就想起来了标准库中关于时间的模板std::chrono。ratio<>是一个单位类型，ratioaddimpl<>对两个具有不同单位的单位元进行求和得到新的单位元类型。duration表示u单位下的数值，该数值用内置类型t表示，最终的加法是对两个不同单位下的数值进行求和。下面是测试代码：","看完整本书后再回头在看这里，觉得书上解释不是特别恰当。解析t(p,","确定是否存在最匹配的调用目标","移动初始化类似：","移动语义和std::enable_if","移动赋值运算符一般要考虑自赋值的问题，因为当旧值和新值相同时，销毁后赋值的操作可能导致内存问题。不过在可识别联合体中不存在这个问题，因此类型相同时将调用类型的移动构造函数，自赋值的问题将被该类型的移动构造函数解决。","移除const限定：","移除引用","移除类型列表中第一个类型：","移除限定符","空基类优化","空基类优化（empti","空基类的布局","空指针（对于指针和成员指针类型的非类型模板实参）","第1个参数包含泛型lambda表达式，编译器将创建一个重载了函数调用运算符模板的闭包类型：","第1个是使用成员指针运算符","第2个是递归打印的例子：","第2个模板参数类型为typet&&或者typet&&","第2条原文：","第3个模板参数是decltype的推导结果，推导的对象为std::declval()(std::declval()...)。std::declval()会实例化闭包类型，但是并不会实例化函数调用运算符成员模板。std::declval()...将创建一个typet或者typet类型的临时对象，并用该临时对象作为参数调用闭包类型，这时才会实例化闭包类型中的函数调用运算符成员模板，该模板参数类型为typet或者typet。在推导返回类型的过程中，decltype(valuet(x))的结果为int或者int&，当尝试默认构造引用类型时就会失败，编译器转而寻求另一个版本的isvalidimpl<>，这将使得isdefaultconstructible返回std::false_type类型的临时对象。","第3种和第4种转换的优先级比第2种转换的优先级高，第2种转换比第1种转换的优先级高：","第4条原文：","第8条原文：","第一个函数模板中的可变形参和第二个函数模板中的具有默认实参的第三个参数没有使用，所以将被忽略。根据模板参数推导规则，参数列表1为(a1*,","第一个是类型错误：","第一种特殊情况是获取函数模板实例化后的地址：","第一行的写法将产生拷贝，第二行的写法仅在*运算符支持返回引用的情况下才能编译通过，第三行的写法综合了上面两种。为了避免写两遍表达式，从c++14开始，可以写为最后一行的形式。","第一阶段中查找依赖型非受限名称主要是为了判断该名称是否是模板：","第二个auto等价于：","第二个例子是缺少const：","第二种特殊情况是类型转换函数模板：","策略还可以实现为类模板，然后将其作为模板的模板参数：","策略（policy）表示函数或者类型中可以配置的行为（个人认为重点在可配置）","简化的重载解析规则","简单来说，在代换函数模板声明中出现的错误不会被视为错误：","简单的解决办法是再实现一个重载版本：","算法","算法不够高效的原因在于：","算法特化","算法特化（algorithm","类中一般都包含成员，所以可以通过成员指针来判断类类型：","类似std::make_tuple，还可以通过maketuple()构造元组：","类似函数重载一样，未来可能支持类模板的重载：","类型修饰模板可以移除和添加类型中的引用、移除限定符和实现类型退化（decay）。","类型修饰模板（transform","类型元编程","类型元编程（type","类型函数","类型函数是以类型为参数并返回一个类型或者值的函数，如果将sizeof视为函数的话，那么其就是一个类型函数，下面的代码可以认为是sizeof的函数版本：","类型分类","类型列表","类型列表就是存储类型的列表，和std::list类似也可以进行添加和删除等操作，但是区别在于添加操作不会对原始列表进行修改，而是创建一个新的列表，最常见的方式是通过模板实现：","类型列表算法","类型别名","类型可以是完整的，也可以是不完整的","类型名称没有被struct、class、union和enum修饰","类型操作算法","类型擦除","类型模板参数跟在typename和class后面，后续的类型模板参数需要用,分隔，可以=提供默认参数。","类型模板实参","类型模板形参","类型特征","类型特征也可以作为模板参数：","类型特征可以通过模板特化实现：","类型特征和策略","类型特征和策略的区别","类型特征模板","类型特征模板也可以用来判断类型是内置类型、指针类型还是类类型。","类型特征模板的缺点","类型特征模板起作用的原因是定义了类型成员type，所以不得不显示的写出::type来获取类型特征，为了简便可以使用别名模板来代替：","类型特征的解决办法很好的解决了返回类型的问题，但是却不能保证初值total是一个合理值，为此可以再为类型t提供值特征：","类型特征（trait）表示模板参数的额外属性：","类外定义成员函数模板","类模板","类模板也可以被偏特化","类模板参数推导","类模板可以作为模板参数，也就是模板的模板参数","类模板可以特化","类模板名称的注入","类模板和函数模板中","类模板和别名模板","类模板声明","类模板实参","类模板成员的实例化","类模板是一个或者多个类型参数待确定的类","类模板的偏特化","类模板的全特化","类模板的友元函数","类模板的友元类","类模板的定义","类模板还是模板类（“class","类模板通常需要对模板参数类型进行多种操作，这并不意味着模板参数类型应该支持类模板中所有涉及到的在该类型上的操作，而只需要支持必要的操作就可以了。原文：","类模板（class","类的名称以非受限的形式默认注入到类作用域中：","类的调用运算符()应该为const的","类的默认模板实参要出现在靠后的位置，而函数模板没有这个要求，但是都不能重复：","类类型、模板（包括偏特化但不包括特化）、内联函数和变量在每个翻译单元中只能定义一次","类类型，例如std::string","索引列表","索引列表借助上一章的valuelist<>实现：","索引算法","累加模板的过程可以抽象为遍历序列中的每个元素，并和当前得到的累加值进行加法求和，这里将求和操作称为策略（policy），因此可以将模板策略参数化，通过模板参数来控制求和、求积的过程：","累加算法","累加算法也可以用来查找类型列表中位宽最大的类型：","累加算法可以在遍历类型列表中的每一个类型的过程中使用类型函数f进行计算：","纯右值数组转换为指针","线程库，例如std::thread","组合使用类型特征和策略","经用户定义转换后的匹配，也包括隐式转换，例如通过构造函数转换","经过标准转换后的匹配，例如整型转化为浮点型，派生类转换为公有继承的基类","经过简单转换后的匹配，例如数组退化为指针，指针变为const指针","经过类型提升转换后的匹配，即位宽较小的类型提升为位宽较大的类型","绑定是指参与多态的类型的接口由基类固定","结构化绑定（structur","结果类型模板","结果类型模板给出多个类型的运算结果。","继承和类模板","编写泛型库时，要考虑到模板是否会支持不完整类型。例如对于下面的类模板和实例化代码：","编写泛型库的注意事项","编译命令为g++","编译器可以查找f(*p)，因为关联的类是c，关联的命名空间是全局命名空间","编译器在处理每个翻译单元时都会生成函数模板代码，并用特殊的名称进行修饰，这样链接器就能识别重复实例化的函数模板。这种方式主要有三个缺点：","编译器在所有的翻译单元之间维护一个数据库，编译器通过查询数据库来判断是否需要生成模板代码，不过这种方式没有被市场接受，我也没有想明白这个要怎么做。","编译器处理具有具体参数类型的lambda表达式的方法是创建一个闭包类型（closur","编译器对别名模板的处理方式是首先进行别名代换，并用代换后的结果进行推导：","编译器对模板的支持","编译器推导返回类型时，会先实例化plusresultt，如果第三个参数推导结果为true，则实例化主模板，代换顺利结束；否则实例化特化版本，由于特化版本没有type成员，则函数模板的实例化以sfinae规则结束。","编译器无法为包含引用类型的类合成默认的拷贝赋值运算符","编译器无法查找f()，因为函数没有参数，也没有返回值","编译器生成了多份代码，但是最终只保留了一份","编译器通过递归的方式处理参数包，所以需要一个不含可变参数的模板作为递归终止条件","编译器错误","编译基于sfinae规则的类型特征模板（sfina","编译时if","编译时编程","编译时被解析的表达式中可以包含模板参数包，例如判断模板参数包中所有类型是否相同：","编译试了下，必须要添加编译选项","缺点在于写起来很繁琐。最理想的方式是编译器可以将代码转化为下面的形式：","考虑下面的例子：","而在c++11中要写为这样子：","联合体也可以是模板：","聚合类也可以作为模板：","聚合类的模板（templat","自然而然会想到使用sizeof...来判断参数包中是否还有参数剩余，从而可以避免重载，例如下面的方式：","自然而然地会用相同的方式定义和使用函数模板：","自赋值问题","获取函数指针","获取容器中元素类型的模板","获取类型列表中第一个类型：","虚成员函数不能是模板，因为c++是通过虚表实现虚函数的，这要求在定义类时就要确定虚函数的个数，但是成员函数模板只有在调用时才能实例化，所以下面的定义会报错：","虚成员函数（模板）","虽然quickexchange(p1,","虽然x::i不是可推导的上下文，但是x::*p是可推导的上下文（n被推导为33），从而void","虽然两个模板都可以匹配len(a)和len(\"tmp\")，但是int","虽然使用了auto，但是3.3中的限制是依然存在的，所以stack","虽然形参a1中包含了长度7，但是编译器仍然将其处理为指针（7被忽略了，这应该是为了保证和c语言的兼容）。","虽然模板报错时的信息都比较长（说的就是你g++），但是却很难判断是模板定义出错了，还是用户代码触发实例化的代码出错了，c++准备引入concept来解决这个问题：","表中带初值init的行的折叠表达式中没有第二个op，但是下面两个示例代码中都有两个op。","表达式x","表达式中的变量","表达式模板","表达式模板a_add<>、a_mult<>和a_scalar<>定义如下：","表达式模板用来支持针对整个数组的数值运算。","表达式模板的性能和限制","表达式模板的赋值操作","表达式模板的运算符","表达式模板的运算符只需要将表示计算结果的数组以引用的方式传递到返回值中就可以了：","表达式求值","表达式的最终求值结果，或者表达式被转换为void","被constexpr修饰的函数可以在编译期间求值，这要保证函数中的每一步都能够在编译期间进行求值，依然以素性判断程序为例：","被实例化的类模板类型可以被const和volatile关键字修饰，也可以定义该类型的数组和该类型的引用，还可以用typedef和using来声明新的类型和作为其它模板的参数。","被移动的对象仍然是可以被移动的","要保证模板的模板参数中的参数数量和实例化时使用的模板需要的参数数量相同，参见5.7","规范化void","解决上面问题的方法就是在头文件中完整的定义模板：","解析类模板","解析过程为：","计算完整性","计算（computation），通过递归实例化或者常量表达式在编译期间进行求值","让编译器推导返回类型","设计","访问函数","访问函数的返回类型","访问基类模板中的成员时要带上this，参见5.3","访问类的纯右值成员","识别函数类型","该类型名称是未知特化类型","语法简单","诺克曼技巧","诺克曼技巧通过将函数模板实现为友元来用来解决这个问题：","调用f1()时，实参类型为stack>，使用该类型推导t和cont","调用保存任意的可调用对象","调用时可以显示指定前几个模板参数的类型","调用通过函数模板定义的函数时，编译器会推导模板参数的类型","调用重载函数print()","调用重载函数时，编译器会考查每个重载函数的匹配度，然后最终决定要调用哪个函数。当重载函数中包括函数模板时，编译器会推导函数模板中模板参数的类型，然后将其视为一个普通函数来考查匹配度。但是在类型推导的过程中可能会产生毫无意义的结果，与其将其视为错误，语言更倾向于忽略它——这就是代换失败不是错误（substitut","调用非静态成员函数时，参数种包含隐含参数*this，为左值引用类型（如果是const成员函数则为常量左值引用类型），*this的解析过程和其它参数类似，因此可能会导致模糊调用：","谓词模板","谓词模板接受多个类型参数，返回一个布尔值。","贪心实例化","贴个代码自己体会一下吧：","赋值","赋值和构造类似，书中只有拷贝构造：","赋值抛出异常的问题","跟踪递归实例化的过程","转发引用","转发引用是唯一使得类型t可以被推导为引用的写法，所以下面的代码就会因为引用没有初始化而报错：","输出","输出为：","输出结果为：","返回函数指针和函数引用的类的成员函数","返回只读类成员的常量引用","返回右值引用的函数，例如std::move","返回容器中的元素","返回左值引用的函数","返回左值引用的函数返回值","返回引用会带来一些麻烦，因为引用的对象是从函数里返回的，在函数外不受控制，但是还是有返回引用的应用的：","返回引用和返回值","还可以用std::is_constructible：","还有template也是合法的，这种声明会让n的类型变为引用：","还有一个例子：","这一节中有这样一个注释，没看懂是什么意思，原文：","这一部分应该是在第16章之后的，不过忘记了。","这个例子中三参数版本的max()中t被推导为const","这个例子和c.2.1中的原理是类似的。funcobj(3,","这个名字有点绕，实际意思就是在编译时存储值的列表，为此需要为每个值构造一个类型：","这个模板只支持a_subscript::a2中存储的是整数，或许在对称密码算法置换中用到。","这个程序会在编译错误中打印出所有的小于18的素数。。。","这也就是说实例化ifthenelse<>时只会实例化ifthenelset<>，因为引用了ifthenelset<>::type。在后面引用subt::value时，才会实例化type的具体类型（也就是sqrt或者sqrt）。联想到第14章开头提到过，编译器只在获取类大小或者访问类成员时才实例化类模板，也印证了这个说法。","这将产生类似templat","这就会得到正确的输出：","这就意味下面的的函数模板及实例化的结果可能可以共存：","这应该是我印象里最好的关于移动语义定义了：移动操作可以将拷贝和赋值操作优化为内部资源的偷取，这是因为被移动的对象是一个将要被释放的对象。原文：","这是因为我机器上的std::copy通过减法计算了两个迭代器指向的person::lastname的距离，大小是6个std::string，而不是3个person，所以会多输出三行。","这样issamet<>就可以通过继承的方式实现：","这样拷贝次数就都降低为1次了，但是上面的写法很麻烦，所以应该将索引序列变成非类型的模板参数包，也就是索引列表。","这种初始化方式可能会发生类型转换以匹配构造函数，测试代码如下：","这种方式主要有三个缺点：","这虽然解决了初始化顺序的问题，但是当多重继承的基类相同时就会出现歧义，为了解决这个问题，可以在tupleelt<>中加入一个高度信息：","这里使用的是原地new运算符，即在指针所指向的内存中构造t类型的对象。","这里只有原始的类模板，没有给出别名模板。","这里提到的代换和第2章中提到的部分实例化类模板不是一个概念。编译器可能会通过代换生成一些无用的函数签名，这些模板最终不会变成重载函数的定义（这是我猜的）。","这里有一个有趣的例子：","这里的复合类型是指指针类型、引用类型、成员指针类型和数组类型：","这里的析构也是原地析构，即析构后不释放缓冲区。因为可识别联合体中存储的肯定是某种类型的数据，所以有且只有一个variantchoice::destroy()返回true。为了强制析构，可以将所有的destroy()都调用一遍：","这里的规则就是如果所引用的名称可以被显示的特化，则该名称就是未知特化类型。原文：","这里的错误其实就是std::unordered_set需要mycustomerhash的调用运算符()是const成员函数。","这里的问题在于要求functor必须实现了==运算符，这对函数指针没有问题，有问题的是lambda表达式，为了避免编译错误，可以通过基于sfinae规则的类型特征模板解决：","迭代器适配器","迭代实例化","追加算法","追加算法和pushfrontt<>类似：","追踪器","递归实例化和递归模板","递归实例化的开销","递归终止条件模板可能会导致编译错误，为此可以添加isempty<>进行封装：","通常元编程可以包含下面三部分内容：","通过...可以声明可变参数模板，模板参数包可以包含多个类型模板参数、非类型模板参数和模板的模板参数：","通过auto推导：","通过crtp实现关系运算符","通过decltype和尾置返回类型推导：","通过decltype识别值类型","通过enableif<>可以实现启用和禁用函数模板，原理依然是sfinae规则：","通过extern关键字可以声明模板实例化：","通过sfinae规则实现偏特化","通过sfinae规则实现函数重载","通过std::enable_if可以在编译期间禁掉某些模板函数","通过std::enable_if可以禁掉匹配度更高的构造函数模板和赋值运算符模板，从而让编译器优先匹配隐式合成的构造函数","通过std::enable_if和delete可以模板化编译器合成的构造函数","通过std::ref和std::cref可以实现向传值的模板传引用","通过下标访问的纯右值数组（an","通过下面的模板可以实现将布尔值转换为类型：","通过使用折叠表达可以实现某种操作应用于参数包中所有参数","通过偏特化实现执行路径选择","通过偏特化技术，可以实现根据编译时条件选择实例化的类模板","通过将模板中的临时量声明为auto&&类型可以实现对模板中临时量的完美转发：","通过智能指针初始化一个对象，例如std::make_shared>(4.2,","通过某种类型的值初始化、赋值和析构","通过标签匹配类模板","通过标签实现函数模板的分发","通过模板参数个数进行重载：","通过模板可以推迟表达式的求值时间","通过模板实现的多态是未绑定的（unbounded）和静态的（static）","通过特化提供相同的接口","通过类模板实现策略","通过索引列表实现反转","通过继承实现的多态是绑定的（bounded）和动态的（dynamic）","通过编译时if可以实现只实例化部分分支，例如在下面的例子中，else分支不会被实例化：","通过调用构造函数向容器中添加元素，例如emplace_back()","通过转发引用和引用折叠规则，可以在模板中实现传递参数类型和参数的左值右值属性：","通过这个例子可知，函数模板实例化后的插入位置是在包含引用函数模板的命名空间或者定义之后。原文：","通过这个例子可知，类模板实例化后的插入位置是在包含引用类模板的命名空间或者定义之前。原文：","通过迭代器实现累加","通过递归、偏特化等技术可以在编译时将模板展开并在编译时进行求值","避免调用平凡的析构函数","部分使用类模板","部分实例化和全部实例化","重排和选择","重载了调用运算符的类","重载可变参数模板和非可变参数模板","重载时尽量保证只有模板参数不同","重载时要保证编译器只能匹配一个","重载的函数模板之间仅可能存在偏序的关系，也就是只有一个可能比另一个更为特化。重载解析的过程如下：","重载的函数模板的匹配规则","重载的函数模板的匹配顺序","重载类模板","重载细节","重载解析规则","重载解析规则应用在调用具名函数时，大致分为以下几个步骤：","重载解析规则的应用范围","重载解析过程将首先匹配普通函数：","链式调用，例如输入输出运算符和赋值运算符","链接错误","链表迭代器","错误原因在于从middle<>传入的int在clear<>中无法解引用。为了防止调用层数过多引起的错误，可以插入一些无用的代码进行浅层实例化：","问题在于采用继承的方式会先初始化基类，虽然没什么问题，但是看起来有些别扭，解决办法是通过多重继承：","附录d中介绍了标准库中类型特征模板。","除了20.2中已经提到的迭代器分类外，标准库中基于类型属性的重载还包括：","除了使用auto外，还可以定义默认模板参数，然后使用std::decay_t或者std::common_type_t为其赋默认类型：","除了成员别名模板，其余三种在类中声明的模板可以定义在类外：","除了最简单的形参类型t之外，复杂的形参类型也可以进行推导：","除非知道在干嘛，否则还是应该传值","随机访问迭代器应该支持advance()和measuredistance()","随着实例化trouble<>的n的增大，trouble::longtype的名字也会越来越长，这对编译器是一个很大的负担，因此编译器都对模板名字进行了压缩。","隐式推导指引","隐式注入的类名称","隐式转换可以由一系列转换组成，但是最多只能包含一个用户定义的转换。例如下面的代码包含三个隐式转换，但是只有一个用户定义的隐式转换：","隐式转换序列","零值初始化","零长度参数包的展开","零长度的参数包将被忽略：","需要存储模板定义在源文件中的位置","需要注意的是，完美转发规则并不转发参数的常量属性，所以会存在下面这种奇怪的现象：","需要用typename关键字来提示编译器接下来的标识符是由模板参数决定的一个类型，参见5.1","需要通过参数返回值","静态多态","静态多态下的设计模式","静态数据成员模板","静态数据成员的全特化声明虽然看起来像通过默认值进行初始化的定义，但是对于模板来说这被解释为声明。","静态断言","静态是指在编译时由编译器解析要调用的函数","非依赖型基类","非依赖型的名称可以在模板解析时就进行查找，这样可以提前发现错误，而依赖型名称只能在提供了模板实参时才能进行查找，所以模板的实例化需要两个阶段：","非内联函数、成员函数、全局变量和静态数据成员在整个程序中只能定义一次","非受限名称会在最近的作用域中进行查找：","非模板中的上下文相关文法","非模板和特化模板的匹配","非类型函数模板参数","非类型模板参数","非类型模板参数也可以是可变的：","非类型模板参数也可以是表达式。","非类型模板参数只能是：","非类型模板参数的限制","非类型模板实参","非类型模板实参可以是：","非类型模板形参","非类型的类型列表","非类型类模板参数","预编译头文件","默认情况下this为引用类型，但是从c++11开始可以显示声明为引用类型，同时允许右值对象调用隐式声明为左值引用类型的成员函数，例如：","默认构造函数","默认模板参数","默认模板实参","默认模板实参不能用来推导模板形参：","（类型）模板参数"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"C++ Templates Second Edition\nReading notes.\nPages: https://rayonicks.github.io/cpp-templates-2e\n"},"2021-12-15-ch1-function-templates.html":{"url":"2021-12-15-ch1-function-templates.html","title":"Chapter 1 Funtion Templates","keywords":"","body":"1 函数模板\n1.1 函数模板速览\n1.1.1 定义模板\n函数模板是一个函数，该函数可以操作不同类型的数据，也就是返回类型和函数参数类型是暂时不确定的，例如求最大值的函数模板，只要类型T支持运算符，则max()就能正常工作：\n// basics/max1.hpp\ntemplate\nT max (T a, T b)\n{\n    // if b \n这一节中有这样一个注释，没看懂是什么意思，原文：\n\nNote that the max() template according to [Stepanov Notes] intentionally returns “b \n\n1.1.2 使用模板\n// basics/max1.cpp\n#include \"max1.hpp\"\n#include \n#include \n\nint main()\n{\n    int i = 42;\n    std::cout \n函数模板并不是让一个函数可以处理不同类型的参数，而是为每种类型的参数单独生成了一份函数定义。用具体类型替换模板参数的过程称为实例化（instantiation），该过程产生一个实例（instance）。\n1.1.3 两阶段翻译\n\n在定义阶段检查语法错误、和参数类型无关的类型错误和断言\n在实例化阶段检查所有的错误\n\n1.2 模板参数推导\n\n模板调用参数为传引用类型时，不会进行任何转换，相同参数类型的推导结果必须一致\n模板调用参数为值类型时，修饰符const和volatile将会被丢弃，引用转换为引用的类型、数组和函数转化为指针类型，相同模板参数类型转换后的推导结果必须一致\n\n1.3 多模板参数\n可以在模板定义中声明多个模板参数，例如可以为max()函数定义两个不用的模板参数：\ntemplate\nT1 max (T1 a, T2 b)\n{\n    return b \n此时要保证返回类型和参数a的类型是一致的，但是如果返回b的话，则就会发生类型转换。C++提供了三种方法来解决这个问题。\n1.3.1 为返回类型定义新的模板参数\n定义新类型RT来表示返回类型，但是编译器是不能根据参数推导RT的，所以需要在在实例化过程中显示指出返回类型。\n1.3.2 让编译器推导返回类型\n\n通过auto推导：\n\n// basics/maxauto.hpp\ntemplate\nauto max (T1 a, T2 b)\n{\n    return b \n\n通过decltype和尾置返回类型推导：\n\n// basics/maxdecltype.hpp\ntemplate\nauto max (T1 a, T2 b) -> decltype(b\n如果模板参数被推导为引用类型，那么可以使用std::decay来去掉引用：\n// basics/maxdecltypedecay.hpp\n#include \n\ntemplate\nauto max (T1 a, T2 b) -> typename std::decay::type\n{\n    return b \n1.3.3 使用公共类型\n// basics/maxcommon.hpp\n#include \n\ntemplate\nstd::common_type_t max (T1 a, T2 b)\n{\n    return b \n1.4 默认模板参数\n除了使用auto外，还可以定义默认模板参数，然后使用std::decay_t或者std::common_type_t为其赋默认类型：\n// basics/maxdefault1.hpp\n#include \n\ntemplate>\nRT max (T1 a, T2 b)\n{\n    return b \n// basics/maxdefault3.hpp\n#include \n\ntemplate>\nRT max (T1 a, T2 b)\n{\n    return b \n1.5 函数模板重载\n函数定义重载函数模板，由于普通函数更为精确，编译器在解析的过程中会优先匹配：\n// basics/max2.cpp\nint max (int a, int b)\n{\n    return b \nT max (T a, T b)\n{\n    return b  (by argument deduction)\n    ::max('a', 'b');        // calls max (by argument deduction)\n    ::max<>(7, 42);         // calls max (by argument deduction)\n    ::max(7, 42);   // calls max (no argument deduction)\n    ::max('a', 42.7);       // calls the nontemplate for two ints\n}\n\n通过模板参数个数进行重载：\n// basics/maxdefault4.hpp\ntemplate\nauto max (T1 a, T2 b)\n{\n    return b \nRT max (T1 a, T2 b)\n{\n    return b \n\n::max(4, 7.2)匹配两参数版本，因为三参数版本中的RT没有默认模板参数，无法推导其类型\n::max(7.2, 4)匹配三参数版本，因为7.2默认为double类型，而long double和double不是同一类型\n::max(4, 7.2)无法匹配\n\n函数模板重载更多用于重载C指针和C字符串版本的函数：\n// basics/max3val.cpp\n#include \n#include \n\n// maximum of two values of any type:\ntemplate\nT max (T a, T b)\n{\n    return b \nT* max (T* a, T* b)\n{\n    return *b \n如果函数模板中的参数为传引用类型，同时重载了传C字符串类型的版本，就会出现问题：\n// basics/max3ref.cpp\n#include \n\n// maximum of two values of any type (call-by-reference)\ntemplate\nT const& max (T const& a, T const& b)\n{\n    return b \nT const& max (T const& a, T const& b, T const& c)\n{\n    return max (max(a,b), c); // error if max(a,b) uses call-by-value\n}\n\nint main ()\n{\n    auto m1 = ::max(7, 42, 68);     // OK\n\n    char const* s1 = \"frederic\";\n    char const* s2 = \"anica\";\n    char const* s3 = \"lucas\";\n    auto m2 = ::max(s1, s2, s3);    // run-time ERROR\n}\n\ng++的编译警告为：\nmax3ref.cpp: In instantiation of ‘const T& max(const T&, const T&, const T&) [with T = const char*]’:\nmax3ref.cpp:30:29:   required from here\nmax3ref.cpp:20:26: warning: returning reference to temporary [-Wreturn-local-addr]\n   return max (max(a,b), c);       // error if max(a,b) uses call-by-value\n                          ^\n\n这个例子中三参数版本的max()中T被推导为const char*，所以会调用非模板的max()，而该函数返回值会创建一个临时变量，且三参数版本的max()又返回了该临时变量的引用，这就导致main()中会出现悬垂引用。原文：\n\nBecause for C-strings, max(a,b) creates a new, temporary local value that is returned by reference, but that temporary value expires as soon as the return statement is complete, leaving main() with a dangling reference.\n\n最后一个需要注意的是定义的顺序：\n// basics/max4.cpp\n#include \n\n// maximum of two values of any type:\ntemplate\nT max (T a, T b)\n{\n    std::cout () \\n\";\n    return b \nT max (T a, T b, T c)\n{\n    return max (max(a,b), c);   // uses the template version even for ints\n}                               // because the following declaration comes\n                                // too late:\n// maximum of two int values:\nint max (int a, int b)\n{\n    std::cout () instead of max(int,int)\n}\n\n1.6 三个问题\n1.6.1 传值还是传引用\n一般来说传值，因为：\n\n语法简单\n便于优化\nC++11中引入了移动语义\n某些情况下不会发生拷贝和移动\n\n1.6.2 内联\n一般来说只将特化版本定义为内联，而不将函数模板定义为内联。\n1.6.3 常量表达式\nconstexpr也可以用于模板，用于提示编译器这个函数的返回值可以在编译期间被计算：\n// basics/maxconstexpr.hpp\n\ntemplate\nconstexpr auto max (T1 a, T2 b)\n{\n    return b \n1.7 总结\n\n函数模板定义了一类可以用于不同参数类型的函数\n调用通过函数模板定义的函数时，编译器会推导模板参数的类型\n调用时可以显示指定前几个模板参数的类型\n可以为模板参数提供默认参数，且默认参数可以依赖于前面的参数\n函数模板可以被重载\n重载时要保证编译器只能匹配一个\n重载时尽量保证只有模板参数不同\n在调用函数模板时保证编译器可以看见所有的重载版本\n\n"},"2021-12-20-ch2-class-templates.html":{"url":"2021-12-20-ch2-class-templates.html","title":"Chapter 2 Class Templates","keywords":"","body":"2 类模板\n2.1 栈类模板实现\n// basics/stack1.hpp\n#include \n#include \n\ntemplate\nclass Stack {\n    private:\n        std::vector elems;       // elements\n    public:\n        void push(T const& elem);   // push element\n        void pop();                 // pop element\n        T const& top() const;       // return top element\n        bool empty() const {        // return whether the stack is empty\n            return elems.empty();\n        }\n};\n\ntemplate\nvoid Stack::push (T const& elem)\n{\n    elems.push_back(elem); // append copy of passed elem\n}\n\ntemplate\nvoid Stack::pop ()\n{\n    assert(!elems.empty());\n    elems.pop_back(); // remove last element\n}\n\ntemplate\nT const& Stack::top () const\n{\n    assert(!elems.empty());\n    return elems.back(); // return copy of last element\n}\n\n2.1.1 类模板声明\n在类模板内部，可以使用T来声明和定义任何成员变量。类的类型为Stack，所以当需要使用类的类型时需要写明Stack（除非T可以被推导）。但是在类的内部也是可以直接使用类名字Stack的，所以下面两种定义拷贝构造函数和拷贝赋值运算符的方式是一样的，书中推荐第一种：\ntemplate\nclass Stack {\n    // ...\n    Stack (Stack const&);               // copy constructor\n    Stack& operator= (Stack const&);    // assignment operator\n    // ...\n};\n\ntemplate\nclass Stack {\n    // ...\n    Stack (Stack const&);                // copy constructor\n    Stack& operator= (Stack const&);  // assignment operator\n    // ...\n};\n\n但是在类的外部必须要使用完整的类型名，除非需要的是类的名字而不是类的类型：\ntemplate\nbool operator== (Stack const& lhs, Stack const& rhs);\n\n2.1.2 成员函数定义\n在定义类的成员函数时，需要指出这是一个模板，所以前面要加上template。\n2.2 使用类模板\n// basics/stack1test.cpp\n#include \"stack1.hpp\"\n#include \n#include \n\nint main()\n{\n    Stack intStack;                // stack of ints\n    Stack stringStack;     // stack of strings\n\n    // manipulate int stack\n    intStack.push(7);\n    std::cout \n只有真正被调用的函数才会被实例化，例如在上面的例子中，编译器分别实例化了接收int和std::string类型的push()和top()，但是也只实例化了元素类型为std::string的pop()。如果类模板中有静态成员，那么当类被使用时，静态成员就会被实例化。\n被实例化的类模板类型可以被const和volatile关键字修饰，也可以定义该类型的数组和该类型的引用，还可以用typedef和using来声明新的类型和作为其它模板的参数。\n2.3 部分使用类模板\n类模板通常需要对模板参数类型进行多种操作，这并不意味着模板参数类型应该支持类模板中所有涉及到的在该类型上的操作，而只需要支持必要的操作就可以了。原文：\n\nA class template usually applies multiple operations on the template arguments it is instantiated for (including construction and destruction). This might lead to the impression that these template arguments have to provide all operations necessary for all member functions of a class template. But this is not the case: Template arguments only have to provide all necessary operations that are needed (instead of that could be needed).\n\n例如为Stack<>定义一个printOn()方法，同时实例化模板参数类型为std::pair的类模板，那么只要不调用printOn()函数，就不需要为std::pair重载运算符。\ntemplate\nclass Stack {\n    // ...\n    void printOn() (std::ostream& strm) const {\n        for (T const& elem : elems) {\n            strm > ps;           // note: std::pair<> has no operator\n2.3.1 Concept\n好像在C++20中才有，书上说了一段没什么实质内容的话。\n2.4 友元\n可以通过重载运算符并将其定义为友元函数来实现打印：\ntemplate\nclass Stack {\n    // ...\n    void printOn() (std::ostream& strm) const {\n        // ...\n    }\n    friend std::ostream& operator const& s) {\n        s.printOn(strm);\n        return strm;\n    }\n};\n\n在上面这种内联的形式中，重载的运算符并不是函数模板，而是一个实例化的普通函数。原文：\n\nNote that this means that operator  is not a function template, but an \"ordinary\" function instantiated with the class template if needed.\n\n但是一般是不会将重载的运算符实现为内联函数的，而是声明其为友元，然后类外部进行定义，有下面两种方法：\n\n使用一个新的模板参数U：\n\ntemplate\nclass Stack {\n    // ...\n    template\n    friend std::ostream& operator const&);\n};\n\n\n先声明类模板和运算符，然后声明友元，注意友元声明中的:\n\ntemplate\nclass Stack;\ntemplate\nstd::ostream& operator const&);\n\ntemplate\nclass Stack {\n    // ...\n    friend std::ostream& operator (std::ostream&, Stack const&);\n};\n\n2.5 模板特化\n模板特化是为类模板提供某种模板参数类型的特殊实现，例如为std::string类型的模板参数进行特化：\n// basics/stack2.hpp\n#include \"stack1.hpp\"\n#include \n#include \n#include \n\ntemplate<>\nclass Stack {\n    private:\n        std::deque elems;      // elements\n    public:\n        void push(std::string const&);      // push element\n        void pop();                         // pop element\n        std::string const& top() const;     // return top element\n        bool empty() const {                // return whether the stack is empty\n            return elems.empty();\n        }\n};\n\nvoid Stack::push (std::string const& elem)\n{\n    elems.push_back(elem); // append copy of passed elem\n}\n\nvoid Stack::pop ()\n{\n    assert(!elems.empty());\n    elems.pop_back(); // remove last element\n}\n\nstd::string const& Stack::top () const\n{\n    assert(!elems.empty());\n    return elems.back(); // return copy of last element\n}\n\n2.6 模板偏特化（Partial Sepcialization）\n模板偏特化是为部分模板参数提供特殊实现，例如为T*类型的模板参数进行偏特化：\n// basics/stackpartspec.hpp\n#include \"stack1.hpp\"\n\n// partial specialization of class Stack<> for pointers:\ntemplate\nclass Stack {\n    private:\n        std::vector elems;  // elements\n    public:\n        void push(T*);          // push element\n        T* pop();               // pop element\n        T* top() const;         // return top element\n        bool empty() const {    // return whether the stack is empty\n            return elems.empty();\n        }\n};\n\ntemplate\nvoid Stack::push (T* elem)\n{\n    elems.push_back(elem); // append copy of passed elem\n}\n\ntemplate\nT* Stack::pop ()\n{\n    assert(!elems.empty());\n    T* p = elems.back();\n    elems.pop_back();       // remove last element\n    return p;               // and return it (unlike in the general case)\n}\n\ntemplate\nT* Stack::top () const\n{\n    assert(!elems.empty());\n    return elems.back(); // return copy of last element\n}\n\n在有多个模板参数的情况下，只对部分参数进行特化也是偏特化：\ntemplate\nclass MyClass {\n};\n\n// partial specialization: both template parameters have same type\ntemplate\nclass MyClass {\n};\n\n// partial specialization: second type is int\ntemplate\nclass MyClass {\n};\n\n// partial specialization: both template parameters are pointer types\ntemplate\nclass MyClass {\n};\n\nMyClass mif;     // uses MyClass\nMyClass mff;   // uses MyClass\nMyClass mfi;     // uses MyClass\nMyClass mp;    // uses MyClass\n\nMyClass m;     // ERROR: matches MyClass and MyClass\nMyClass m;   // ERROR: matches MyClass and MyClass\n\n2.7 默认模板参数\n可以为类模板提供默认的模板参数，例如为Stack<>提供默认的内部容器类型：\n// basics/stack3.hpp\n#include \n#include \n\ntemplate>\nclass Stack {\n    private:\n        Cont elems;                 // elements\n    public:\n        void push(T const& elem);   // push element\n        void pop();                 // pop element\n        T const& top() const;       // return top element\n        bool empty() const {        // return whether the stack is empty\n            return elems.empty();\n        }\n};\n\ntemplate\nvoid Stack::push (T const& elem)\n{\n    elems.push_back(elem); // append copy of passed elem\n}\n\ntemplate\nvoid Stack::pop ()\n{\n    assert(!elems.empty());\n    elems.pop_back(); // remove last element\n}\n\ntemplate\nT const& Stack::top () const\n{\n    assert(!elems.empty());\n    return elems.back(); // return copy of last element\n}\n\n当然也可以为默认模板参数提供具体的参数：\n// basics/stack3test.cpp\n#include \"stack3.hpp\"\n#include \n#include \n\nint main()\n{\n    // stack of ints:\n    Stack intStack;\n\n    // stack of doubles using a std::deque<> to manage the elements\n    Stack> dblStack;\n\n    // manipulate int stack\n    intStack.push(7);\n    std::cout \n2.8 类型别名\n没什么可写的，推荐用using而不是typedef。\n2.9 类模板参数推导\n从C++17开始，有时可以省略模板参数，而让编译器去推导，例如下面的代码：\nStack intStack1;               // stack of strings\nStack intStack2 = intStack1;   // OK in all versions\nStack intStack3 = intStack1;        // OK since C++17\n\n假如再为Stack<>提供一个以T类型的引用为参数的构造函数Stack (T const& elem)，那么便可以使用一个初值来实例化：\ntemplate\nclass Stack {\n    private:\n        std::vector elems;   // elements\n    public:\n        Stack () = default;\n        Stack (T const& elem)   // initialize stack with one element\n            : elems({elem}) {\n        }\n    // ...\n};\n\nStack intStack = 0;     // Stack deduced since C++17\n\n如果这个初值是一个字符串常量（例如Stack stringStack = \"bottom\"），就会有一点复杂。由于Stack (T const& elem)是传引用的，所以不会发生任何类型转换，因此类模板实例化后的类型为Stack。但是我们需要的类型是Stack，所以需要添加一个传值类型的构造函数，并且将其移动到Stack中：\ntemplate\nclass Stack {\n    private:\n        std::vector elems;   // elements\n    public:\n        Stack (T elem)          // initialize stack with one element by value\n            : elems({std::move(elem)}) {\n        }\n    // ...\n};\n\n后面是关于推导指引（deduction guide）的，没有示例代码，我根据原文的意思写代码测试了一下，编译命令为g++ test.cpp -o test -std=c++17，输出为true：\n#include \n#include \n#include \n#include \n\ntemplate\nclass Stack {\n    private:\n        std::vector elems;   // elements\n    public:\n        Stack (T elem)          // initialize stack with one element by value\n            : elems({std::move(elem)}) {\n        }\n};\n\nStack(char const*) -> Stack;\n\nint main()\n{\n    Stack stringStack{\"bottom\"};    // Stack deduced and valid\n    Stack stack2{stringStack};      // Stack deduced\n    Stack stack3(stringStack);      // Stack deduced\n    Stack stack4 = {stringStack};   // Stack deduced\n    std::cout )) \n2.10 聚合类的模板（Templatized Aggregates）\n聚合类也可以作为模板：\n#include \n\ntemplate\nstruct ValueWithComment {\n    T value;\n    std::string comment;\n};\n\nValueWithComment(char const*, char const*) -> ValueWithComment;\n\nint main()\n{\n    ValueWithComment vc;\n    vc.value = 42;\n    vc.comment = \"initial value\";\n\n    ValueWithComment vc2 = {\"hello\", \"initial value\"};\n}\n\n2.11 总结\n\n类模板是一个或者多个类型参数待确定的类\n实例化类模板时需要传递具体的类型作为类模板参数\n只有被调用的类模板才会被实例化\n类模板可以特化\n类模板也可以被偏特化\nC++17支持类模板参数推导\n可以定义实例化聚合类的模板\n如果模板参数是传值的，那么参数会退化为原始类型\n模板只能被声明和定义在命名空间或者类声明的内部\n\n第8条原文：\n\nCall parameters of a template type decay if declared to be called by value.\n\n"},"2021-12-20-ch3-nontype-template-parameters.html":{"url":"2021-12-20-ch3-nontype-template-parameters.html","title":"Chapter 3 Nontype Template Parameters","keywords":"","body":"3 非类型模板参数\n对于函数模板和类模板，模板参数也可以是普通的数值。\n3.1 非类型类模板参数\n将栈的大小设定为固定值可以避免内存管理的问题，但是模板作者并不知道设定为多大是合适的，所以可以提供一个非类型模板参数来让用户设定栈的大小：\n// basics/stacknontype.hpp\n#include \n#include \n\ntemplate\nclass Stack {\n    private:\n        std::array elems;    // elements\n        std::size_t numElems;           // current number of elements\n    public:\n        Stack();                    // constructor\n        void push(T const& elem);   // push element\n        void pop();                 // pop element\n        T const& top() const;       // return top element\n        bool empty() const {        // return whether the stack is empty\n            return numElems == 0;\n        }\n        std::size_t size() const {  // return current number of elements\n            return numElems;\n        }\n};\n\ntemplate\nStack::Stack ()\n    : numElems(0) // start with no elements\n{\n    // nothing else to do\n}\n\ntemplate\nvoid Stack::push (T const& elem)\n{\n    assert(numElems \nvoid Stack::pop ()\n{\n    assert(!elems.empty());\n    --numElems; // decrement number of elements\n}\n\ntemplate\nT const& Stack::top () const\n{\n    assert(!elems.empty());\n    return elems[numElems-1]; // return last element\n}\n\n下面是使用方法：\n// basics/stacknontype.cpp\n#include \"stacknontype.hpp\"\n#include \n#include \n\nint main()\n{\n    Stack int20Stack;           // stack of up to 20 ints\n    Stack int40Stack;           // stack of up to 40 ints\n    Stack stringStack;  // stack of up to 40 strings\n\n    // manipulate stack of up to 20 ints\n    int20Stack.push(7);\n    std::cout \n当然非类型模板参数也是可以有默认值的。\n3.2 非类型函数模板参数\n下面是一个带非类型参数的函数模板：\n// basics/addvalue.hpp\ntemplate\nT addValue (T x)\n{\n    return x + Val;\n}\n\n然后通过算法transform就可以实现将source中的每个值加5后存储到dest中：\nstd::transform (source.begin(), source.end(),   // start and end of source\n                dest.begin(),                   // start of destination\n                addValue);               // operation\n\n和前面的类模板一样，非类型模板参数也是可以有默认值的。\n3.3 非类型模板参数的限制 \n非类型模板参数只能是：\n\n常量整数，也包括枚举类型\n指向对象、函数和成员的指针\n对象和函数的左值引用\nstd::nullptr_t\n\n不能是：\n\n浮点类型\n类类型，例如std::string\n\n当非类型模板参数是指针或者引用时，指针指向的对象或者引用引用的对象不能是字符串字面值、临时变量、成员变量或者其它子对象。不过随着演变到C++17，这些限制已经慢慢的放开了，所以可以精简为下面的几条：\n\n在C++11中，这个对象必须是可以被外部链接的\n在C++14中，这个对象必须是外部链接或者内部链接的\n\n因此下面的代码是错误的：\ntemplate\nclass MyClass {\n};\n\nMyClass x; // ERROR: string literal \"hello\" not allowed\n\n不过有方法可以解决这个问题：\nextern char const s03[] = \"hi\";     // external linkage\nchar const s11[] = \"hi\";            // internal linkage\n\nint main()\n{\n    Message m03;                   // OK (all versions)\n    Message m11;                   // OK since C++11\n    static char const s17[] = \"hi\";     // no linkage\n    Message m17;                   // OK since C++17\n}\n\n上面斜体原文：\n\nWhen passing template arguments to pointers or references, the objects must not be string literals, temporaries, or data members and other subobjects. Because these restrictions were relaxed with each and every C++ version before C++17, additional constraints apply.\n\n非类型模板参数也可以是表达式。\n3.4 auto类型的非类型模板参数\n从C++17开始，非类型模板参数的类型可以为auto：\n// basics/stackauto.hpp\n#include \n#include \n\ntemplate\nclass Stack {\n    public:\n        using size_type = decltype(Maxsize);\n    private:\n        std::array elems;    // elements\n        size_type numElems;             // current number of elements\n    public:\n        Stack();                        // constructor\n        void push(T const& elem);       // push element\n        void pop();                     // pop element\n        T const& top() const;           // return top element\n        bool empty() const {            // return whether the stack is empty\n            return numElems == 0;\n        }\n        size_type size() const {        // return current number of elements\n            return numElems;\n        }\n};\n\n// constructor\ntemplate\nStack::Stack ()\n    : numElems(0) // start with no elements\n{\n    // nothing else to do\n}\n\ntemplate\nvoid Stack::push (T const& elem)\n{\n    assert(numElems \nvoid Stack::pop ()\n{\n    assert(!elems.empty());\n    --numElems; // decrement number of elements\n}\n\ntemplate\nT const& Stack::top () const\n{\n    assert(!elems.empty());\n    return elems[numElems-1]; // return last element\n}\n\n下面是使用方法：\n// basics/stackauto.cpp\n#include \n#include \n#include \"stackauto.hpp\"\n\nint main()\n{\n    Stack int20Stack;          // stack of up to 20 ints\n    Stack stringStack;  // stack of up to 40 strings\n\n    // manipulate stack of up to 20 ints\n    int20Stack.push(7);\n    std::cout ) {\n        std::cout \n注意int20Stack中的size_type是unsigned int，而stringStack中的size_type是int，所以程序的输出是size types differ。\n虽然使用了auto，但是3.3中的限制是依然存在的，所以Stack sd依然是错误的，但是由于字符串可以被作为常量数组，所以下面的代码是合法的：\n// basics/message.cpp\n#include \n\ntemplate // take value of any possible nontype parameter (since C++17)\nclass Message {\n    public:\n        void print() {\n            std::cout  msg1;\n    msg1.print();       // initialize with int 42 and print that value\n    static char const s[] = \"hello\";\n    Message msg2;    // initialize with char const[6] \"hello\"\n    msg2.print();       // and print that value\n}\n\n还有template也是合法的，这种声明会让N的类型变为引用：\ntemplate\nclass C {\n};\n\nint i;\nC x; // N is int&\n\n3.5 总结\n\n模板参数也可以是非类型的\n浮点类型和类类型是不能作为非类型模板参数的，对于指针和引用的限制在3.3节\n可以使用auto作为非类型模板参数\n\n"},"2021-12-20-ch4-variadic-templates.html":{"url":"2021-12-20-ch4-variadic-templates.html","title":"Chapter 4 Variadic Templates","keywords":"","body":"4 可变参数模板\n4.1 可变参数模板\n4.1.1 例子\n// basics/varprint1.hpp\n#include \n\nvoid print ()\n{\n}\n\ntemplate\nvoid print (T firstArg, Types... args)\n{\n    std::cout \nargs称为函数参数包（function parameter pack），Types称为模板参数包（template parameter pack）。可变参数模板通过递归的方式进行实例化，例如对于下面的代码：\nstd::string s(\"world\");\nprint (7.5, \"hello\", s);\n\n解析过程为：\n\nprint (7.5, \"hello\", s)实例化为print (7.5, \"hello\", s)，firstArg值为7.5，T为double，args中包含\"hello\"和s，Types中包含char const *和std::string\nprint(args...)实例化为print (\"hello\", s)，firstArg值为\"hello\"，T为char const *，args中包含s，Types中包含std::string\nprint(args...)实例化为print (s)，firstArg值为\"world\"，args为空，Types也为空\n调用重载函数print()\n\n4.1.2 重载可变参数模板和非可变参数模板\n如果两个重载函数模板只有尾部参数包不同，那么编译器优先匹配没有尾部参数包的版本，所以上面的代码也可以这样实现：\n// basics/varprint2.hpp\n#include \n\ntemplate\nvoid print (T arg)\n{\n    std::cout \nvoid print (T firstArg, Types... args)\n{\n    print(firstArg);    // call print() for the first argument\n    print(args...);     // call print() for remaining arguments\n}\n\n4.1.3 sizeof...\nC++11引入了sizeof...运算符（没错就是包含三个点）来计算模板参数包或者函数参数包的大小：\ntemplate\nvoid print (T firstArg, Types... args)\n{\n    std::cout \n自然而然会想到使用sizeof...来判断参数包中是否还有参数剩余，从而可以避免重载，例如下面的方式：\ntemplate\nvoid print (T firstArg, Types... args)\n{\n    std::cout  0) {  // error if sizeof...(args)==0\n        print(args...);         // and no print() for no arguments declared\n    }\n}\n\n但是上面的代码会报错，这是因为实例化的print()是否被调用是运行时决定的，而sizef...会在编译期间求值，所以尽管if中的条件恒为真或者恒为假，编译器还是会递归的实例化所有的print()，当找不到无参数版本的print()的定义时就会报错。原文：\n\nHowever, this approach doesn’t work because in general both branches of all if statements in function templates are instantiated. Whether the instantiated code is useful is a run-time decision, while the instantiation of the call is a compile-time decision. For this reason, if you call the print() function template for one (last) argument, the statement with the call of print(args...) still is instantiated for no argument, and if there is no function print() for no arguments provided, this is an error.\n\n4.2 折叠表达式\nC++17开始支持折叠表达式，即可以使用二元运算符作用于参数包中所有的参数：\ntemplate\nauto foldSum (T... s) {\n    return (... + s); // ((s1 + s2) + s3) ...\n}\n\n如果参数包为空，一般来说会抛出异常，但是也有例外：\n\n&&求值为true\n||求值为false\n,求值为void()\n\n下表列出了支持的折叠表达式及相应的展开结果：\n\n\n\nFold Expression\nEvaluation\n\n\n\n\n( ... op pack )\n(( pack1 op pack2 ) ... op packN )\n\n\n( pack op ... )\n( pack1 op ( ... ( packN-1 op packN )))\n\n\n( init op ... op pack )\n(( init op pack1 ) ... op packN )\n\n\n( pack op ... op init )\n( pack1 op ( ... ( packN op init )))\n\n\n\n表中带初值init的行的折叠表达式中没有第二个op，但是下面两个示例代码中都有两个op。\n第1个是使用成员指针运算符->*取出二叉树中指定节点的例子：\n// basics/foldtraverse.cpp\n// define binary tree structure and traverse helpers:\nstruct Node {\n    int value;\n    Node* left;\n    Node* right;\n    Node(int i=0) : value(i), left(nullptr), right(nullptr) {\n    }\n    // ...\n};\nauto left = &Node::left;\nauto right = &Node::right;\n\n// traverse tree, using fold expression:\ntemplate\nNode* traverse (T np, TP... paths) {\n    return (np ->* ... ->* paths); // np ->* paths1 ->* paths2 ...\n}\n\nint main()\n{\n    // init binary tree structure:\n    Node* root = new Node{0};\n    root->left = new Node{1};\n    root->left->right = new Node{2};\n    // ...\n    // traverse binary tree:\n    Node* node = traverse(root, left, right);\n    // ...\n}\n\n第2个是递归打印的例子：\n// basics/addspace.hpp\ntemplate\nclass AddSpace\n{\n    private:\n        T const& ref; // refer to argument passed in constructor\n    public:\n        AddSpace(T const& r): ref(r) {\n        }\n        friend std::ostream& operator s) {\n            return os \nvoid print (Args... args) {\n    ( std::cout \n4.3 应用\n标准库中使用可变参数模板的例子：\n\n通过智能指针初始化一个对象，例如std::make_shared>(4.2, 7.7)\n线程库，例如std::thread t (foo, 42, \"hello\")\n通过调用构造函数向容器中添加元素，例如emplace_back()\n\n4.4 可变参数类模板和可变参数表达式\n4.4.1 可变参数表达式\n可变参数模板可以实现函数参数包中每个参数和自身相加：\ntemplate\nvoid printDoubled (T const&... args)\n{\n    print (args + args...);\n}\n\nprintDoubled(7.5, std::string(\"hello\"), std::complex(4,2))的实例化结果为print(7.5 + 7.5, std::string(\"hello\") + std::string(\"hello\"), std::complex(4,2) + std::complex(4,2)。\n也可以实现将函数参数包中每个参数加1：\ntemplate\nvoid addOne (T const&... args)\n{\n    print (args + 1...);    // ERROR: 1... is a literal with too many decimal points\n    print (args + 1 ...);   // OK\n    print ((args + 1)...);  // OK\n}\n\n编译时被解析的表达式中可以包含模板参数包，例如判断模板参数包中所有类型是否相同：\ntemplate\nconstexpr bool isHomogeneous (T1, TN...)\n{\n    return (std::is_same::value && ...); // since C++17\n}\n\nisHomogeneous(43, -1, \"hello\")的实例化结果为std::is_same::value && std::is_same::value。\n4.4.2 可变参数和下标运算符\n下标运算符可以应用于函数参数包：\ntemplate\nvoid printElems (C const& coll, Idx... idx)\n{\n    print (coll[idx]...);\n}\n\nstd::vector coll = {\"good\", \"times\", \"say\", \"bye\"};\nprintElems(coll,2,0,3); // same effect to call print (coll[2], coll[0], coll[3])\n\n非类型模板参数也可以是可变的：\ntemplate\nvoid printIdx (C const& coll)\n{\n    print(coll[Idx]...);\n}\n\nstd::vector coll = {\"good\", \"times\", \"say\", \"bye\"};\nprintIdx(coll);\n\n4.4.3 可变参数类模板\nstd::get是编译时求值的，所以下面的代码是合法的（这个例子不太好解释，意会一下）：\ntemplate\nstruct Indices {\n};\n\ntemplate\nvoid printByIdx(T t, Indices)\n{\n    print(std::get(t)...);\n}\n\nstd::array arr = {\"Hello\", \"my\", \"new\", \"!\", \"World\"};\nprintByIdx(arr, Indices());\n\nauto t = std::make_tuple(12, \"monkeys\", 2.0);\nprintByIdx(t, Indices());\n\n4.4.4 可变参数推导指引\nC++标准库设置了如下的推导指引：\nnamespace std {\n    template array(T, U...)\n        -> array && ...), T>,(1 + sizeof...(U))>;\n}\n\n根据推导指引，对于数组定义std::array a{42,45,77}，enable_if_t && ...), T>会被展开为is_same_v && is_same_v && is_same_v，如果U1、U2和U3的类型不同，推导就会失败，标准库通过这种方式来保证std::array中的元素具有同一类型。\n4.4.5 可变参数基类和using声明\n可变参数模板可以实现多重继承：\n// basics/varusing.cpp\n#include \n#include \n\nclass Customer\n{\n    private:\n        std::string name;\n    public:\n        Customer(std::string const& n) : name(n) { }\n        std::string getName() const { return name; }\n};\n\nstruct CustomerEq {\n    bool operator() (Customer const& c1, Customer const& c2) const {\n        return c1.getName() == c2.getName();\n    }\n};\n\nstruct CustomerHash {\n    std::size_t operator() (Customer const& c) const {\n        return std::hash()(c.getName());\n    }\n};\n\n// define class that combines operator() for variadic base classes:\ntemplate\nstruct Overloader : Bases...\n{\n    using Bases::operator()...; // OK since C++17\n};\n\nint main()\n{\n    // combine hasher and equality for customers in one type:\n    using CustomerOP = Overloader;\n    std::unordered_set coll1;\n    std::unordered_set coll2;\n    // ...\n}\n\nOverloader通过可变参数模板实现了多重继承，同时使用using Bases::operator()...引入了各个基类中的调用运算符()。\n4.5 总结\n\n参数包可以让模板处理任意数量的参数\n编译器通过递归的方式处理参数包，所以需要一个不含可变参数的模板作为递归终止条件\nsizeof...运算符可以求出参数包中参数数量\n可变参数模板的典型应用是转发任意数量和类型的参数\n通过使用折叠表达可以实现某种操作应用于参数包中所有参数\n\n"},"2021-12-30-ch5-tricky-basics.html":{"url":"2021-12-30-ch5-tricky-basics.html","title":"Chapter 5 Tricky Basics","keywords":"","body":"5 模板中的复杂问题\n5.1 typename关键字 \ntypename用来表明后面的标识符是一个类型：\ntemplate\nclass MyClass {\n    public:\n        // ...\n        void foo() {\n            typename T::SubType* ptr;\n        }\n};\n\n如果直接写为T::SubType* ptr，则编译器会认为表达式的含义为T类型的静态成员SubType和ptr相乘。\ntypename的这种使用方式更多的用于使用容器中的迭代器打印容器：\n// basics/printcoll.hpp\n#include \n\n// print elements of an STL container\ntemplate\nvoid printcoll (T const& coll)\n{\n    typename T::const_iterator pos;                 // iterator to iterate over coll\n    typename T::const_iterator end(coll.end());     // end position\n    for (pos=coll.begin(); pos!=end; ++pos) {\n        std::cout \n5.2 零值初始化 \n如果不对内置类型进行初始化，则其初值为内存中的残留值。C++提供使用大括号进行值初始化（value initialization）的方式来统一对类类型和内置类型进行初始化：\ntemplate\nvoid foo()\n{\n    T x{}; // x is zero (or false) if T is a built-in type\n}\n\n在C++11之前，语句T x = T()保证了可以默认初始化对象和用零值初始化内置类型，且在C++17之前，还要求类的拷贝构造函数不能是explicit的。C++17中的强制拷贝省略（mandatory copy elision）取消了这个限制，但还是推荐大括号的写法，因为即使没有默认构造函数，还可以通过初始化列表进行初始化。原文：\n\nPrior to C++17, this mechanism (which is still supported) only worked if the constructor selected for\nthe copy-initialization is not explicit. In C++17, mandatory copy elision avoids that limitation and\neither syntax can work, but the braced initialized notation can use an initializer-list constructor1 if no\ndefault constructor is available.\n\n大括号初始化的方式也适用于成员变量初始化、类内初值和函数的默认参数。\n5.3 this指针 \n如果基类中含有类模板参数，使用成员变量或者成员函数时最好带上this：\ntemplate\n    class Base {\n        public:\n            void bar();\n    };\n\ntemplate\nclass Derived : Base {\n    public:\n        void foo() {\n            bar(); // calls external bar() or error\n        }\n};\n\n5.4 C风格数组和字符串的模板 \n当模板调用参数为传引用类型时，由于不会进行任何转换，所以数组的推导类型也会包括数组的长度信息，因此如果要传递两个长度不同的数组，模板要写成下面的样子：\n// basics/lessarray.hpp\ntemplate\nbool less (T(&a)[N], T(&b)[M])\n{\n    for (int i = 0; i\n对于C风格字符串，也可以写成下面的样子：\n// basics/lessstring.hpp\ntemplate\nbool less (char const(&a)[N], char const(&b)[M])\n{\n    for (int i = 0; i\n如果不知道数组的长度，那么只能通过重载或者偏特化的方式定义模板：\n// basics/arrays.hpp\n#include \n\ntemplate\nstruct MyClass;             // primary template\n\ntemplate\nstruct MyClass       // partial specialization for arrays of known bounds\n{\n    static void print() { std::cout \nstruct MyClass    // partial spec. for references to arrays of known bounds\n{\n    static void print() { std::cout \nstruct MyClass         // partial specialization for arrays of unknown bounds\n{\n    static void print() { std::cout \nstruct MyClass      // partial spec. for references to arrays of unknown bounds\n{\n    static void print() { std::cout \nstruct MyClass          // partial specialization for pointers\n{\n    static void print() { std::cout \n下面是使用方法：\n// basics/arrays.cpp\n#include \"arrays.hpp\"\n\ntemplate\nvoid foo(int a1[7], int a2[],   // pointers by language rules\n            int (&a3)[42],      // reference to array of known bound\n            int (&x0)[],        // reference to array of unknown bound\n            T1 x1,              // passing by value decays\n            T2& x2, T3&& x3)    // passing by reference\n{\n    MyClass::print();     // uses MyClass\n    MyClass::print();     // uses MyClass\n    MyClass::print();     // uses MyClass\n    MyClass::print();     // uses MyClass\n    MyClass::print();     // uses MyClass\n    MyClass::print();     // uses MyClass\n    MyClass::print();     // uses MyClass\n}\n\nint main()\n{\n    int a[42];\n    MyClass::print();  // uses MyClass\n    extern int x[];                 // forward declare array\n    MyClass::print();  // uses MyClass\n    foo(a, a, a, x, x, x, x);\n}\n\nint x[] = {0, 8, 15};               // define forward-declared array\n\n\n虽然形参a1中包含了长度7，但是编译器仍然将其处理为指针（7被忽略了，这应该是为了保证和C语言的兼容）。\nT1的推导结果为int *\nT2和T3的推导结果为int(&)[]\n\n5.5 成员函数模板 \n成员函数也可以是模板，下面的例子为Stack<>定义了一个拷贝赋值运算符模板：\n// basics/stack5decl.hpp\ntemplate\nclass Stack {\n    private:\n        std::deque elems;        // elements\n    public:\n        void push(T const&);        // push element\n        void pop();                 // pop element\n        T const& top() const;       // return top element\n        bool empty() const {        // return whether the stack is empty\n            return elems.empty();\n        }\n\n        // assign stack of elements of type T2\n        template\n        Stack& operator= (Stack const&);\n};\n\n// basics/stack5assign.hpp\ntemplate\n    template\nStack& Stack::operator= (Stack const& op2)\n{\n    Stack tmp(op2);             // create a copy of the assigned stack\n\n    elems.clear();                  // remove existing elements\n    while (!tmp.empty()) {          // copy all elements\n        elems.push_front(tmp.top());\n        tmp.pop();\n    }\n    return *this;\n}\n\nStack不能直接访问Stack的私有对象，只能通过top()和pop()访问Stack的元素。方便起见，还可以添加一个友元定义，使其可以访问Stack::elems：\n// basics/stack6decl.hpp\ntemplate\nclass Stack {\n    private:\n        std::deque elems;    // elements\n    public:\n        void push(T const&);    // push element\n        void pop();             // pop element\n        T const& top() const;   // return top element\n        bool empty() const {    // return whether the stack is empty\n            return elems.empty();\n        }\n\n        // assign stack of elements of type T2\n        template\n        Stack& operator= (Stack const&);\n        // to get access to private members of Stack for any type T2:\n        template friend class Stack;\n};\n\n// basics/stack6assign.hpp\ntemplate\n    template\nStack& Stack::operator= (Stack const& op2)\n{\n    elems.clear();                  // remove existing elements\n    elems.insert(elems.begin(),     // insert at the beginning\n                op2.elems.begin(),  // all elements from op2\n                op2.elems.end());\n    return *this;\n}\n\n下面的例子将Stack<>中的内置容器类型也变成了一个模板参数：\n// basics/stack7decl.hpp\ntemplate>\nclass Stack {\n    private:\n        Cont elems; // elements\n    public:\n        void push(T const&); // push element\n        void pop(); // pop element\n        T const& top() const; // return top element\n        bool empty() const { // return whether the stack is empty\n            return elems.empty();\n        }\n        // assign stack of elements of type T2\n        template\n        Stack& operator= (Stack const&);\n        // to get access to private members of Stack for any type T2:\n        template friend class Stack;\n};\n\n// basics/stack7assign.hpp\ntemplate\n    template\nStack& Stack::operator= (Stack const& op2)\n{\n    elems.clear();                  // remove existing elements\n    elems.insert(elems.begin(),     // insert at the beginning\n                op2.elems.begin(),  // all elements from op2\n                op2.elems.end());\n    return *this;\n}\n\n成员函数模板可以被特化或者偏特化：\n// basics/boolstring.hpp\nclass BoolString {\n    private:\n        std::string value;\n    public:\n        BoolString (std::string const& s)\n            : value(s) {\n        }\n        template\n        T get() const {         // get value (converted to T)\n            return value;\n    }\n};\n\n// basics/boolstringgetbool.hpp\n// full specialization for BoolString::getValue<>() for bool\ntemplate<>\ninline bool BoolString::get() const {\n    return value == \"true\" || value == \"1\" || value == \"on\";\n}\n\n5.5.1 .template\n在下面的例子中，如果没有.template，则to_string后面的会被编译器解析为小于比较运算符（目前好像感受不到作用）：\ntemplate\nvoid printBitset (std::bitset const& bs) {\n    std::cout ,\n                                        std::allocator>();\n}\n\n5.5.2 泛型lambda表达式和成员函数模板\n泛型lambda表达式只是成员函数模板的一种简便写法，例如：\n[] (auto x, auto y) {\n    return x + y;\n}\n\n会被编译器解析为：\nclass SomeCompilerSpecificName {\n    public:\n        SomeCompilerSpecificName(); // constructor only callable by compiler\n        template\n        auto operator() (T1 x, T2 y) const {\n            return x + y;\n        }\n};\n\n5.6 变量模板 \nC++14开始支持变量模板：\ntemplate constexpr T pi{3.1415926535897932385};\n\n注意上面的声明不能出现在函数或者块作用域中。下面是使用方式：\nstd::cout   \n可以在不同的翻译单元中使用实例化的同一变量模板（全局变量）：\n// header.hpp:\ntemplate T val{}; // zero initialized value\n\n// translation unit 1:\n#include \"header.hpp\"\n\nint main()\n{\n    val = 42;\n    print();\n}\n\n// translation unit 2:\n#include \"header.hpp\"\n\nvoid print()\n{\n    std::cout  \n变量模板支持默认模板参数：\ntemplate\nconstexpr T pi = T{3.1415926535897932385};\n\nstd::cout   \n变量模板支持非类型模板参数：\n#include \n#include \n\ntemplate\n    std::array arr{}; // array with N elements, zero-initialized\n\ntemplate\n    constexpr decltype(N) dval = N; // type of dval depends on passed value\n\nint main()\n{\n    std::cout  [0] = 42;                                // sets first element of global arr\n    for (std::size_t i=0; i.size(); ++i) {  // uses values set in arr\n        std::cout [i] \n变量模板的典型应用是用来表示类模板成员变量：\nnamespace std {\n    template class numeric_limits {\n        public:\n            // ...\n            static constexpr bool is_signed = false;\n            // ...\n    };\n}\n\ntemplate\nconstexpr bool isSigned = std::numeric_limits::is_signed;\n\nC++17使用带_v后缀的变量模板来简化标准库中产生布尔变量的型别模板，例如：\nnamespace std {\n    template constexpr bool is_const_v = is_const::value;\n}\n\n5.7 模板的模板参数（Template Template Parameter） \n使用栈类模板时，如果要指定内部容器的类型，需要在实例化类模板时写两遍元素的类型：\nStack> vStack; // integer stack that uses a vector\n\n如果将第二个参数定义为模板的模板参数，就可以只写一遍元素的类型：\nStack vStack; // integer stack that uses a vector\n\n此时类模板的定义如下：\n// basics/stack8decl.hpp\ntemplate class Cont = std::deque>\nclass Stack {\n    private:\n        Cont elems; // elements\n    public:\n        void push(T const&);    // push element\n        void pop();             // pop element\n        T const& top() const;   // return top element\n        bool empty() const {    // return whether the stack is empty\n            return elems.empty();\n        }\n        // ...\n};\n\n从C++17开始，也可以写为下面的形式：\ntemplate typename Cont = std::deque>\nclass Stack { // ERROR before C++17\n    // ...\n};\n\n因为Elem没有使用，所以也可以写为下面的形式：\ntemplate class Cont = std::deque>\nclass Stack {\n    // ...\n};\n\n成员函数push()的定义也要进行相应修改：\ntemplate class Cont>\nvoid Stack::push (T const& elem)\n{\n    elems.push_back(elem); // append copy of passed elem\n}\n\n在C++17之前，即使实例化时使用的模板中包含默认参数，也要保证模板的模板参数中的参数数量和实例化时使用的模板需要的参数数量相同，而在C++17中解除了这个限制。原文：\n\nThe problem is that prior to C++17 a template template argument had to be a template with parameters that exactly match the parameters of the template template parameter it substitutes, with some exceptions related to variadic template parameters (see Section 12.3.4 on page 197). Default template arguments of template template arguments were not considered, so that a match couldn't be achieved by leaving out arguments that have default values (in C++17, default arguments are considered).\n\n具体来说，因为std::deque包含两个模板参数，虽然第二个参数是std::allocator并且有默认值，但是编译器无法进行匹配，所以应该写为下面的形式：\n// basics/stack9.hpp\n#include \n#include \n#include \n\ntemplate>\n        class Cont = std::deque>\nclass Stack {\n    private:\n        Cont elems;          // elements\n    public:\n        void push(T const&);    // push element\n        void pop();             // pop element\n        T const& top() const;   // return top element\n        bool empty() const {    // return whether the stack is empty\n            return elems.empty();\n        }\n\n    // assign stack of elements of type T2\n    template\n                    >class Cont2>\n    Stack& operator= (Stack const&);\n\n    // to get access to private members of any Stack with elements of type T2:\n    templateclass>\n    friend class Stack;\n};\n\ntemplate class Cont>\nvoid Stack::push (T const& elem)\n{\n    elems.push_back(elem); // append copy of passed elem\n}\n\ntemplate class Cont>\nvoid Stack::pop ()\n{\n    assert(!elems.empty());\n    elems.pop_back(); // remove last element\n}\n\ntemplate class Cont>\nT const& Stack::top () const\n{\n    assert(!elems.empty());\n    return elems.back(); // return copy of last element\n}\n\ntemplate class Cont>\ntemplate class Cont2>\nStack&\nStack::operator= (Stack const& op2)\n{\n    elems.clear();                  // remove existing elements\n    elems.insert(elems.begin(),     // insert at the beginning\n                op2.elems.begin(),  // all elements from op2\n                op2.elems.end());\n    return *this;\n}\n\n下面是使用方法：\n// basics/stack9test.cpp\n#include \"stack9.hpp\"\n#include \n#include \nint main()\n{\n    Stack iStack; // stack of ints\n    Stack fStack; // stack of floats\n\n    // manipulate int stack\n    iStack.push(1);\n    iStack.push(2);\n    std::cout  vStack;\n    vStack.push(5.5);\n    vStack.push(6.6);\n    std::cout \n5.8 总结\n\n需要用typename关键字来提示编译器接下来的标识符是由模板参数决定的一个类型，参见5.1\n访问基类模板中的成员时要带上this，参见5.3\n嵌入类和成员函数也可以是模板，参见5.5\n模板构造函数和模板赋值运算符不能代替普通的构造函数和赋值运算符\n使用大括号可以保证所有类型都能被正确初始化，参见5.2\nC++支持C风格数组和字符串的模板，参见5.4\n模板调用参数不为引用类型时，数组类型会转换为指针类型\nC++14开始支持变量模板\n类模板可以作为模板参数，也就是模板的模板参数\n要保证模板的模板参数中的参数数量和实例化时使用的模板需要的参数数量相同，参见5.7\n\n"},"2022-01-04-ch6-move-semantics-and-enable-if.html":{"url":"2022-01-04-ch6-move-semantics-and-enable-if.html","title":"Chapter 6 Move Semantics and enable_if<>","keywords":"","body":"6 移动语义和std::enable_if\n这应该是我印象里最好的关于移动语义定义了：移动操作可以将拷贝和赋值操作优化为内部资源的偷取，这是因为被移动的对象是一个将要被释放的对象。原文：\n\nYou can use it to optimize copying and assignments by moving (“stealing”) internal resources from a source object to a destination object instead of copying those contents. This can be done provided the source no longer needs its internal value or state (because it is about to be discarded).\n\n6.1 完美转发 \n完美转发是为了保证在模板实例化时仍然保持参数的属性：\n\n左值仍然是左值\n常量仍然是常量\n被移动的对象仍然是可以被移动的\n\n所以可能需要把代码写成这个样子：\n// basics/move1.cpp\n#include \n#include \n\nclass X {\n    // ...\n};\n\nvoid g (X&) {\n    std::cout  calls g(X&)\n}\nvoid f (X const& val) {\n    g(val);             // val is const lvalue => calls g(X const&)\n}\nvoid f (X&& val) {\n    g(std::move(val));  // val is non-const lvalue => needs std::move() to call g(X&&)\n}\nint main()\n{\n    X v;                // create variable\n    X const c;          // create constant\n    f(v);               // f() for nonconstant object calls f(X&) => calls g(X&)\n    f(c);               // f() for constant object calls f(X const&) => calls g(X const&)\n    f(X());             // f() for temporary calls f(X&&) => calls g(X&&)\n    f(std::move(v));    // f() for movable variable calls f(X&&) => calls g(X&&)\n}\n\n注意在void f (X&& val)中仍然需要std::move，这是因为C++默认不传递右值的属性。当使用val时，仍然是非常量左值，和void f (X& val)中的val属性是一样的。如果默认传递右值，那么当该值第一次作为某函数的实参时，函数返回后该值可能就失效了。原文：\n\nThe fact that move semantics is not automatically passed through is intentional and important. If it weren’t, we would lose the value of a movable object the first time we use it in a function.\n\n上面的代码写为模板的形式会是这个样子：\ntemplate\nvoid f (T val) {\n    g(T);\n}\n\n但是只对左值版本有效（详见第1章中的推导规则）。为了支持右值版本，应该写成下面的样子：\ntemplate\nvoid f (T&& val) {\n    g(std::forward(val)); // perfect forward val to g()\n}\n\n由于std::move不是模板，所以要用std::forward来转发潜在的移动语义。\n注意：模板中的T&&和普通函数中的X&&是不一样的：\n\n只有可以被移动的对象才可以作为参数类型为X&&的函数的参数\nT&&表明模板的参数的类型是转发引用（forwarding reference），或者在C++17之前叫做通用引用（universal reference），实参可以是常量左值、非常量左值和可移动对象。即使模板函数中的typename T::iterator&&也只是声明变量的类型为右值引用，而不是转发引用\n\n完整程序如下：\n// basics/move2.cpp\n#include \n#include \n\nclass X {\n    // ...\n};\n\nvoid g (X&) {\n    std::cout \nvoid f (T&& val) {\n    g(std::forward(val)); // call the right g() for any passed argument val\n}\n\nint main()\n{\n    X v;                // create variable\n    X const c;          // create constant\n    f(v);               // f() for variable calls f(X&) => calls g(X&)\n    f(c);               // f() for constant calls f(X const&) => calls g(X const&)\n    f(X());             // f() for temporary calls f(X&&) => calls g(X&&)\n    f(std::move(v));    // f() for move-enabled variable calls f(X&&) => calls g(X&&)\n}\n\n6.2 特殊成员函数模板 \n可以将构造函数模板化：\n// basics/specialmemtmpl1.cpp\n#include \n#include \n#include \n\nclass Person\n{\n    private:\n        std::string name;\n    public:\n        // constructor for passed initial name:\n        explicit Person(std::string const& n) : name(n) {\n            std::cout  calls copying string-CONSTR\n    Person p2(\"tmp\");           // init with string literal => calls moving string-CONSTR\n    Person p3(p1);              // copy Person => calls COPY-CONSTR\n    Person p4(std::move(p1));   // move Person => calls MOVE-CONST\n}\n\n有了完美转发，也可以将接受std::string的构造函数写成模板形式：\n// basics/specialmemtmpl2.hpp\n#include \n#include \n#include \n\nclass Person\n{\n    private:\n        std::string name;\n    public:\n        // generic constructor for passed initial name:\n        template\n        explicit Person(STR&& n) : name(std::forward(n)) {\n            std::cout \n但是此时Person p3(p1)会报错，因为根据模板匹配规则，p1不是常量，所以Person(STR&& n)比Person (Person const& p)匹配度更高，但是std::string却无法通过Person进行构造，所以需要通过std::enable_if来禁止匹配模板函数。\n6.3 std::enable_if\n从C++11开始，可以使用std::enable_if来在某些条件下禁掉函数模板：\ntemplate\ntypename std::enable_if 4)>::type\nfoo() {\n}\n\n上面的代码通过typename来提示编译器后面的T是模板参数。std::enable_if的含义为：\n\n当表达式为假（T类型的大小小于等于4）时，std::enable_if::type是未定义的，但是根据模板的“代换失败不是错误（Substitution Failure Is Not An Error，SFINAE）”原则，foo()的模板定义就被忽略了\n当表达式为真时，如果没有第二个模板参数，则std::enable_if::type是void，否则就是第二个模板参数的类型\n\n从C++14开始，也可以简写为下面的样子：\ntemplate\nstd::enable_if_t 4)>\nfoo() {\n}\n\n6.4 使用std::enable_if\n使用std::enable_if改写的Person类如下：\n// basics/specialmemtmpl3.hpp\n#include \n#include \n#include \n#include \n\ntemplate\nusing EnableIfString = std::enable_if_t>;\n\nclass Person\n{\n    private:\n        std::string name;\n    public:\n        // generic constructor for passed initial name:\n        template>\n        explicit Person(STR&& n)\n        : name(std::forward(n)) {\n            std::cout \n// basics/specialmemtmpl3.cpp\n#include \"specialmemtmpl3.hpp\"\nint main()\n{\n    std::string s = \"sname\";\n    Person p1(s);               // init with string object => calls TMPL-CONSTR\n    Person p2(\"tmp\");           // init with string literal => calls TMPL-CONSTR\n    Person p3(p1);              // OK => calls COPY-CONSTR\n    Person p4(std::move(p1));   // OK => calls MOVE-CONST\n}\n\n注意在C++14中要写为这样子：\ntemplate\nusing EnableIfString = std::enable_if_t::value>;\n\n而在C++11中要写为这样子：\ntemplate\nusing EnableIfString\n    = typename std::enable_if::value>::type;\n\n还可以用std::is_constructible：\ntemplate\nusing EnableIfString = std::enable_if_t>;\n\n在使用这种条件模板时，一定要使用对应的语义，如STR类型可以转换为std::string则模板定义有效，而不能是STR类型不能转换为Person。原文：\n\nIf you wonder why we don’t instead check whether STR is “not convertible to Person,” beware: We are defining a function that might allow us to convert a string to a Person. So the constructor has to know whether it is enabled, which depends on whether it is convertible, which depends on whether it is enabled, and so on. Never use enable_if in places that impact the condition used by enable_if. This is a logical error that compilers do not necessarily detect.\n\n不能通过std::enable_if禁掉编译器合成的拷贝和移动构造函数，除非拷贝构造函数被删除了：\nclass C\n{\n    public:\n        // ...\n        // user-define the predefined copy constructor as deleted\n        // (with conversion to volatile to enable better matches)\n        C(C const volatile&) = delete;\n\n        // implement copy constructor template with better match:\n        template\n        C (T const&) {\n            std::cout \n6.5 使用concepts简化enable_if\n未标准化的内容，不知道在说啥。\n6.6 总结\n\n可以通过转发引用T&&和std::forward来实现完美转发\n完美转发的成员函数模板可能比普通的函数匹配度更高\n通过std::enable_if可以在编译期间禁掉某些模板函数\n通过std::enable_if可以禁掉匹配度更高的构造函数模板和赋值运算符模板，从而让编译器优先匹配隐式合成的构造函数\n通过std::enable_if和delete可以模板化编译器合成的构造函数\nConcepts will allow us to use a more intuitive syntax for requirements on function templates\n\n"},"2022-01-05-ch7-by-value-or-by-reference.html":{"url":"2022-01-05-ch7-by-value-or-by-reference.html","title":"Chapter 7 By Value or by Reference?","keywords":"","body":"7 传值和传引用\n从C++11开始，函数传引用参数分为下面三种类型：\n\nX const&，常量左值引用\nX&，非常量左值引用\nX&&，右值引用，该值可以被修改，或者移动\n\n一般下列情况需要传引用：\n\n对象不能拷贝\n需要通过参数返回值\n模板只是用来转发\n性能方面的考虑\n\n7.1 传值\n传值是一定会发生对象构造的，但是拷贝构造可能会被编译器优化掉，还有可能进行移动构造：\ntemplate\nvoid printV (T arg) {\n    // ...\n}\n\nstd::string returnString();\nstd::string s = \"hi\";\nprintV(s);                  // copy constructor\nprintV(std::string(\"hi\"));  // copying usually optimized away (if not, move constructor)\nprintV(returnString());     // copying usually optimized away (if not, move constructor)\nprintV(std::move(s));       // move constructor\n\n根据类型推导规则，传值会丢弃const和volatile，数组会退化为指针。\n7.2 传引用\n7.2.1 传常量引用\n传常量引用能保证不会发生拷贝：\ntemplate\nvoid printR (T const& arg) {\n    // ...\n}\n\nstd::string returnString();\nstd::string s = \"hi\";\nprintR(s);                  // no copy\nprintR(std::string(\"hi\"));  // no copy\nprintR(returnString());     // no copy\nprintR(std::move(s));       // no copy\n\n引用的内部机制仍然是传地址，但是不能保证函数不会修改该常量，因为const只是编译期间的检查。根据类型推导规则，传引用不会丢弃const和volatile，传数组时类型信息会包括数组长度。\n7.2.2 传非常量引用\n不能将临时量作为传非常量引用的参数：\ntemplate\nvoid outR (T& arg) {\n    // ...\n}\n\nstd::string returnString();\nstd::string s = \"hi\";\noutR(s);                    // OK: T deduced as std::string, arg is std::string&\noutR(std::string(\"hi\"));    // ERROR: not allowed to pass a temporary (prvalue)\noutR(returnString());       // ERROR: not allowed to pass a temporary (prvalue)\noutR(std::move(s));         // ERROR: not allowed to pass an xvalue\n\n常量可以传给非常量引用，此时推导结果中会包含const，例子如下：\nstd::string const c = \"hi\";\noutR(c);                    // OK: T deduced as std::string const\noutR(returnConstString());  // OK: same if returnConstString() returns const string\noutR(std::move(c));         // OK: T deduced as std::string const\noutR(\"hi\");                 // OK: T deduced as char const[3]\n\n有两种方法可以禁止将常量传递给以非常量引用作为参数的函数：\n\n使用静态断言\n\ntemplate\nvoid outR (T& arg) {\n    static_assert(!std::is_const::value, \"out parameter of foo(T&) is const\");\n    // ...\n}\n\n\n使用std::enable_if\n\ntemplate::value>\nvoid outR (T& arg) {\n    // ...\n}\n\n7.2.3 传转发引用\ntemplate\nvoid passR (T&& arg) { // arg declared as forwarding reference\n    // ...\n}\n\nstd::string s = \"hi\";\npassR(s);                   // OK: T deduced as std::string& (also the type of arg)\npassR(std::string(\"hi\"));   // OK: T deduced as std::string, arg is std::string&&\npassR(returnString());      // OK: T deduced as std::string, arg is std::string&&\npassR(std::move(s));        // OK: T deduced as std::string, arg is std::string&&\npassR(arr);                 // OK: T deduced as int(&)[4] (also the type of arg)\n\nstd::string const c = \"hi\";\npassR(c);                   // OK: T deduced as std::string const&\npassR(\"hi\");                // OK: T deduced as char const(&)[3] (also the type of arg)\nint arr[4];\npassR(\"hi\");                // OK: T deduced as int (&)[4] (also the type of arg)\n\n转发引用是唯一使得类型T可以被推导为引用的写法，所以下面的代码就会因为引用没有初始化而报错：\ntemplate\nvoid passR(T&& arg) {   // arg is a forwarding reference\n    T x;                // for passed lvalues, x is a reference, which requires an initializer\n    // ...\n}\n\nfoo(42);    // OK: T deduced as int\nint i;\nfoo(i);     // ERROR: T deduced as int&, which makes the declaration of x in passR() invalid\n\n7.3 std::ref和std:cref\n从C++11开始，即使模板的调用参数是传值的，也可以使用std::ref和std::cref来传引用：\n// basics/cref.cpp\n#include  // for std::cref()\n#include \n#include \n\nvoid printString(std::string const& s)\n{\n    std::cout \nvoid printT (T arg)\n{\n    printString(arg);       // might convert arg back to std::string\n}\n\nint main()\n{\n    std::string s = \"hello\";\n    printT(s);              // print s passed by value\n    printT(std::cref(s));   // print s passed “as if by reference”\n}\n\nstd::ref的实现方式是创建了一个新的std::reference_wrapper对象来包装传入的参数，并将新的对象以值得方式传入模板，同时提供了隐式类型转换来将std::reference_wrapper转换为原始参数的类型。\n7.4 C风格字符串和数组的处理\n7.4.1 定义专用的模板函数\nC风格的字符串和数组在模板中处理起来非常麻烦，这是由传值和传引用时模板的推导规则决定的，所以最好的办法就是单独重载：\n\n为数组单独重载，更详细的例子见第5章\n\ntemplate\nvoid foo(T (&arg1)[L1], T (&arg2)[L2])\n{\n    T* pa = arg1; // decay arg1\n    T* pb = arg2; // decay arg2\n    if (compareArrays(pa, L1, pb, L2)) {\n        // ...\n    }\n}\n\n\n使用std::enable_if\n\ntemplate>>\nvoid foo (T&& arg1, T&& arg2)\n{\n    // ...\n}\n\n7.5 返回引用和返回值\n返回引用会带来一些麻烦，因为引用的对象是从函数里返回的，在函数外不受控制，但是还是有返回引用的应用的：\n\n返回容器中的元素\n使得类成员可写\n链式调用，例如输入输出运算符和赋值运算符\n返回只读类成员的常量引用\n\n下面的代码都是错的（感觉retV太扯了）：\ntemplate\nT retR(T&& p)       // p is a forwarding reference\n{\n    return T{...};  // OOPS: returns by reference when called for lvalues\n}\n\ntemplate\nT retV(T p)         // Note: T might become a reference\n{\n    return T{...};  // OOPS: returns a reference if T is a reference\n}\n\nint x;\nretV(x);      // retT() instantiated for T as int&\n\n为了避免上述错误，可以使用std::remove_reference和std::decay去除类型推导结果中的引用，或者使用auto保证永远返回值。\n7.6 推荐的模板参数声明方式\n\n一般将模板的调用参数设置为传值的方式，如果对象很大，尝试使用std::ref和std::cref进行包装\n或者在下面的情况下可以传引用：\n如果参数需要修改，同时可以考虑禁掉推到类型为常量引用\n如果模板需要传递参数，考虑使用转发引用\n如果性能瓶颈确实是性能瓶颈，考虑使用常量引用\n\n\n\n书中给出了std::make_pair从C++98到C++11的发展历史：\n// C++98\ntemplate\npair make_pair (T1 const& a, T2 const& b)\n{\n    return pair(a,b);\n}\n\n// C++03\ntemplate\npair make_pair (T1 a, T2 b)\n{\n    return pair(a,b);\n}\n\n// C++11\ntemplate\nconstexpr pair::type, typename decay::type>\nmake_pair (T1&& a, T2&& b)\n{\n    return pair::type,typename decay::type>(\n        forward(a), forward(b));\n}\n\n7.7 总结\n\n可以通过不同长度的C风格字符串来测试模板的正确性\n传值会发生类型退化（decay），而传引用不会\nstd::decay可以将引用类型还原为引用的类型\n通过std::ref和std::cref可以实现向传值的模板传引用\n传值最大的问题在于拷贝带来的性能开销\n除非知道在干嘛，否则还是应该传值\n函数最好是返回值而不是返回引用\n关于性能的问题最好测一下，不要去猜\n\n我本以为引用是一个很好的语法，但是看了这一章后我觉得引用会带来很多的问题，而且正是这些问题使得C++变得更加复杂，所以我开始怀疑：引用到底是不是一个好的语法？\n"},"2022-01-06-ch8-compile-time-programming.html":{"url":"2022-01-06-ch8-compile-time-programming.html","title":"Chapter 8 Compile-Time Programming","keywords":"","body":"8 编译时编程\n8.1 模板元编程\n模板是编译时实例化的，所以可以在编译时将模板递归的展开，从而生成程序，例如下面的素性判断程序：\n// basics/isprime.hpp\ntemplate    // p: number to check, d: current divisor\nstruct DoIsPrime {\n    static constexpr bool value = (p%d != 0) && DoIsPrime::value;\n};\n\ntemplate                // end recursion if divisor is 2\nstruct DoIsPrime {\n    static constexpr bool value = (p%2 != 0);\n};\n\ntemplate                // primary template\nstruct IsPrime {\n    // start recursion with divisor from p/2:\n    static constexpr bool value = DoIsPrime::value;\n};\n\n// special cases (to avoid endless recursion with template instantiation):\ntemplate<>\nstruct IsPrime { static constexpr bool value = false; };\ntemplate<>\nstruct IsPrime { static constexpr bool value = false; };\ntemplate<>\nstruct IsPrime { static constexpr bool value = true; };\ntemplate<>\nstruct IsPrime { static constexpr bool value = true; };\n\n对于IsPrime::value，模板实例化的过程如下：\n\nIsPrime::value\nDoIsPrime::value\n9%4!=0 && DoIsPrime::value\n9%4!=0 && 9%3!=0 && DoIsPrime::value\n9%4!=0 && 9%3!=0 && 9%2!=0\n\n由于该值可以在编译期间被计算，所以IsPrime::value的最终结果为false。\n8.2 constexpr\n被constexpr修饰的函数可以在编译期间求值，这要保证函数中的每一步都能够在编译期间进行求值，依然以素性判断程序为例：\n// basics/isprime11.hpp\nconstexpr bool\ndoIsPrime (unsigned p, unsigned d)  // p: number to check, d: current divisor\n{\n    return d!=2 ? (p%d!=0) && doIsPrime(p,d-1)  // check this and smaller divisors\n                : (p%2!=0);                     // end recursion if divisor is 2\n}\nconstexpr bool isPrime (unsigned p)\n{\n    return p \n从C++14开始，被constexpr的函数中也可以使用较为复杂的程序控制结构：\n// basics/isprime14.hpp\nconstexpr bool isPrime (unsigned int p)\n{\n    for (unsigned int d=2; d 1;           // no divisor without remainder found\n}\n\n8.3 通过偏特化实现执行路径选择\n下面的代码根据SZ的素性使用了不同的结构体：\n// primary helper template:\ntemplate\nstruct Helper;\n\n// implementation if SZ is not a prime number:\ntemplate\nstruct Helper\n{\n    // ...\n};\n\n// implementation if SZ is a prime number:\ntemplate\nstruct Helper\n{\n    // ...\n};\n\ntemplate\nlong foo (std::array const& coll)\n{\n    Helper h; // implementation depends on whether array has prime number as size\n    // ...\n}\n\n注意只能对类模板进行偏特化，如果要在编译期间对函数模板中的执行路径进行选择，可以使用：\n\n带静态函数的类\nstd::enable_if\nSFINAE特性\n编译时if\n\n8.4 SFINAE\n调用重载函数时，编译器会考查每个重载函数的匹配度，然后最终决定要调用哪个函数。当重载函数中包括函数模板时，编译器会推导函数模板中模板参数的类型，然后将其视为一个普通函数来考查匹配度。但是在类型推导的过程中可能会产生毫无意义的结果，与其将其视为错误，语言更倾向于忽略它——这就是代换失败不是错误（Substitution Failure Is Not An Error，SFINAE，读作sfee-nay）原则。\n这里提到的代换和第2章中提到的部分实例化类模板不是一个概念。编译器可能会通过代换生成一些无用的函数签名，这些模板最终不会变成重载函数的定义（这是我猜的）。\n如果有下面两个函数模板定义：\n// basics/len1.hpp\n// number of elements in a raw array:\ntemplate\nstd::size_t len (T(&)[N])\n{\n    return N;\n}\n\n// number of elements for a type having size_type:\ntemplate\ntypename T::size_type len (T const& t)\n{\n    return t.size();\n}\n\n和下面的调用代码：\nint a[10];\nstd::cout  v;\nstd::cout  x;\nstd::cout \n虽然两个模板都可以匹配len(a)和len(\"tmp\")，但是int [10]和char const[4]类型中没有size_type成员，所以会匹配第一个函数模板，同时编译器不会因为第二个函数模板代换错误而报错。但是对于len(x)，由于只能匹配第二个，但是却没有size()成员，所以会触发编译时错误。\n代换中的错误可以迫使编译器去选择其它并不精确的匹配：\n// basics/len2.hpp\n// number of elements in a raw array:\ntemplate\nstd::size_t len (T(&)[N])\n{\n    return N;\n}\n\n// number of elements for a type having size_type:\ntemplate\ntypename T::size_type len (T const& t)\n{\n    return t.size();\n}\n\n// fallback for all other types:\nstd::size_t len (...)\n{\n    return 0;\n}\n\n此时len(p)会匹配最后一个函数模板，但是len(x)仍然会匹配第二个函数模板，还是无法避免触发编译时错误。\n8.4.1 decltype和SFINAE\n为了解决上面的问题，可以将模板定义为：\ntemplate\nauto len (T const& t) -> decltype( (void)(t.size()), T::size_type() )\n{\n    return t.size();\n}\n\ndecltype中的,运算符保证了表达式的返回值为T::size_type()，这也是函数模板的返回类型，但是在此之前需要先保证表达式是合法的，也就是t.size()不会报错。\n8.5 编译时if\nC++17引入了编译时if语句来实现模板的选择，回顾第4章中的print()模板，使用编译时if的改写版本如下：\ntemplate\nvoid print (T const& firstArg, Types const&... args)\n{\n    std::cout  0) {\n        print(args...); // code only available if sizeof...(args)>0 (since C++17)\n    }\n}\n\n当函数参数包args为空时，sizeof...(args)为0，可以不用继续实例化print()，递归就可以结束了。\nif constexpr是在两阶段翻译的第二阶段中起作用的：\ntemplate\nvoid foo(T t)\n{\n    if constexpr(std::is_integral_v) {\n        if (t > 0) {\n            foo(t-1); // OK\n        }\n    }\n    else {\n        undeclared(t);  // error if not declared and not discarded (i.e. T is not integral)\n        undeclared();   // error if not declared (even if discarded)\n        static_assert(false, \"no integral\"); // always asserts (even if discarded)\n        static_assert(!std::is_integral_v, \"no integral\"); // OK\n    }\n}\n\n在两阶段翻译的第一阶段，要保证能够找到undeclared(t)和undeclared()的声明，同时static_assert(false, \"no integral\")生效；在两阶段翻译的第二阶段，if constexpr中的条件会被计算，如果为假，则要求以T类型为参数的undeclared()存在。\nif constexpr也可以用在普通函数中，功能应该是只是迫使编译器在编译时计算条件表达式的结果。\nint main()\n{\n    if constexpr(std::numeric_limits::is_signed) {\n        foo(42); // OK\n    }\n    else {\n        undeclared(42); // error if undeclared() not declared\n        static_assert(false, \"unsigned\"); // always asserts (even if discarded)\n        static_assert(!std::numeric_limits::is_signed, \"char is unsigned\"); // OK\n    }\n}\n\n8.6 总结\n\n通过递归、偏特化等技术可以在编译时将模板展开并在编译时进行求值\nconstexpr使得普通函数可以在编译时进行计算\n通过偏特化技术，可以实现根据编译时条件选择实例化的类模板\n当在代换的过程中不会产生错误代码时，函数模板才可能被实例化\n可以使用SFINAE规则来实现特定模板的选择\nC++17支持编译时if\n\n第2条原文：\n\nWith constexpr functions, we can replace most compile-time computations with “ordinary functions” that are callable in compile-time contexts.\n\n第4条原文：\n\nTemplates are used only if needed and substitutions in function template declarations do not result in invalid code. This principle is called SFINAE (substitution failure is not an error).\n\n"},"2022-01-06-ch9-using-templates-in-practice.html":{"url":"2022-01-06-ch9-using-templates-in-practice.html","title":"Chapter 9 Using Templates in Practice","keywords":"","body":"9 模板在实际中的应用\n9.1 模板的包含模型\n9.1.1 链接错误\n一般来说C++代码的组织方式为：\n\n在头文件中声明类和定义类型\n全局变量和函数声明在头文件中，定义在源文件中\n\n自然而然地会用相同的方式定义和使用函数模板：\n// basics/myfirst.hpp\n#ifndef MYFIRST_HPP\n#define MYFIRST_HPP\n\n// declaration of template\ntemplate\nvoid printTypeof (T const&);\n\n#endif // MYFIRST_HPP\n\n// basics/myfirst.cpp\n#include \n#include \n#include \"myfirst.hpp\"\n\n// implementation/definition of template\ntemplate\nvoid printTypeof (T const& x)\n{\n    std::cout \n// basics/myfirstmain.cpp\n#include \"myfirst.hpp\"\n\n// use of the template\nint main()\n{\n    double ice = 3.0;\n    printTypeof(ice); // call function template for type double\n}\n\n上面的使用方式会报链接错误，这是因为模板定义和触发实例化模板的代码在两个文件中。编译器并不知道编译printTypeof(ice)时需要实例化模板，而当编译另一个文件时，由于没有代码触发模板实例化，模板自然也就不会被实例化。原文：\n\nUnfortunately, in the previous example, these two pieces of information are in files that are compiled separately. Therefore, when our compiler sees the call to printTypeof() but has no definition in sight to instantiate this function for double, it just assumes that such a definition is provided elsewhere and creates a reference (for the linker to resolve) to that definition. On the other hand, when the compiler processes the file myfirst.cpp, it has no indication at that point that it must instantiate the template definition it contains for specific arguments.\n\n9.1.2 在头文件中定义模板\n解决上面问题的方法就是在头文件中完整的定义模板：\n// basics/myfirst2.hpp\n#ifndef MYFIRST_HPP\n#define MYFIRST_HPP\n\n#include \n#include \n\n// declaration of template\ntemplate\nvoid printTypeof (T const&);\n\n// implementation/definition of template\ntemplate\nvoid printTypeof (T const& x)\n{\n    std::cout \n将模板定义在头文件中的方式就是模板的包含模型（inclusion model），这会带来两个问题：\n\n包含额外的头文件（也就是定义模板时使用的和）\n如果两个翻译单元都实例化了同一模板函数，则可能会出现重复定义\n\n9.2 模板和内联\n将函数声明为inline并不一定真正进行内联，而只是让同一个函数可以被定义很多次，对于模板来说也是这个道理。\n9.3 预编译头文件\nC++头文件编译的很慢，预编译头文件技术就是提取公共头文件提前编译好。\n9.4 理解模板编译错误\n一般来说模板错误都会超级复杂，本节给了两个例子。\n第一个是类型错误：\n// basics/errornovel1.cpp\n#include \n#include \n#include \n\nint main()\n{\n    std::map coll;\n    // ...\n    // find the first nonempty string in coll:\n    auto pos = std::find_if (coll.begin(), coll.end(),\n                            [] (std::string const& s) {\n                                return s != \"\";\n                            });\n}\n\n产生的编译错误如下（看到这我不由自主地笑了，傻叉编译器确实都是这样子的）：\nIn file included from /usr/include/c++/7/bits/stl_algobase.h:71:0,\n                 from /usr/include/c++/7/bits/char_traits.h:39,\n                 from /usr/include/c++/7/string:40,\n                 from errornovel1.cpp:1:\n/usr/include/c++/7/bits/predefined_ops.h: In instantiation of ‘bool __gnu_cxx::__ops::_Iter_pred::operator()(_Iterator) [with _Iterator = std::_Rb_tree_iterator, double> >; _Predicate = main()::]’:\n/usr/include/c++/7/bits/stl_algo.h:104:42:   required from ‘_InputIterator std::__find_if(_InputIterator, _InputIterator, _Predicate, std::input_iterator_tag) [with _InputIterator = std::_Rb_tree_iterator, double> >; _Predicate = __gnu_cxx::__ops::_Iter_pred >]’\n/usr/include/c++/7/bits/stl_algo.h:161:23:   required from ‘_Iterator std::__find_if(_Iterator, _Iterator, _Predicate) [with _Iterator = std::_Rb_tree_iterator, double> >; _Predicate = __gnu_cxx::__ops::_Iter_pred >]’\n/usr/include/c++/7/bits/stl_algo.h:3932:28:   required from ‘_IIter std::find_if(_IIter, _IIter, _Predicate) [with _IIter = std::_Rb_tree_iterator, double> >; _Predicate = main()::]’\nerrornovel1.cpp:13:30:   required from here\n/usr/include/c++/7/bits/predefined_ops.h:283:11: error: no match for call to ‘(main()::) (std::pair, double>&)’\n  { return bool(_M_pred(*__it)); }\n           ^~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/7/bits/predefined_ops.h:283:11: note: candidate: bool (*)(const string&) {aka bool (*)(const std::__cxx11::basic_string&)} \n/usr/include/c++/7/bits/predefined_ops.h:283:11: note:   candidate expects 2 arguments, 2 provided\nerrornovel1.cpp:11:53: note: candidate: main()::\n                             [] (std::string const& s) {\n                                                     ^\nerrornovel1.cpp:11:53: note:   no known conversion for argument 1 from ‘std::pair, double>’ to ‘const string& {aka const std::__cxx11::basic_string&}’\n\n后面就是解释了一下该怎么去读懂这个错误信息，不过如果有经验的话应该一眼就能看明白这个错误信息是啥的。\n第二个例子是缺少const：\n// basics/errornovel2.cpp\n#include \n#include \n\nclass Customer\n{\n    private:\n        std::string name;\n    public:\n        Customer (std::string const& n)\n            : name(n) {\n        }\n        std::string getName() const {\n            return name;\n        }\n};\n\nint main()\n{\n    // provide our own hash function:\n    struct MyCustomerHash {\n        // NOTE: missing const is only an error with g++ and clang:\n        std::size_t operator() (Customer const& c) {\n            return std::hash()(c.getName());\n        }\n    };\n\n    // and use it for a hash table of Customers:\n    std::unordered_set coll;\n    // ...\n}\n\ng++产生的编译错误如下（人间真实）：\nIn file included from /usr/include/c++/7/bits/hashtable.h:35:0,\n                 from /usr/include/c++/7/unordered_set:47,\n                 from errornovel2.cpp:2:\n/usr/include/c++/7/bits/hashtable_policy.h: In instantiation of ‘struct std::__detail::__is_noexcept_hash’:\n/usr/include/c++/7/type_traits:143:12:   required from ‘struct std::__and_, std::__detail::__is_noexcept_hash >’\n/usr/include/c++/7/type_traits:154:31:   required from ‘struct std::__not_, std::__detail::__is_noexcept_hash > >’\n/usr/include/c++/7/bits/unordered_set.h:98:63:   required from ‘class std::unordered_set’\nerrornovel2.cpp:28:49:   required from here\n/usr/include/c++/7/bits/hashtable_policy.h:87:34: error: no match for call to ‘(const main()::MyCustomerHash) (const Customer&)’\n  noexcept(declval()(declval()))>\n           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\nerrornovel2.cpp:22:21: note: candidate: std::size_t main()::MyCustomerHash::operator()(const Customer&) \n         std::size_t operator() (Customer const& c) {\n                     ^~~~~~~~\nerrornovel2.cpp:22:21: note:   passing ‘const main()::MyCustomerHash*’ as ‘this’ argument discards qualifiers\nIn file included from /usr/include/c++/7/bits/move.h:54:0,\n                 from /usr/include/c++/7/bits/stl_pair.h:59,\n                 from /usr/include/c++/7/bits/stl_algobase.h:64,\n                 from /usr/include/c++/7/bits/char_traits.h:39,\n                 from /usr/include/c++/7/string:40,\n                 from errornovel2.cpp:1:\n/usr/include/c++/7/type_traits: In instantiation of ‘struct std::__not_, std::__detail::__is_noexcept_hash > >’:\n/usr/include/c++/7/bits/unordered_set.h:98:63:   required from ‘class std::unordered_set’\nerrornovel2.cpp:28:49:   required from here\n/usr/include/c++/7/type_traits:154:31: error: ‘value’ is not a member of ‘std::__and_, std::__detail::__is_noexcept_hash >’\n     : public __bool_constant\n                               ^~~~~~~~~~~~~~~~\nIn file included from /usr/include/c++/7/unordered_set:48:0,\n                 from errornovel2.cpp:2:\n/usr/include/c++/7/bits/unordered_set.h: In instantiation of ‘class std::unordered_set’:\nerrornovel2.cpp:28:49:   required from here\n/usr/include/c++/7/bits/unordered_set.h:98:63: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef __uset_hashtable  _Hashtable;\n                                                               ^~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:105:45: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::key_type key_type;\n                                             ^~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:106:47: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::value_type value_type;\n                                               ^~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:107:43: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::hasher hasher;\n                                           ^~~~~~\n/usr/include/c++/7/bits/unordered_set.h:108:46: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::key_equal key_equal;\n                                              ^~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:109:51: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::allocator_type allocator_type;\n                                                   ^~~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:114:45: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::pointer  pointer;\n                                             ^~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:115:50: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::const_pointer const_pointer;\n                                                  ^~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:116:47: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::reference  reference;\n                                               ^~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:117:52: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::const_reference const_reference;\n                                                    ^~~~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:118:46: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::iterator  iterator;\n                                              ^~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:119:51: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::const_iterator const_iterator;\n                                                   ^~~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:120:51: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::local_iterator local_iterator;\n                                                   ^~~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:121:57: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::const_local_iterator const_local_iterator;\n                                                         ^~~~~~~~~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:122:47: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::size_type  size_type;\n                                               ^~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:123:52: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       typedef typename _Hashtable::difference_type difference_type;\n                                                    ^~~~~~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:282:7: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       operator=(initializer_list __l)\n       ^~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:375:2: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n  emplace(_Args&&... __args)\n  ^~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:419:7: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       insert(const value_type& __x)\n       ^~~~~~\n/usr/include/c++/7/bits/unordered_set.h:423:7: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       insert(value_type&& __x)\n       ^~~~~~\n/usr/include/c++/7/bits/unordered_set.h:478:7: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       insert(initializer_list __l)\n       ^~~~~~\n/usr/include/c++/7/bits/unordered_set.h:679:7: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       equal_range(const key_type& __x)\n       ^~~~~~~~~~~\n/usr/include/c++/7/bits/unordered_set.h:683:7: error: ‘value’ is not a member of ‘std::__not_, std::__detail::__is_noexcept_hash > >’\n       equal_range(const key_type& __x) const\n       ^~~~~~~~~~~\n\n这里的错误其实就是std::unordered_set需要MyCustomerHash的调用运算符()是const成员函数。\n所以作者给出的建议就是多用几个编译器试试。。。\n9.5 后记\n9.6 总结\n\n模板的包含模型是最广的应用方式\n只有在头文件中类外（也包括结构体外）定义的特化函数模板需要inline\n如果使用预编译头，要保证头文件的包含顺序是一致的\n排除模板错误非常麻烦\n\n"},"2022-01-07-ch10-basic-template-terminology.html":{"url":"2022-01-07-ch10-basic-template-terminology.html","title":"Chapter 10 Basic Template Terminology","keywords":"","body":"10 模板相关术语\n10.1 类模板还是模板类（“Class Template” or “Template Class”?）\n\n类模板（class template）表示这个类是一个模板，是一类类的统称\n模板类（template class）有时指类模板，有时指类模板实例化后得到的类\n\n书中一直都用函数模板（function template）、成员模板（member template），成员函数模板（member function template）和变量模板（variable template）。\n10.2 代换、实例化和特化（Substitution, Instantiation, and Specialization）\n\n代换（substitution）：使用模板实参替代模板形参的过程\n模板实例化（instantiation）：通过代换生成类和函数定义的过程，根据是否代换全部参数分为完整实例化和不完整实例化\n特化（specialization）：完整和不完整实例化模板得到的结果\n\n10.3 声明和定义（Declarations versus Definitions）\n\n声明（declaration）：只引入名字，不提供细节\n\nclass C;        // a declaration of C as a class\nvoid f(int p);  // a declaration of f() as a function and p as a named parameter\nextern int v;   // a declaration of v as a variable\n\n\n定义（definition）：提供具体的细节\n\nclass C {};         // definition (and declaration) of class C\n\nvoid f(int p) {     // definition (and declaration) of function f()\n    std::cout \n10.3.1 完整和不完整类型\n不完整类型包括：\n\n声明但未定义的类\n没有定义长度的数组\n数组元素类型是不完整的\nvoid\n枚举类型的基类和枚举值是未定义的\n用const和volatile修饰的上面的类型\n\n其余都是完整类型。例子如下：\nclass C;                // C is an incomplete type\nC const* cp;            // cp is a pointer to an incomplete type\nextern C elems[10];     // elems has an incomplete type\nextern int arr[];       // arr has an incomplete type\n// ...\nclass C { };            // C now is a complete type (and therefore cpand elems\n                        // no longer refer to an incomplete type)\nint arr[10];            // arr now has a complete type\n\n10.4 一遍定义规则（The One-Definition Rule）\n一遍定义规则可以简单解释为：\n\n普通非内联函数（包括成员函数）、非内联全局变量和类静态成员在整个程序中只能定义一次\n类类型、模板（包括偏特化但不包括特化）、内联函数和变量在每个翻译单元中只能定义一次\n\n可链接实体（linkable entity）包括函数、成员函数、全局变量、静态数据成员，这些实体也可以是模板生成的。\n10.5 模板实参和模板形参（Template Arguments versus Template Parameters）\n\n模板形参（template parameter）：模板声明和定义中template后的参数\n模板实参（template argument）：代换模板形参的实际参数，也就是实例化模板时<>中的参数，能够在编译时计算出的值\n模板标识（template-id）：模板名称和模板参数的结合\n\n10.6 总结\n\n使用术语类模板、函数模板和变量模板\n模板实例化是用模板实参替代模板形参得到常规类和常规函数的过程，得到的结果为模板的特化\n类型可以是完整的，也可以是不完整的\n非内联函数、成员函数、全局变量和静态数据成员在整个程序中只能定义一次\n\n"},"2022-01-08-ch11-generic-libraries.html":{"url":"2022-01-08-ch11-generic-libraries.html","title":"Chapter 11 Generic Libraries","keywords":"","body":"11 泛型库\n11.1 可调用对象类型\nC++中的可调用对象类型（callable type）包括：\n\n函数指针\n重载了调用运算符的类\n返回函数指针和函数引用的类的成员函数\n\n11.1.1 函数对象\n下面是类似std::for_each功能的模板：\n// basics/foreach.hpp\ntemplate\nvoid foreach (Iter current, Iter end, Callable op)\n{\n    while (current != end) {    // as long as not reached the end\n        op(*current);           // call passed operator for current element\n        ++current;              // and move iterator to next element\n    }\n}\n\n// basics/foreach.cpp\n#include \n#include \n#include \"foreach.hpp\"\n\n// a function to call:\nvoid func(int i)\n{\n    std::cout  primes = { 2, 3, 5, 7, 11, 13, 17, 19 };\n    foreach(primes.begin(), primes.end(),   // range\n            func);                          // function as callable (decays to pointer)\n    foreach(primes.begin(), primes.end(),   // range\n            &func);                         // function pointer as callable\n    foreach(primes.begin(), primes.end(),   // range\n            FuncObj());                     // function object as callable\n    foreach(primes.begin(), primes.end(),   // range\n            [] (int i) {                    // lambda as callable\n                std::cout \n\n由于foreach<>中的第三个参数是传值的，传递函数对象func会退化为指向该函数的指针，因此第一个调用和第二个调用时一样的\n当传递重载了调用运算符()的类对象FuncObj时，op(*current)等价于op.operator()(*current)，注意要将调用运算符声明为const的\n可调用对象也可以是lambda表达式，也可以称为闭包（closures）\n\n11.1.2 成员函数中的额外参数\n对于成员函数，由于其中存在隐式的参数this，无法通过前面的方式进行调用，所以C++17提供了std::invoke来解决这个问题：\n// basics/foreachinvoke.hpp\n#include \n#include \n\ntemplate\nvoid foreach (Iter current, Iter end, Callable op, Args const&... args)\n{\n    while (current != end) {    // as long as not reached the end of the elements\n        std::invoke(op,         // call passed callable with\n                    args...,    // any additional args\n                    *current);  // and the current element\n        ++current;\n    }\n}\n\n// basics/foreachinvoke.cpp\n#include \n#include \n#include \n#include \"foreachinvoke.hpp\"\n\n// a class with a member function that shall be called\nclass MyClass {\n    public:\n        void memfunc(int i) const {\n            std::cout  primes = { 2, 3, 5, 7, 11, 13, 17, 19 };\n\n    // pass lambda as callable and an additional argument:\n    foreach(primes.begin(), primes.end(),           // elements for 2nd arg of lambda\n            [](std::string const& prefix, int i) {  // lambda to call\n                std::cout \n如果传递给std::invoke的可调用对象是成员函数指针，则会将可变参数中的第一个参数作为this指针，后面的参数照常传递。\n11.1.3 包装函数调用\nstd::invoke的另一个应用是包装函数调用：\n// basics/invoke.hpp\n#include       // for std::invoke()\n#include    // for std::forward()\n\ntemplate\ndecltype(auto) call(Callable&& op, Args&&... args)\n{\n    return std::invoke(std::forward(op),      // passed callable with\n                        std::forward(args)...);   // any additional args\n}\n\n上面的代码通过decltype(auto)实现返回引用。如果还需要对std::invoke的返回值进行处理然后再返回，则应该写为下面的样子：\ndecltype(auto) ret{std::invoke(std::forward(op), std::forward(args)...)};\n// ...\nreturn ret;\n\n但是decltype(auto)结果不能是void，因为void不完整类型，应该写为下面的样子：\n// basics/invokeret.hpp\n#include       // for std::invoke()\n#include    // for std::forward()\n#include   // for std::is_same<> and invoke_result<>\n\ntemplate\ndecltype(auto) call(Callable&& op, Args&&... args)\n{\n    if constexpr(std::is_same_v, void>) {\n        // return type is void:\n        std::invoke(std::forward(op),\n                    std::forward(args)...);\n        // ...\n        return;\n    }\n    else {\n        // return type is not void:\n        decltype(auto) ret{std::invoke(std::forward(op),\n                                        std::forward(args)...)};\n        // ...\n        return ret;\n    }\n}\n\n11.2 实现泛型库的其它方法\n11.2.1 类型特征\nC++标准库提供了一些对类型进行操作的模板，可以修改类型：\n#include \n\ntemplate\nclass C\n{\n    // ensure that T is not void (ignoring const or volatile):\n    static_assert(!std::is_same_v,void>,\n                    \"invalid instantiation of class C for void type\");\n    public:\n        template\n        void f(V&& v) {\n            if constexpr(std::is_reference_v) {\n                // ... // special code if T is a reference type\n            }\n            if constexpr(std::is_convertible_v,T>) {\n                // ... // special code if V is convertible to T\n            }\n            if constexpr(std::has_virtual_destructor_v) {\n                // ... // special code if V has virtual destructor\n            }\n        }\n};\n\nstd::remove_const_t // yields int const&\n\nstd::remove_const_t>    // int\nstd::remove_reference_t>    // int const\n\nstd::decay_t // yields int\n\nmake_unsigned_t        // unsigned int\nmake_unsigned_t // undefined behavior (hopefully error)\n\nadd_rvalue_reference_t         // int&&\nadd_rvalue_reference_t   // int const&&\nadd_rvalue_reference_t  // int const& (lvalue-ref remains lvalue-ref)\n\nis_copy_assignable_v   // yields true (generally, you can assign an int to an int)\nis_assignable_v    // yields false (can’t call 42 = 42)\n\nis_assignable_v // yields true\n\nis_swappable_v             // yields true (assuming lvalues)\nis_swappable_v       // yields true (equivalent to the previous check)\nis_swappable_with_v    // yields false (taking value category into account)\n\n11.2.2 std::addressof\nstd::addressof可以取出变量和函数的地址：\ntemplate\nvoid f (T&& x)\n{\n    auto p = &x; // might fail with overloaded operator &\n    auto q = std::addressof(x); // works even with overloaded operator &\n    // ...\n}\n\n11.2.3 std::declval\nstd::declval可以在不创建对象的情况下使用某种类型的对象：\n// basics/maxdefaultdeclval.hpp\n#include \n\ntemplate()\n                                                        : std::declval())>>\nRT max (T1 a, T2 b)\n{\n    return b \n11.1.3 完美转发临时变量\n通过将模板中的临时量声明为auto&&类型可以实现对模板中临时量的完美转发：\ntemplate\nvoid foo(T x)\n{\n    auto&& val = get(x);\n    // ...\n    // perfectly forward the return value of get() to set():\n    set(std::forward(val));\n}\n\n11.4 引用类型的模板形参\n只有显示指定模板实参为引用类型时，模板参数才会变成引用类型：\n// basics/tmplparamref.cpp\n#include \n\ntemplate\nvoid tmplParamIsReference(T) {\n    std::cout  (i);  // true\n    tmplParamIsReference(r);  // true\n}\n\n下面的模板包括一个模板参数，以及该类型的非类型模板参数，还为非类型模板参数提供了默认参数值：\n// basics/referror1.cpp\ntemplate\nclass RefMem {\n    private:\n        T zero;\n    public:\n        RefMem() : zero{Z} {\n    }\n};\n\nint null = 0;\n\nint main()\n{\n    RefMem rm1, rm2;\n    rm1 = rm2;              // OK\n\n    RefMem rm3;       // ERROR: invalid default value for Z\n    RefMem rm4;    // ERROR: invalid default value for Z\n\n    extern int null;\n    RefMem rm5, rm6;\n    rm5 = rm6;              // ERROR: operator= is deleted due to reference member\n}\n\n上面代码错误的原因是：\n\n引用类型无法默认初始化\n不能用0等常量值初始化引用类型\n编译器无法为包含引用类型的类合成默认的拷贝赋值运算符\n\n引用类型的非类型模板参数非常容易出错：\n// basics/referror2.cpp\n#include \n#include \n\ntemplate           // Note: size is reference\nclass Arr {\n    private:\n        std::vector elems;\n    public:\n        Arr() : elems(SZ) {             // use current SZ as initial vector size\n        }\n        void print() const {\n            for (int i=0; i y;   // compile-time ERROR deep in the code of class std::vector<>\n\n    Arr x;    // initializes internal vector with 10 elements\n    x.print();          // OK\n    size += 100;        // OOPS: modifies SZ in Arr<>\n    x.print();          // run-time ERROR: invalid memory access: loops over 120 elements\n}\n\n11.5 延迟求值\n编写泛型库时，要考虑到模板是否会支持不完整类型。例如对于下面的类模板和实例化代码：\ntemplate\nclass Cont {\n    private:\n        T* elems;\n    public:\n        // ...\n};\n\nstruct Node\n{\n    std::string value;\n    Cont next; // only possible if Cont accepts incomplete types\n};\n\n由于Node是不完整类型，Cont模板要能够处理不完整类型：\ntemplate\nclass Cont {\n    private:\n        T* elems;\n    public:\n        // ...\n        typename std::conditional::value,\n                                    T&&,\n                                    T&\n                                    >::type\n        foo();\n\n        template\n        typename std::conditional::value,\n                                    T&&,\n                                    T&\n                                    >::type\n        foo();\n}\n\n由于std::is_move_constructible必须用完整类型实例化，同时模板只在需要时才进行实例化，所以第二种声明方式可以使得Cont不会报错。\n11.6 编写泛型库的注意事项\n\n使用转发引用来转发模板参数，使用auto&&声明需要转发的模板临时变量\n当模板参数被声明为转发引用时，要保证转发到的模板的调用参数类型为传引用类型\nstd::address可以取出依赖于模板参数的对象的地址\n成员函数模板可能会比编译器隐式合成的构造函数和赋值运算符匹配度更高\n当模板参数是C风格字符串且传引用类型类型时，考虑使用std::decay\n当模板参数为非常量引用时，需要注意参数可能被const修饰\n注意处理模板参数被显示的指定为引用类型的情况\n注意模板是否可以处理不完整类型\n为C风格数组和字符串进行特化重载\n\n第2条原文：\n\nWhen parameters are declared as forwarding references, be prepared that a template parameter has a reference type when passing lvalues.\n\n11.7 小结\n\n可调用对象包括函数、函数指针、函数对象、仿函数（functor）和lambda表达式\n类的调用运算符()应该为const的\nstd::invoke可以处理可调用对象为成员函数\n使用decltype(auto)实现返回类型的完美转发\n标准库提供了类型识别和类型修改相关的模板（type traits）\n使用std::declval提取没有被求值的表达式的类型\n使用auto&&实现模板中临时量的完美转发\n注意处理模板参数被显示的指定为引用类型的情况\n通过模板可以推迟表达式的求值时间\n\n"},"2022-01-12-ch12-fundamentals-in-depth.html":{"url":"2022-01-12-ch12-fundamentals-in-depth.html","title":"Chapter 12 Fundamentals in Depth","keywords":"","body":"12 深入模板\n12.1 参数化声明\nC++支持四种类型的模板，可以声明在命名空间中，具体为：\n\n类模板\n函数模板\n变量模板\n别名模板\n\n// details/definitions1.hpp\ntemplate    // a namespace scope class template\nclass Data {\n    public:\n        static constexpr bool copyable = true;\n        // ...\n};\n\ntemplate    // a namespace scope function template\nvoid log (T x) {\n    // ...\n}\n\ntemplate    // a namespace scope variable template (since C++14)\nT zero = 0;\n\ntemplate    // a namespace scope variable template (since C++14)\nbool dataCopyable = Data::copyable;\n\ntemplate    // a namespace scope alias template\nusing DataList = Data;\n\n当这四种模板声明在类中时，就变成了：\n\n嵌套类模板\n成员函数模板\n静态数据成员模板\n成员别名模板\n\n// details/definitions2.hpp\nclass Collection {\n    public:\n        template    // an in-class member class template definition\n        class Node {\n            // ...\n        };\n\n        template    // an in-class (and therefore implicitly inline)\n        T* alloc() {            // member function template definition\n            // ...\n        }\n\n        template    // a member variable template (since C++14)\n        static T zero = 0;\n\n        template    // a member alias template\n        using NodePtr = Node*;\n};\n\n除了成员别名模板，其余三种在类中声明的模板可以定义在类外：\n// details/definitions3.hpp\ntemplate            // a namespace scope class template\nclass List {\n    public:\n        List() = default;       // because a template constructor is defined\n\n        template    // another member class template,\n        class Handle;           // without its definition\n\n        template    // a member function template\n        List (List const&);  // (constructor)\n\n        template    // a member variable template (since C++14)\n        static U zero;\n};\n\ntemplate            // out-of-class member class template definition\n    template\nclass List::Handle {\n    // ...\n};\n\ntemplate            // out-of-class member function template definition\n    template\nList::List (List const& b)\n{\n    // ...\n}\n\ntemplate            // out-of-class static data member template definition\n    template\nU List::zero = 0;\n\n联合体也可以是模板：\ntemplate\nunion AllocChunk {\n    T object;\n    unsigned char bytes[sizeof(T)];\n};\n\n12.1.1 虚成员函数（模板）\n虚成员函数不能是模板，因为C++是通过虚表实现虚函数的，这要求在定义类时就要确定虚函数的个数，但是成员函数模板只有在调用时才能实例化，所以下面的定义会报错：\ntemplate\nclass Dynamic {\n    public:\n        virtual ~Dynamic();     // OK: one destructor per instance of Dynamic\n        template\n        virtual void copy (T2 const&);\n                                // ERROR: unknown number of instances of copy()\n                                // given an instance of Dynamic\n};\n\n12.1.2 模板和链接\n模板的默认链接方式是extern \"C++\"的。模板一般是可以外部链接的，但是也有例外：\ntemplate        // refers to the same entity as a declaration of the\nvoid external();            // same name (and scope) in another file\n\ntemplate        // unrelated to a template with the same name in\nstatic void internal();     // another file\n\ntemplate        // redeclaration of the previous declaration\nstatic void internal();\n\nnamespace {\n    template      // also unrelated to a template with the same name\n    void otherInternal();   // in another file, even one that similarly appears\n}                           // in an unnamed namespace\n\nnamespace {\n    template      // redeclaration of the previous template declaration\n    void otherInternal();\n}\n\nstruct {\n    template void f(T) {} // no linkage: cannot be redeclared\n} x;\n\n12.1.3 主模板\n正常声明的模板称为主模板（Primary Templates）：\ntemplate class Box;                     // OK: primary template\ntemplate class Box;                  // ERROR: does not specialize\ntemplate void translate(T);             // OK: primary template\ntemplate void translate(T);          // ERROR: not allowed for functions\ntemplate constexpr T zero = T{};        // OK: primary template\ntemplate constexpr T zero = T{};     // ERROR: does not specialize\n\n12.2 模板形参\nC++支持3种模板形参：\n\n（类型）模板参数\n非类型模板参数\n模板的模板参数\n\n12.2.1 类型模板形参\n类型模板参数跟在typename和class后面，后续的类型模板参数需要用,分隔，可以=提供默认参数。\n12.2.2 非类型模板形参\n非类型模板参数只能是：\n\n整型或者枚举类型\n指针类型\n成员函数指针\n左值引用\nstd::nullptr_t\nauto或者decltype(auto)\n\n12.2.3 模板的模板形参\n当模板形参也可以用模板替代时，该模板参数就是模板的模板形参。\n12.2.4 模板参数包\n通过...可以声明可变参数模板，模板参数包可以包含多个类型模板参数、非类型模板参数和模板的模板参数：\nusing IntTuple = Tuple;                // OK: one template argument\nusing IntCharTuple = Tuple;      // OK: two template arguments\nusing IntTriple = Tuple;     // OK: three template arguments\nusing EmptyTuple = Tuple<>;                 // OK: zero template arguments\n\ntemplate\nclass MultiArray; // OK: declares a nontype template parameter pack\n\nusing TransformMatrix = MultiArray; // OK: 3x3 matrix\n\ntemplate... Containers>\nvoid testContainers(); // OK: declares a template template parameter pack\n\n对于类模板，模板参数包只能在最后。而对于函数模板可以有多个模板参数包，但是要保证用来分隔模板参数包的模板参数具有默认值或者可以被推导：\ntemplate\nclass LastType; // ERROR: template parameter pack is not the last template parameter\n\ntemplate\nvoid runTests(T value);     // OK: template parameter pack is followed\n                            // by a deducible template parameter\n\ntemplate struct Tensor;\ntemplate\n    auto compose(Tensor, Tensor); // OK: the tensor dimensions can be deduced\n\n模板参数包也可以用来偏特化：\ntemplate Typelist;\ntemplate struct Zip;\ntemplate\n    struct Zip, Typelist>;\n        // OK: partial specialization uses deduction to determine\n        // the Xs and Ys substitutions\n\n嵌套的模板参数包也是合法的：\ntemplate struct StaticValues {};\n// ERROR: Ts cannot be expanded in its own parameter list\n\ntemplate struct ArgList {\n    template struct Vals {};\n};\nArgList::Vals tada;\n\n12.2.5 默认模板实参\n类的默认模板实参要出现在靠后的位置，而函数模板没有这个要求，但是都不能重复：\ntemplate\nclass Quintuple; // OK\n\ntemplate\nclass Quintuple; // OK: T4 and T5 already have defaults\n\ntemplate\nclass Quintuple;    // ERROR: T1 cannot have a default argument\n                    // because T2 doesn’t have a default\n\ntemplate\nR* addressof(T& value); // OK: if not explicitly specified, R will be void\n\ntemplate\nclass Value;\n\ntemplate\nclass Value; // ERROR: repeated default argument\n\n以下情况不允许使用默认模板实参：\n\n偏特化\n模板参数包\n类外定义成员函数模板\n友元类\n友元函数声明（友元函数定义可以）\n\n12.3 模板实参\n12.3.1 函数模板实参\n函数模板实参可以通过显示指定、推导或者默认形参的方式指定：\n// details/max.cpp\n\ntemplate\nT max (T a, T b)\n{\n    return b (1.0, -3.0);   // explicitly specify template argument\n    ::max(1.0, -3.0);           // template argument is implicitly deduced to be double\n    ::max(1.0, 3.0);       // the explicit  inhibits the deduction;\n                                // hence the result has type int\n}\n\n无法被推导的模板实参（例如函数返回类型）一般会被放在模板声明中靠前的位置：\n// details/implicit.cpp\ntemplate\nDstT implicit_cast (SrcT const& x) // SrcT can be deduced, but DstT cannot\n{\n    return x;\n}\n\nint main()\n{\n    double value = implicit_cast(-1);\n}\n\n12.3.2 类型模板实参\n任何类型都可以作为类型模板实参，但是要保证代码是合法的：\ntemplate\nvoid clear (T p)\n{\n    *p = 0;     // requires that the unary * be applicable to T\n}\n\nint main()\n{\n    int a;\n    clear(a);   // ERROR: int doesn’t support the unary *\n}\n\n12.3.3 非类型模板实参\n非类型模板实参可以是：\n\n其它非类型模板形参\n在编译时被计算的整型常量\n变量或者函数的地址（函数或者数组可以不加取地址运算符&）\n上面三种的引用\n成员指针（类的非静态数据成员和非静态成员函数），此时非类型模板参数的类型必须是成员指针类型\n空指针（对于指针和成员指针类型的非类型模板实参）\n\n一些合法的例子如下：\ntemplate\nclass C;\n\nC* c1;             // integer type\n\nint a;\nC* c2;            // address of an external variable\n\nvoid f();\nvoid f(int);\nC* c3;    // name of a function: overload resolution selects\n                            // f(int) in this case; the & is implied\n\ntemplate void templ_func();\nC>* c4; // function template instantiations are functions\n\nstruct X {\n    static bool b;\n    int n;\n    constexpr operator int() const { return 42; }\n};\n\nC* c5;         // static class members are acceptable variable/function names\n\nC* c6;     // an example of a pointer-to-member constant\n\nC* c7;           // OK: X is first converted to int via a constexpr conversion\n                            // function and then to long via a standard integer conversion\n\n一些不合法的例子如下：\ntemplate\nclass C;\n\nstruct Base {\n    int i;\n} base;\n\nstruct Derived : public Base {\n} derived;\n\nC* err1;   // ERROR: derived-to-base conversions are not considered\n\nC* err2;      // ERROR: fields of variables aren’t considered to be variables\n\nint a[10];\nC* err3;       // ERROR: addresses of array elements aren’t acceptable either\n\n12.3.4 模板的模板实参\nC++17之前要求模板的模板实参要完全和模板的模板实参匹配，不能有多余的默认模板参数，但是C++17中取消了这个限制：\n#include \n    // declares in namespace std:\n    // template>\n    // class list;\ntemplate class Cont> // Cont expects one parameter\nclass Rel {\n    // ...\n};\n\nRel rel; // ERROR before C++17: std::list has more than one template parameter\n\n12.3.5 模板实参的等价性\n只有在两个模板实参两两相等的情况下才是完全等价，这样实例化的结果就是一样的，比较的过程不考虑类型别名和常量表达式的计算：\ntemplate\nclass Mix;\n\nusing Int = int;\n\nMix* p1;\nMix* p2; // p2 has the same type as p1\n\n但是函数模板实例化的函数不会和普通函数、虚函数、编译器隐式合成的构造函数和运算符等价。\n12.4 可变参数模板\n12.4.1 参数包展开\n参数包展开是指将参数包分成一个个参数的过程，例如下面代码中的Types...：\ntemplate\nclass MyTuple : public Tuple {\n    // extra operations provided only for MyTuple\n};\n\nMyTuple t2; // inherits from Tuple\n\n12.4.2 参数包展开的时机\n参数包展开会发生在：\n\n定义多重继承的基类时\n构造函数中初始化基类时\n函数参数调用时\nstd::initializers中\n类模板和函数模板中\n函数抛出的异常中（从C++11开始不再支持）\n声明对齐时\nlambda表达式的捕获列表中\n函数类型的参数中\nusing\n\n下面给出几个常见的参数包展开的例子，第一个发生在多重继承和函数参数调用时：\ntemplate\nclass Point : public Mixins... {    // base class pack expansion\n        double x, y, z;\n    public:\n        Point() : Mixins()... { }   // base class initializer pack expansion\n\n        template\n        void visitMixins(Visitor visitor) {\n            visitor(static_cast(*this)...); // call argument pack expansion\n        }\n};\n\nstruct Color { char red, green, blue; };\nstruct Label { std::string name; };\nPoint p;              // inherits from both Color and Label\n\n下一个是发生在定义类模板的非类型模板参数时：\ntemplate\nstruct Values {\n    template\n    struct Holder {\n    };\n};\n\nint i;\nValues::Holder valueHolder;\n\n12.4.3 函数参数包\n下面是一个在构造函数中初始化基类时展开参数包的例子：\ntemplate\nclass Point : public Mixins...\n{\n        double x, y, z;\n    public:\n        // default constructor, visitor function, etc. elided\n        Point(Mixins... mixins)         // mixins is a function parameter pack\n            : Mixins(mixins)... { }     // initialize each base with the supplied mixin value\n\n        struct Color { char red, green, blue; };\n        struct Label { std::string name; };\n        Point p({0x7F, 0, 0x7F}, {\"center\"});\n};\n\n12.4.4 多重和嵌套参数包展开\n多个参数包可以同时展开：\ntemplate\nvoid forwardCopy(F f, Types const&... values) {\n    f(Types(values)...);\n}\n\n上面的代码中，模板参数包Types和函数参数包values通过一一的类型转换进行了展开。\n参数包也可以嵌套展开：\ntemplate\n    class Nested {\n        template\n        void f(InnerTypes const&... innerValues) {\n            g(OuterTypes(InnerTypes(innerValues)...)...);\n    }\n};\n\n12.4.5 零长度参数包的展开\n零长度的参数包将被忽略：\ntemplate<>\nclass Point : {\n    Point() : { }\n};\n\ntemplate\nvoid g(Types... values) {\n    T v(values...);\n}\n\n也就是Point将没有基类，v将被通过默认构造函数初始化，但是不会被编译器解析为函数定义。\n12.4.6 折叠表达式\n从C++17开始，可以使用二元运算符作用域参数包中的所有参数，例如：\ntemplate bool g() {\n    return (trait() && ... && true);\n}\n\n当参数包为空时，&&运算符结果为true，||运算符结果为false，,运算符结果为void。\n12.5 友元\n12.5.1 类模板的友元类\n友元类声明中麻烦的在于指定某个类模板的特化结果作为友元：\ntemplate\nclass Node;\n\ntemplate\nclass Tree {\n    friend class Node;\n    // ...\n};\n\n上面的代码要求在实例化Tree时，Node也要是可见的的，否则就会报错，但是普通类却没关系：\ntemplate\nclass Tree {\n    friend class Factory;   // OK even if first declaration of Factory\n    friend class Node;   // error if Node isn’t visible\n};\n\n12.5.2 类模板的友元函数\n函数名后面存在<>的函数模板可以被声明为类的友元，但是不能定义该函数模板：\ntemplate\nvoid combine(T1, T2);\n\nclass Mixer {\n    friend void combine<>(int&, int&);\n                        // OK: T1 = int&, T2 = int&\n    friend void combine(int, int);\n                        // OK: T1 = int, T2 = int\n    friend void combine(char, int);\n                        // OK: T1 = char T2 = int\n    friend void combine(char&, int);\n                        // ERROR: doesn’t match combine() template\n    friend void combine<>(long, long) { ... }\n                        // ERROR: definition not allowed!\n};\n\n对于没有<>的友元函数声明：\n\n如果没有被作用域运算符::修饰，就当做友元函数声明，也可以进行定义\n如果被作用域运算符::修饰，则根据匹配规则匹配友元函数\n\n具体见下例：\nvoid multiply(void*); // ordinary function\n\ntemplate\nvoid multiply(T); // function template\n\nclass Comrades {\n    friend void multiply(int) { }               // defines a new function ::multiply(int)\n    friend void ::multiply(void*);              // refers to the ordinary function above, not to the multiply instance\n    friend void ::multiply(int);                // refers to an instance of the template\n    friend void ::multiply(double*);   // qualified names can also have angle brackets, but a template must be visible\n    friend void ::error() { }                   // ERROR: a qualified friend cannot be a definition\n};\n\n前面两个例子都是普通类，对于类模板规则是一样的：\ntemplate\nclass Node {\n    Node* allocate();\n    // ...\n};\n\ntemplate\nclass List {\n    friend Node* Node::allocate();\n    // ...\n};\n\n友元函数也可以定义在类模板中，多用于友元函数依赖于类模板的模板参数：\ntemplate\nclass Creator {\n    friend void feed(Creator) {  // every T instantiates a different function ::feed()\n    // ...\n    }\n};\n\nint main()\n{\n    Creator one;\n    feed(one);                      // instantiates ::feed(Creator)\n    Creator two;\n    feed(two);                      // instantiates ::feed(Creator)\n}\n\n12.5.3 友元模板\n当需要将模板实例化的所有结果都定义为友元时，需要使用友元模板：\nclass Manager {\n    template\n        friend class Task;\n\n    template\n        friend void Schedule::dispatch(Task*);\n\n    template\n        friend int ticket() {\n            return ++Manager::counter;\n        }\n        static int counter;\n};\n\n友元模板只能是主模板。\n12.6 后记\n"},"2022-01-27-ch13-names-in-templates.html":{"url":"2022-01-27-ch13-names-in-templates.html","title":"Chapter 13 Names in Templates","keywords":"","body":"13 模板中的名称解析\n13.1 C++名称分类\nC++中有两种名称分类的方式：\n\n受限名称和非受限名称：如果一个名称包含作用域运算符::或者成员访问运算符.和->，则就是受限名称\n依赖型名称和非依赖型名称：如果一个名称中包含模板参数，则就是依赖型名称\n\n13.2 名称查找\n受限名称会在指定的作用域中进行查找：\nint x;\n\nclass B {\n    public:\n        int i;\n};\n\nclass D : public B {\n};\n\nvoid f(D* pd)\n{\n    pd->i = 3;  // finds B::i\n    D::x = 2;   // ERROR: does not find ::x in the enclosing scope\n}\n\n非受限名称会在最近的作用域中进行查找：\nextern int count;               // #1\n\nint lookup_example(int count)   // #2\n{\n    if (count \n13.2.1 依赖型名称查找\n只应用上述规则会出现名称无法查找的情况，例如下面的例子：\ntemplate\nT max (T a, T b)\n{\n    return b \n因为运算符不是BigNumber的成员函数，而是定义在命名空间BigMath中的函数，所以max()无法解析它，这就需要应用依赖于实参的名称查找（Argument-Dependent Lookup，ADL）规则。当一个非受限名称可能是非成员函数或者运算符时，编译器会在关联的命名空间和类中尝试查找该名称，就像是这个非受限名称被这些命名空间和类按顺序修饰变成了受限名称一样：\n// details/adl.cpp\n#include \n\nnamespace X {\n    template void f(T);\n}\n\nnamespace N {\n    using namespace X;\n    enum E { e1 };\n    void f(E) {\n        std::cout \n13.2.2 依赖型友元查找\n友元函数声明可以是该函数的第一次声明：\ntemplate\nclass C {\n    // ...\n    friend void f();\n    friend void f(C const&);\n    // ...\n};\n\nvoid g (C* p)\n{\n    f();    // is f() visible here?\n    f(*p);  // is f(C const&) visible here?\n}\n\n在上面的例子中：\n\n编译器无法查找f()，因为函数没有参数，也没有返回值\n编译器可以查找f(*p)，因为关联的类是C，关联的命名空间是全局命名空间\n\n13.3.3 隐式注入的类名称\n类的名称以非受限的形式默认注入到类作用域中：\n// details/inject.cpp\n#include \n\nint C;\n\nclass C {\n    private:\n        int i[2];\n    public:\n        static int f() {\n            return sizeof(C);\n        }\n};\n\nint f()\n{\n    return sizeof(C);\n}\n\nint main()\n{\n    std::cout \n对于类模板，同样会将类名称默认注入到作用域中：\ntemplate class TT> class X {\n};\n\ntemplate class C {\n    C* a;           // OK: same as “C* a;”\n    C& b;     // OK\n    X c;         // OK: C without a template argument list denotes the template C\n    X d;       // OK: ::C is not the injected class name and therefore always denotes the template\n};\n\n13.2.4 类模板名称的注入\n对于普通类，默认注入的就是类名称，但是对于类模板，每次实例化都会产生不同的类型，所以类模板名称分为当前实例化类型（current instantiation）和未知特化类型（unknown specialization）：\ntemplate class Node {\n    using Type = T;\n    Node* next;             // Node refers to a current instantiation\n    Node* previous;   // Node refers to a current instantiation\n    Node* parent;       // Node refers to an unknown specialization\n};\n\n当类模板中存在嵌入类时，二者更加难以区分：\ntemplate class C {\n    using Type = T;\n\n    struct I {\n        C* c;           // C refers to a current instantiation\n        C* c2;    // C refers to a current instantiation\n        I* i;           // I refers to a current instantiation\n    };\n\n    struct J {\n        C* c;           // C refers to a current instantiation\n        C* c2;    // C refers to a current instantiation\n        I* i;           // I refers to an unknown specialization, because I does not enclose J\n        J* j;           // J refers to a current instantiation\n    };\n};\n\n这里的规则就是如果所引用的名称可以被显示的特化，则该名称就是未知特化类型。原文：\n\nThis has implications for name lookup when parsing templates, but it also leads to an alternative, more game-like way to determine whether a type X within the definition of a class template refers to a current instantiation or an unknown specialization: If another programmer can write an explicit specialization such that X refers to that specialization, then X refers to an unknown specialization.\n\n13.3 解析类模板\n13.3.1 非模板中的上下文相关文法\nC++的复杂之处在于源程序的解析是上下文相关的，例如在C++11之前，>>总是会被解释为右移运算符，除非在其中加一个空格：\n// names/anglebrackethack.cpp\n#include \n\ntemplate struct X {\n    static int const c = 2;\n};\n\ntemplate<> struct X {\n    typedef int c;\n};\n\ntemplate struct Y {\n    static int const c = 3;\n};\n\nstatic int const c = 4;\n\nint main()\n{\n    std::cout  >::c >::c>::c) >::c >::c>::c) \n在C++11之前，第一行会被解释为取出Y::c并且和::c进行两次的比较，最终输出0；第二行会被解释为Y::c>::c，最终输出3。不过从C++11开始，两行的输出都为0。\n13.3.2 依赖型类型名称\n当类型名称中包含模板参数时，为了避免歧义，需要使用typename显示指出后面的是类型名称。必须要使用typename作为前导的情况要满足下面的四个条件：\n\n名称中包含::运算符\n类型名称没有被struct、class、union和enum修饰\n不是用来表示基类和表示初始化列表的情况\n名称中包含模板参数\n该类型名称是未知特化类型\n\n13.3.3 依赖型模板名称\n有时需要用template关键字显示指出后面的名称是模板：\ntemplate\nclass Shell {\n    public:\n        template\n        class In {\n            public:\n                template\n                class Deep {\n                    public:\n                        virtual void f();\n                };\n        };\n};\n\ntemplate\nclass Weird {\n    public:\n        void case1 (typename Shell::template In::template Deep* p) {\n            p->template Deep::f();   // inhibit virtual call\n        }\n\n        void case2 ( typename Shell::template In::template Deep& p) {\n            p.template Deep::f();    // inhibit virtual call\n        }\n};\n\n13.3.4 依赖型using声明\n可以使用using引入基类中的依赖型类型，但是引入基类中的模板需要变通一下：\ntemplate\nclass BXT {\n    public:\n        using Mystery = T;\n        template\n        struct Magic;\n};\n\ntemplate\nclass DXTT : private BXT {\n    public:\n        using typename BXT::Mystery;\n        Mystery* p; // would be a syntax error without the earlier typename\n};\n\ntemplate\nclass DXTM : private BXT {\n    public:\n        template\n        using Magic = typename BXT::template Magic;   // Alias template\n        Magic* plink;                                    // OK\n};\n\n13.3.5 ADL和显示模板实参\n只有当非受限名称是函数时，才会应用ADL规则：\nnamespace N {\n    class X {\n        // ...\n    };\n\n    template void select(X*);\n}\n\nvoid g (N::X* xp)\n{\n    select(xp); // ERROR: no ADL!\n}\n\n在这个例子中，如果select是一个函数模板，那么就应该是显示指定的模板实参；如果是一个显示的模板实参，那么select就应该是一个函数模板，这就出现了先有鸡还是先有蛋的问题。原文：\n\nBecause a compiler cannot decide that xp is a function call argument until it has decided that  is a template argument list. Furthermore, a compiler cannot decide that  is a template argument list until it has found select() to be a template.\n\n为了解决这个问题，需要显示的引入一个模板声明来指出select是一个函数模板：\ntemplate void select();\n\n13.3.6 依赖型表达式\n依赖型表达式分为实例化依赖型表达式、值依赖型表达式和类型依赖型表达式。\n13.3.7 编译器错误\nC++标准允许在解析模板时就报错，而不必等到两阶段实例化时，例如下面的代码在解析时就能发现错误：\nvoid f() { }\n\ntemplate void nondependentCall()\n{\n    f(x); // x is value-dependent, so f() is nondependent; this call will never succeed\n}\n\n13.4 继承和类模板\n13.4.1 非依赖型基类\n不包含模板参数的基类就是非依赖型基类。\n13.4.2 依赖型基类\n感觉很复杂，最有用的一条应该对于受限名称，先在当前实例化类和非依赖型基类中查找，最后在依赖型基类中查找。\n13.5 后记\n"},"2022-02-07-ch14-instantiation.html":{"url":"2022-02-07-ch14-instantiation.html","title":"Chapter 14 Instantiation","keywords":"","body":"14 模板实例化\n14.1 按需实例化\nC++编译器只在需要获取类大小或者访问类成员时才会对类模板进行实例化：\ntemplate class C;   // #1 declaration only\n\nC* p = 0;                  // #2 fine: definition of C not needed\n\ntemplate\nclass C {\n    public:\n        void f();               // #3 member declaration\n};                              // #4 class template definition completed\n\nvoid g (C& c)              // #5 use class template declaration only\n{\n    c.f();                      // #6 use class template definition;\n}                               // will need definition of C::f() in this translation unit\n\ntemplate\nvoid C::f()                  // required definition due to #6\n{\n}\n\n14.2 惰性实例化\nC++编译器只实例化需要用到的模板代码。\n14.2.1 部分实例化和全部实例化\n实例化部分模板定义的过程称为部分实例化：\ntemplate T f (T p) { return 2*p; }\ndecltype(f(2)) x = 2;\n\ntemplate class Q {\n    using Type = typename T::Type;\n};\nQ* p = 0; // OK: the body of Q is not substituted\n\ntemplate T v = T::default_value();\ndecltype(v) s; // OK: initializer of v not instantiated\n\n14.2.2 类模板成员的实例化\nC++编译器在检查模板定义时，总是假设为最好的情况：\n// details/lazy1.hpp\ntemplate\nclass Safe {\n};\n\ntemplate\nclass Danger {\n    int arr[N];                         // OK here, although would fail for N\nclass Tricky {\n    public:\n        void noBodyHere(Safe = 3);   // OK until usage of default value results in an error\n        void inclass() {\n            Danger noBoomYet;        // OK until inclass() is used with N pfew;             // OK until Nested is used with N anonymous;        // OK until Tricky is instantiated with N boom;            // always ERROR (which not all compilers detect)\n        }\n};\n\n当使用Tricky inst实例化上面的类模板时，编译器将只实例化类中的成员函数声明和匿名的联合体，所以anonymous和unsafe()会报错。\n此外，实例化类模板时还需要虚函数的定义，否则会出现链接错误：\n// details/lazy2.cpp\ntemplate\nclass VirtualClass {\n    public:\n        virtual ~VirtualClass() {}\n        virtual T vmem(); // Likely ERROR if instantiated without definition\n};\n\nint main()\n{\n    VirtualClass inst;\n}\n\n14.3 模板实例化模型\n14.3.1 两阶段查找\n非依赖型的名称可以在模板解析时就进行查找，这样可以提前发现错误，而依赖型名称只能在提供了模板实参时才能进行查找，所以模板的实例化需要两个阶段：\n\n在第一阶段，非依赖型名称通过普通查找规则或者ADL规则进行查找，依赖型非受限名称也会被查找，但是不作为最终结果\n在第二阶段，会查找依赖型受限名称，第一阶段中查找过的依赖型非受限名称会再次使用ADL进行查找\n\n第一阶段中查找依赖型非受限名称主要是为了判断该名称是否是模板：\nnamespace N {\n    template void g() {}\n    enum E { e };\n}\n\ntemplate void f() {}\n\ntemplate void h(T P) {\n    f(p);  // #1\n    g(p);  // #2 ERROR\n}\n\nint main() {\n    h(N::e);    // calls template h with T = N::E\n}\n\nf是一个非依赖型名称，编译器通过普通查找规则可以确定f<>是一个模板，而对于g，由于其定义在命名空间N中，其后的会被解析为小于号运算符，所以在第一阶段就会触发编译错误。\n14.3.2 模板实例化代码插入位置\n模板实例化代码插入位置（point of instantiation）指将被实参替代后的模板代码插入到源代码中的位置。\n\n函数模板\n\nclass MyInt {\n    public:\n        MyInt(int i);\n};\n\nMyInt operator - (MyInt const&);\n\nbool operator > (MyInt const&, MyInt const&);\n\nusing Int = MyInt;\n\ntemplate\nvoid f(T i)\n{\n    if (i>0) {\n        g(-i);\n    }\n}\n// #1\nvoid g(Int)\n{\n    // #2\n    f(42); // point of call\n    // #3\n}\n// #4\n\n因为C++不允许在函数定义中再定义函数，所以不能在位置2和位置3插入实例化的f(Int)。因为g(Int)的定义在位置1处不可见，所以实例化的f(Int)不能插入到位置1，只能插入到位置4。\n通过这个例子可知，函数模板实例化后的插入位置是在包含引用函数模板的命名空间或者定义之后。原文：\n\nC++ defines the POI for a reference to a function template specialization to be immediately after the\nnearest namespace scope declaration or definition that contains that reference.\n\n如果将例子中的MyInt更换为int，就会报错：\ntemplate\nvoid f1(T x)\n{\n    g1(x); // #1\n}\n\nvoid g1(int)\n{\n}\n\nint main()\n{\n    f1(7); // ERROR: g1 not found!\n}\n// #2 POI for f1(int)\n\n在两阶段查找的第一阶段，因为g1(T)是一个依赖型名称，所以会应用普通查找规则进行查找，但是此时g1(T)定义不可见，因此名字g1(T)是无法解析的。当将实例化的f1(int)的定义插入到位置2时，因为int类型不和命名空间相关联，所以g1(int)无法应用ADL规则进行查找。\n\n类模板\n\ntemplate\nclass S {\n    public:\n        T m;\n};\n// #1\nunsigned long h()\n{\n    // #2\n    return (unsigned long)sizeof(S);\n    // #3\n}\n// #4\n\n同理，实例化的类模板S不能插入到位置2和位置3。如果将实例化的类模板S插入到位置4，则无法在h()中求出S的大小，所以只能将实例化的S插入到位置1。\n通过这个例子可知，类模板实例化后的插入位置是在包含引用类模板的命名空间或者定义之前。原文：\n\nThe POI for a reference to a generated class instance is defined to be the point immediately before the nearest namespace scope declaration or definition that contains the reference to that instance.\n\n在下面的例子中，实例化后的S被插入到位置1，S被插入到位置2a，f(double)被插入到位置2b：\ntemplate\nclass S {\n    public:\n        using I = int;\n};\n\n// #1\ntemplate\nvoid f()\n{\n    S::I var1 = 41;\n    typename S::I var2 = 42;\n}\n\nint main()\n{\n    f();\n}\n// #2 : #2a , #2b\n\n在一个翻译单元中，可能存在多个实例化后的类模板和函数模板，编译器只保留第一个实例化的类模板，但是保留所有实例化的函数模板，同时不去检查这些函数模板是否是完全一致的。在实际的编译器中，很多编译器简单的将实例化的函数模板插入到翻译单元的最后。\n14.3.3 包含模型\nC++标准要求模板定义要出现在所有特化和实例化之前，这也就意味着一般要将模板定义在头文件中。\n14.4 编译器对模板的支持\n如果两个翻译单元中存在相同函数的定义，则在链接过程中就会发生错误，对于模板也存在同样的问题，解决办法包括贪心实例化、查询实例化和迭代实例化。\n14.4.1 贪心实例化\n编译器在处理每个翻译单元时都会生成函数模板代码，并用特殊的名称进行修饰，这样链接器就能识别重复实例化的函数模板。这种方式主要有三个缺点：\n\n编译器生成了多份代码，但是最终只保留了一份\n由于编译选项的不同，生成的代码可能是不一样的，但是链接器不进行比较\n目标文件的体积会变大\n\n14.4.2 查询实例化\n编译器在所有的翻译单元之间维护一个数据库，编译器通过查询数据库来判断是否需要生成模板代码，不过这种方式没有被市场接受，我也没有想明白这个要怎么做。\n14.4.3 迭代实例化\n在编译的过程中不实例化模板，并使用预链接器来进行链接。如果发现未实例化的模板，则去重新编译模板代码，重复上述过程直到链接成功。\n这种方式主要有三个缺点：\n\n显著增加链接时间\n处理模板中的编译错误被推迟到了链接阶段，排错成本提高\n需要存储模板定义在源文件中的位置\n\n14.5 显示实例化\n在使用模板时，编译器会通过名称查找规则自动找到模板定义并将生成的模板代码插入到合适的位置，这一过程不需要程序员参与，但是C++也支持通过template关键字实现显示的插入生成的模板代码：\ntemplate\nvoid f(T)\n{\n}\n\n// four valid explicit instantiations:\ntemplate void f(int);\ntemplate void f<>(float);\ntemplate void f(long);\ntemplate void f(char);\n\n14.5.1 手动实例化\n为了避免贪心实例化策略带来的问题，可以通过显示实例化的方式实现只在一个翻译单元中进行实例化。这需要只在该翻译单元中提供模板定义，其余翻译单元只提供模板声明，例如将实例化的模板放入后缀为.tpp的源文件中：\n// f.hpp:\ntemplate void f(); // no definition: prevents instantiation\n\n// f.tpp:\n#include \"f.hpp\"\ntemplate void f() // definition\n{\n    // implementation\n}\n\n// f.cpp:\n#include \"f.tpp\"\ntemplate void f(); // manual instantiation\n\n14.5.2 显示实例化声明\n通过extern关键字可以声明模板实例化：\n// t.hpp:\ntemplate void f()\n{\n}\n\nextern template void f();      // declared but not defined\nextern template void f();    // declared but not defined\n\n// t.cpp:\ntemplate void f();     // definition\ntemplate void f();   // definition\n\n有一些特殊情况不适用于显示实例化声明：\n\n内联函数模板\nauto或者decltype(auto)类型的变量，以及返回类型为auto的函数模板\n和常量表达式关联的模板\n引用类型的变量\n类模板和别名模板\n\n14.6 编译时if\n通过编译时if可以实现只实例化部分分支，例如在下面的例子中，else分支不会被实例化：\ntemplate bool f(T p) {\n    if constexpr (sizeof(T) 0;\n    } else {\n        return p.compare(0) > 0;\n    }\n}\n\nbool g(int n) {\n    return f(n); // OK\n}\n\n以往函数模板是作为一个整体实例化的，但是在支持编译时if后，编译器必须支持部分实例化模板。原文：\n\nHowever, it requires implementations to refine the unit of instantiation: Whereas previously function definitions were always instantiated as a whole, now it must be possible to inhibit the instantiation of parts of them.\n\n14.7 标准库中的显示实例化\n标准库中提供的某些模板一般只会被特定的类型实例化，其中就用到了显示实例化声明，例如std::basic_string（也就是std::string）：\nnamespace std {\n    template,\n                typename Allocator = allocator>\n    class basic_string {\n        // ...\n    };\n\n    extern template class basic_string;\n    extern template class basic_string;\n}\n\n14.8 后记\n"},"2022-02-15-ch15-template-argument-deduction.html":{"url":"2022-02-15-ch15-template-argument-deduction.html","title":"Chapter 15 Template Argument Deduction","keywords":"","body":"15 模板参数推导\n15.1 模板参数推导过程\n模板参数推导过程就是用实参类型A去确定形参类型P的过程。原文：\n\nWe describe it in terms of matching a type A (derived from the call argument type) to a parameterized type P (derived from the call parameter declaration).\n\n如果相同形参类型的推导结果不一致，则推导失败。如果形参是传引用的，则实参被推导为引用类型；如果形参是传值的，则实参会发生类型退化（数组和函数转换为指针类型，const和volatile被丢弃）。\n15.2 可推导的上下文 \n除了最简单的形参类型T之外，复杂的形参类型也可以进行推导：\ntemplate\nvoid f1(T*);\n\ntemplate\nvoid f2(E(&)[N]);\n\ntemplate\nvoid f3(T1 (T2::*)(T3*));\n\nclass S {\n    public:\n        void f(double*);\n};\n\nvoid g (int*** ppp)\n{\n    bool b[42];\n    f1(ppp);    // deduces T to be int**\n    f2(b);      // deduces E to be bool and N to be 42\n    f3(&S::f);  // deduces T1 = void, T2 = S, and T3 = double\n}\n\n复杂类型可以通过递归的方式转换为多个可推导的上下文（deduced contexts，包括指针、引用、数组、函数、成员指针、模板标识等）从而进行推导。原文：\n\nComplex type declarations are built from more elementary constructs (pointer, reference, array, and function declarators; pointer-to-member declarators; template-ids; and so forth), and the matching process proceeds from the top-level construct and recurses through the composing elements. It is fair to say that most type declaration constructs can be matched in this way, and these are called deduced contexts.\n\n不可推导的上下文包括：\n\n受限名称，例如不能通过Q::X推导T\n包含非类型模板参数的表达式，例如不能通过S推导I，也不能通过int(&)[sizeof(S)]推导T\n\n一个有意思的例子如下：\n// details/fppm.cpp\ntemplate\nclass X {\n    public:\n        using I = int;\n        void f(int) {\n        }\n};\n\ntemplate\nvoid fppm(void (X::*p)(typename X::I));\n\nint main()\n{\n    fppm(&X::f); // fine: N deduced to be 33\n}\n\n虽然X::I不是可推导的上下文，但是X::*p是可推导的上下文（N被推导为33），从而void (X::*p)(typename X::I)也可以被推导。\n15.3 模板参数推导的特殊情况\n第一种特殊情况是获取函数模板实例化后的地址：\ntemplate\nvoid f(T, T);\n\nvoid (*pf)(char, char) = &f;\n\n形参类型为void(T, T)，实参类型为void(char, char)，因此T可以被推导为char，同时pf为f的地址。\n第二种特殊情况是类型转换函数模板：\nclass S {\n    public:\n        template operator T&();\n};\n\nvoid f(int (&)[20]);\n\nvoid g(S s)\n{\n    f(s);\n}\n\nf(s)试图将s转换为int (&)[20]类型，实参类型为int[20]，形参类型为T，因此T被推导为int[20]。\n15.4 std::initializer_list和模板参数推导\n如果形参类型为std::initializer_list，且实参中所有元素的类型一致，则T可以被推导：\n// deduce/initlist.cpp\n#include \n\ntemplate void f(std::initializer_list);\nint main()\n{\n    f({2, 3, 5, 7, 9});                 // OK: T is deduced to int\n    f({'a', 'e', 'i', 'o', 'u', 42});   // ERROR: T deduced to both char and int\n}\n\n15.5 模板参数包的推导\n对于可变参数模板，形参类型可能和多个实参类型对应：\ntemplate\nvoid f(First first, Rest... rest);\n\nvoid g(int i, double j, int* k)\n{\n    f(i, j, k); // deduces First to int, Rest to {double, int*}\n}\n\n当参数包展开时，还要保证参数包展开后相同形参的推导结果一致，见下面两个例子：\ntemplate class pair { };\n\ntemplate\n    void h1(pair const&...);\ntemplate\n    void h2(pair const&...);\n\nvoid foo(pair pif, pair pid, pair pdd)\n{\n    h1(pif, pid); // OK: deduces T to int, Rest to {float, double}\n    h2(pif, pid); // OK: deduces Ts to {int, int}, Rest to {float, double}\n    h1(pif, pdd); // ERROR: T deduced to int from the 1st arg, but to double from the 2nd\n    h2(pif, pdd); // OK: deduces Ts to {int, double}, Rest to {float, double}\n}\n\ntemplate class Tuple { };\n\ntemplate\nbool f1(Tuple, Tuple);\n\ntemplate\nbool f2(Tuple, Tuple);\n\nvoid bar(Tuple sv,\nTuple uv)\n{\n    f1(sv, sv);     // OK: Types is deduced to {short, int, long}\n    f2(sv, sv);     // OK: Types1 is deduced to {short, int, long}, Types2 is deduced to {short, int, long}\n    f1(sv, uv);     // ERROR: Types is deduced to {short, int, long} from the 1st arg, but to funsigned short, unsigned, unsigned long} from the 2nd\n    f2(sv, uv);     // OK: Types1 is deduced to {short, int, long}, Types2 is deduced to funsigned short, unsigned, unsigned long}\n}\n\n15.5.1 字面值运算符模板\n贴个代码自己体会一下吧：\ntemplate\nint operator\"\" _B7()\n{\n    std::array chars{cs...};    // initialize array of passed chars\n    for (char c : chars) {                          // and use it (print it here)\n        std::cout \nauto c = 0xFF00_B7;     // OK: deduces \nauto d = 0815_B7;       // ERROR: 8 is no valid octal literal\nauto e = hello_B7;      // ERROR: identifier hello_B7 is not defined\nauto f = \"hello\"_B7;    // ERROR: literal operator _B7 does not match\n\n15.6 右值引用\n15.6.1 引用折叠规则\n不允许直接定义引用的引用，但是在模板代换和使用类型别名时可能会出现多重引用，这时会应用引用折叠规则，具体为：内层引用的const和volatile会被丢弃，只有在内外层都为右值引用的情况下，最终结果才为右值引用：\nusing RCI = int const&;\nRCI volatile&& r = 42;  // OK: r has type int const&\nusing RRI = int&&;\nRRI const&& rr = 42;    // OK: rr has type int&&\n\n15.6.2 转发引用\n当模板参数为传转发引用类型时，推导规则还会考虑实参是左值还是右值，如果实参是左值，推导结果为引用类型，否则为原始类型：\ntemplate void f(T&& p); // p is a forwarding reference\n\nvoid g()\n{\n    int i;\n    int const j = 0;\n    f(i);   // argument is an lvalue; deduces T to int& and parameter p has type int&\n    f(j);   // argument is an lvalue; deduces T to int const& parameter p has type int const&\n    f(2);   // argument is an rvalue; deduces T to int parameter p has type int&&\n}\n\ni是左值，所以T被推导为int&，根据引用折叠规则，最终p的类型为int&，而2是右值，所以T被推导为int，最终p的类型为int。综上，引用折叠规则也适用于转发引用。\n15.6.3 完美转发的实现\n通过转发引用和引用折叠规则，可以在模板中实现传递参数类型和参数的左值右值属性：\nclass C {\n    // ...\n};\n\nvoid g(C&);\nvoid g(C const&);\nvoid g(C&&);\n\ntemplate\nvoid forwardToG(T&& x)\n{\n    g(static_cast(x));     // forward x to g()\n}\n\nvoid foo()\n{\n    C v;\n    C const c;\n    forwardToG(v);              // eventually calls g(C&)\n    forwardToG(c);              // eventually calls g(C const&)\n    forwardToG(C());            // eventually calls g(C&&)\n    forwardToG(std::move(v));   // eventually calls g(C&&)\n}\n\nstd::forward可以通过上面的方式实现。\n需要注意的是，完美转发规则并不转发参数的常量属性，所以会存在下面这种奇怪的现象：\nvoid g(int*);\nvoid g(...);\n\ntemplate void forwardToG(T&& x)\n{\n    g(std::forward(x));  // forward x to g()\n}\n\nvoid foo()\n{\n    g(0);                   // calls g(int*)\n    forwardToG(0);          // eventually calls g(...)\n}\n\n15.6.4 一些奇怪的推导规则\n在下面的情况下，&&不会被解释为转发引用：\ntemplate\nclass X\n{\n    public:\n        X(X&&);                                 // X is not a template parameter\n        X(T&&);                                 // this constructor is not a function template\n\n        template X(X&&);     // X is not a template parameter\n        template X(U, T&&);         // T is a template parameter from an outer template\n};\n\n15.7 SFINAE\n简单来说，在代换函数模板声明中出现的错误不会被视为错误：\ntemplate\nT* begin(T (&array)[N])\n{\n    return array;\n}\n\ntemplate\ntypename Container::iterator begin(Container& c)\n{\n    return c.begin();\n}\n\nint main()\n{\n    std::vector v;\n    int a[10];\n    ::begin(v);     // OK: only container begin() matches, because the first deduction fails\n    ::begin(a);     // OK: only array begin() matches, because the second substitution fails\n}\n\n15.7.1 代换相关上下文\nSFINAE规则起作用的范围就是代换相关上下文（immediate context），除了下面的这些代换位置，其余都可以视为代换相关上下文，也就是SFINAE规则起作用的范围：\n\n类模板的定义\n函数模板的定义\n变量模板的初始化部分\n模板的默认模板实参\n成员变量的默认初始化部分\n异常部分\n合成类模板的默认函数\n\n根据上面定义的作用范围，下面的代码会报错：\ntemplate\nclass Array {\n    public:\n        using iterator = T*;\n};\n\ntemplate\nvoid f(Array::iterator first, Array::iterator last);\n\ntemplate\nvoid f(T*, T*);\n\nint main()\n{\n    f(0, 0); // ERROR: substituting int& for T in the first function template instantiates Array, which then fails\n}\n\n15.8 推导过程的一些限制\n15.8.1 允许的实参类型转换\n下列情况中，形参类型不一定要和实参类型完全匹配：\n\n如果形参是传引用类型的，则形参在被const和volatile修饰的同时实参可以不必\n如果实参是指针或者成员指针类型，则可以被隐式转换为被const和volatile修饰\n形参类型可以是基类类型，而实参类型是派生类类型\n\n15.8.2 类模板实参\n在C++17之前，推导规则仅限于函数模板和成员函数模板，对于类模板必须显示指定实参：\ntemplate\nclass S {\n    public:\n        S(T b) : a(b) {\n        }\n    private:\n        T a;\n};\n\nS x(12); // ERROR before C++17: the class template parameter T was not deduced from the constructor call argument 12\n\n15.8.3 默认模板实参\n默认模板实参不能用来推导模板形参：\ntemplate\nvoid f (T x = 42)\n{\n}\n\nint main()\n{\n    f();   // OK: T = int\n    f();        // ERROR: cannot deduce T from default call argument\n}\n\n15.8.4 函数模板的异常声明\n在现代C++中已经废弃了。\n15.9 显示指定函数模板实参\n显示指定模板实参类型后，就省略了推导参数类型的过程，同时会将实参进行隐式类型转换。\n15.10 从初始化和表达式进行推导\n15.10.1 从auto进行推导\n从C++11开始，使用auto可以让编译器自动推导类型，其原理和模板实参推导是类似的，例如对于下面的代码：\ntemplate\nvoid useContainer(Container const& container)\n{\n    auto pos = container.begin();\n    while (pos != container.end()) {\n        auto& element = *pos++;\n        // ... // operate on the element\n    }\n}\n\n其中的第一个auto等价于：\ntemplate void deducePos(T pos);\ndeducePos(container.begin());\n\n第二个auto等价于：\ntemplate deduceElement(T& element);\ndeduceElement(*pos++);\n\n由于auto和模板参数推导的原理一致，所以右值引用将解释为转发引用：\nint x;\nauto&& rr = 42;     // OK: rvalue reference binds to an rvalue (auto = int)\nauto&& lr = x;      // Also OK: auto = int& and reference collapsing makes lr an lvalue reference\n\n此外，auto只推导主类型，因此const、指针等需要显示添加：\ntemplate struct X { T const m; };\nauto const N = 400u;                            // OK: constant of type unsigned int\nauto* gp = (void*)nullptr;                      // OK: gp has type void*\nauto const S::*pm = &X::m;                 // OK: pm has type int const X::*\nX xa = X();                          // ERROR: auto in template argument\nint const auto::*pm2 = &X::m;              // ERROR: auto is part of the “declarator”\n\n最后，auto也可以用于推导函数返回类型非类型模板参数。\n15.10.2 从decltype进行推导\ndecltype可以推导变量、函数等的类型，也可以推导表达式的返回类型，此时还会带上表达式最终求值后的值类型：\nvoid g (std::string&& s)\n{\n    // check the type of s:\n    std::is_lvalue_reference::value;       // false\n    std::is_rvalue_reference::value;       // true (s as declared)\n    std::is_same::value;      // false\n    std::is_same::value;     // true\n\n    // check the value category of s used as expression:\n    std::is_lvalue_reference::value;     // true (s is an lvalue)\n    std::is_rvalue_reference::value;     // false\n    std::is_same::value;    // true (T& signals an lvalue)\n    std::is_same::value;   // false\n}\n\n当推导表达式的类型时：\n\n如果表达式是左值，则decltype(e)结果为T&\n如果表达式是右值，则decltype(e)结果为T&&\n如果表达式时过期值，则decltype(e)结果为T\n\n15.10.3 从decltype(auto)推导\n从C++14开始，可以使用decltype(auto)的写法，用来统一decltype上述的区别：\nauto element = *pos;\nauto& element = *pos;\ndecltype(*pos) element = *pos;\ndecltype(auto) element = *pos;\n\n第一行的写法将产生拷贝，第二行的写法仅在*运算符支持返回引用的情况下才能编译通过，第三行的写法综合了上面两种。为了避免写两遍表达式，从C++14开始，可以写为最后一行的形式。\n15.10.4 auto推导的特殊情况\n在同一行使用auto定义多个变量时，仅当变量类型一致时才是合法的：\nchar c;\nauto *cp = &c, d = c;   // OK\nauto e = c, f = c+1;    // ERROR: deduction mismatch char vs. int\n\n用auto作为递归函数的返回类型时，递归结束的情况应该写在前面，以让编译器可以推导递归函数的返回类型：\nauto f(int n)\n{\n    if (n \n当用auto作为函数模板的返回类型时，函数体必须被实例化才能推导函数的返回类型：\n// deduce/resulttypetmpl.cpp\ntemplate\nauto addA(T t, U u) -> decltype(t+u)\n{\n    return t + u;\n}\n\nvoid addA(...);\n\ntemplate\nauto addB(T t, U u) -> decltype(auto)\n{\n    return t + u;\n}\n\nvoid addB(...);\n\nstruct X {\n};\n\nusing AddResultA = decltype(addA(X(), X()));    // OK: AddResultA is void\nusing AddResultB = decltype(addB(X(), X()));    // ERROR: instantiation of addB is ill-formed\n\n15.10.5 结构化绑定（Structured Bindings）\nC++17引入了结构化绑定，用于以下三种情形：\n\n使用简单类类型初始化多个变量：\n\nstruct MaybeInt { bool valid; int value; };\nMaybeInt g();\nauto const&& [b, N] = g(); // binds b and N to the members of the result of g()\n\n\n使用数组初始化多个变量：\n\nint main() {\n    double pt[3];\n    auto& [x, y, z] = pt;\n    x = 3.0; y = 4.0; z = 0.0;\n    plot(pt);\n}\n\n\n从std::tuple、std::pair和std::array模板初始化变量（这些模板支持std::tuple_element系列模板）：\n\n#include \n\nstd::tuple bi{true, 42};\nauto [b, i] = bi;\nint r = i; // initializes r to 42\n\n15.10.6 泛型lambda表达式\n编译器处理具有具体参数类型的lambda表达式的方法是创建一个闭包类型（closure type），并为该类型重载函数调用运算符()：\n[] (int i) {\n    return i \n上面的代码创建的闭包类型为：\nclass SomeCompilerSpecificNameX\n{\n    public:\n        SomeCompilerSpecificNameX(); // only callable by the compiler\n        bool operator() (int i) const\n        {\n            return i \n当lambda表达式的参数类型为auto时，就变成了泛型lambda表达式，编译器处理的方式依然是创建一个闭包类型，但是是为该类型重载了函数调用运算符()成员模板：\n[] (auto i) {\n    return i \n上面的代码创建的闭包类型为：\nclass SomeCompilerSpecificNameZ\n{\n    public:\n        SomeCompilerSpecificNameZ(); // only callable by compiler\n        template\n        auto operator() (T i) const\n        {\n            return i \n15.11 别名模板\n编译器对别名模板的处理方式是首先进行别名代换，并用代换后的结果进行推导：\n// deduce/aliastemplate.cpp\ntemplate\nclass Stack;\n\ntemplate\nusing DequeStack = Stack>;\n\ntemplate\nvoid f1(Stack);\n\ntemplate\nvoid f2(DequeStack);\n\ntemplate\nvoid f3(Stack); // equivalent to f2\n\nvoid test(DequeStack intStack)\n{\n    f1(intStack);   // OK: T deduced to int, Cont deduced to std::deque\n    f2(intStack);   // OK: T deduced to int\n    f3(intStack);   // OK: T deduced to int\n}\n\n\n调用f1()时，实参类型为Stack>，使用该类型推导T和Cont\n因为DequeStack就是Stack>，所以f2()和f3()等价，因此使用Stack>推导T\n\n15.12 类模板参数推导\n从C++17开始，也可以根据类的构造函数对类模板参数进行推导，但是一个原则是要么全部指定类模板参数的类型，要么全部让编译器进行推导：\ntemplate\nclass C\n{\n    public:\n        // constructor for 0, 1, 2, or 3 arguments:\n        C (T1 x = T1{}, T2 y = T2{}, T3 z = T3{});\n        // ...\n};\n\nC c1(22, 44.3, \"hi\");   // OK in C++17: T1 is int, T2 is double, T3 is char const*\nC c2(22, 44.3);         // OK in C++17: T1 is int, T2 and T3 are double\nC c3(\"hi\", \"guy\");      // OK in C++17: T1, T2, and T3 are char const*\nC c4;                   // ERROR: T1 and T2 are undefined\nC c5(\"hi\");             // ERROR: T2 is undefined\n\nC c10(\"hi\",\"my\", 42);       // ERROR: only T1 explicitly specified, T2 not deduced\nC<> c11(22, 44.3, 42);              // ERROR: neither T1 nor T2 explicitly specified\nC c12(\"hi\",\"my\");    // OK: T1 and T2 are deduced, T3 has default\n\n15.12.1 推导指引\nC++17引入了推导指引，用来推导类模板参数：\ntemplate\nclass S {\n    private:\n        T a;\n    public:\n        S(T b) : a(b) {\n        }\n};\n\ntemplate S(T) -> S; // deduction guide\n\nS x{12};            // OK since C++17, same as: S x{12};\nS y(12);            // OK since C++17, same as: S y(12);\nauto z = S{12};     // OK since C++17, same as: auto z = S{12};\n\n推导指引可以理解为当用类型T初始化类S时，模板参数的类型就为T。\n15.12.2 隐式推导指引\n在引入了推导指引的情况下，类模板的每一个构造函数都有隐式的推导指引。如果想要禁掉某一隐式的推导指引，可以将相关构造函数写为这样子：\ntemplate\nstruct ValueArg {\n    using Type = T;\n};\n\ntemplate\nclass S {\n    private:\n        T a;\n    public:\n        using ArgType = typename ValueArg::Type;\n        S(ArgType b) : a(b) {\n        }\n};\n\n这将产生类似template S(typename ValueArg::Type) -> S的推导指引，而ValueArg::Type并不是可推导的上下文（参见15.2）。\n15.12.3 其它问题\n在注入类名称的情况下禁用类模板参数推导\ntemplate struct X {\n    template X(Iter b, Iter e);\n    template auto f(Iter b, Iter e) {\n        return X(b, e); // What is this?\n    }\n};\n\nX(b, e)中的X应该是等价于X的，而不是X，所以在这种情况下禁用了推导。\n在转发引用的情况下不考虑值类型\ntemplate struct Y {\n    Y(T const&);\n    Y(T&&);\n};\n\nvoid g(std::string s) {\n    Y y = s;\n}\n\n上面代码包含的两条隐式推导指引为：\ntemplate Y(T const&) -> Y;   // #1\ntemplate Y(T&&) -> Y;        // #2\n\n对于第一条推导指引，T被推导为std::string，所以在调用时需要将参数转换为std::string const类型。对于第二条推导指引，T仍然被推导为std::string，但是由于参数类型是转发引用，还会考虑值类型（在这里是左值），根据引用折叠规则得到的参数类型为std::string&，明显更为匹配，但是这并不是我们想要的结果，所以这种情况下的推导不考虑值类型。\n推导指引中的explicit\ntemplate struct Z {\n    Z(T const&);\n    Z(T&&);\n};\n\ntemplate Z(T const&) -> Z;       // #1\ntemplate explicit Z(T&&) -> Z;    // #2\n\nZ z1 = 1;   // only considers #1 ; same as: Z z1 = 1;\nZ z2{2};    // prefers #2 ; same as: Z z2{2};\n\n当推导指引中带有explicit关键字时，只有直接初始化的情况才可能有效。\n拷贝构造和初始化列表\ntemplate struct Tuple {\n    Tuple(Ts...);\n    Tuple(Tuple const&);\n};\n\n上面代码包含的推导指引为：\ntemplate Tuple(Ts...) -> Tuple;\ntemplate Tuple(Tuple const&) -> Tuple;\n\n对于下面的初始化过程：\nauto x = Tuple{1,2};\nTuple a = x;\nTuple b(x);\nTuple c{x, x};\nTuple d{x};\n\n\nx的类型为Tuple\na和b同时匹配两个推导指引（类型分别为Tuple>和Tuple），但是第二个更匹配，所以类型为Tuple\nc的类型为Tuple, Tuple>\nd的类型为Tuple\n\n显示的推导指引只用来推导\ntemplate struct X {\n    // ...\n};\n\ntemplate struct Y {\n    Y(X const&);\n    Y(X&&);\n};\n\ntemplate Y(X) -> Y;\n\n上面的推导指引并不和任一构造函数对应，它只是指出当以X类型构造Y时，类模板参数类型也为T。\n15.13 后记\n"},"2022-02-17-ch16-specialization-and-overloading.html":{"url":"2022-02-17-ch16-specialization-and-overloading.html","title":"Chapter 16 Specialization and Overloading","keywords":"","body":"16 特化和重载\n16.1 泛型代码无法解决的问题\n考虑下面的例子：\ntemplate\nclass Array {\n    private:\n        T* data;\n        // ...\n    public:\n        Array(Array const&);\n        Array& operator= (Array const&);\n        void exchangeWith (Array* b) {\n            T* tmp = data;\n            data = b->data;\n            b->data = tmp;\n        }\n        T& operator[] (std::size_t k) {\n            return data[k];\n        }\n        // ...\n};\n\ntemplate inline\nvoid exchange (T* a, T* b)\n{\n    T tmp(*a);\n    *a = *b;\n    *b = tmp;\n}\n\n上例中的exchange()适用于简单类型，对于具有较大拷贝开销的Array<>不是最好的实现，成员函数exchangeWith()是更好的选择，但是却无法实现一个泛型算法。\n16.1.1 通过特化提供相同的接口\n为了实现泛型算法，需要提供一个特化版本，并在其中调用exchangeWith()：\ntemplate\nvoid quickExchange(T* a, T* b) // #1\n{\n    T tmp(*a);\n    *a = *b;\n    *b = tmp;\n}\n\ntemplate\nvoid quickExchange(Array* a, Array* b) // #2\n{\n    a->exchangeWith(b);\n}\n\nvoid demo(Array* p1, Array* p2)\n{\n    int x=42, y=-7;\n    quickExchange(&x, &y);  // uses #1\n    quickExchange(p1, p2);  // uses #2\n}\n\n虽然quickExchange(p1, p2)可以匹配两个版本的quickExchange()，但是第二个比第一个更为特化（具体规则见16.2.3）。\n16.1.2 特化和语义一致性\n在下面的例子中，quickExchange()并不能保证语义一致性：\nstruct S {\n    int x;\n} s1, s2;\n\nvoid distinguish (Array a1, Array a2)\n{\n    int* p = &a1[0];\n    int* q = &s1.x;\n    a1[0] = s1.x = 1;\n    a2[0] = s2.x = 2;\n    quickExchange(&a1, &a2);    // *p == 1 after this (still)\n    quickExchange(&s1, &s2);    // *q == 2 after this\n}\n\n在第一个quickExchange()后，p和a2.data指向同一缓冲区，如果保证语义一致性，应该这样写（虽然有bug）：\ntemplate\nvoid exchange (Array* a, Array* b)\n{\n    T* p = &(*a)[0];\n    T* q = &(*b)[0];\n    for (std::size_t k = a->size(); k-- != 0; ) {\n        exchange(p++, q++);\n    }\n}\n\n16.2 函数模板的重载 \n假设有下面两个模板：\n// details/funcoverload1.hpp\ntemplate\nint f(T)\n{\n    return 1;\n}\n\ntemplate\nint f(T*)\n{\n    return 2;\n}\n\n当用int*实例化f(T)且用int实例化f(T*)时，将会得到两个相同的函数，这两个函数也是可以共存的，例如下面的代码：\n// details/funcoverload1.cpp\n#include \n#include \"funcoverload1.hpp\"\n\nint main()\n{\n    std::cout ((int*)nullptr);    // calls f(T)\n    std::cout ((int*)nullptr);     // calls f(T*)\n}\n\n16.2.1 函数签名\n上例中实例化后的函数之所以可以共存是因为函数签名不同，函数签名包含以下内容：\n\n函数的非受限名称\n函数名称所在的类和命名空间，如果是内部链接的名称，还包括翻译单元的名称\nconst、volatile修饰符\n如果是成员函数，还会包含左值、右值引用限定符\n函数的形参类型，如果是函数模板，则是代换前的类型\n如果是函数模板，还包括返回类型\n如果是函数模板，还包括模板形参类型和模板实参类型\n\n这就意味下面的的函数模板及实例化的结果可能可以共存：\ntemplate\nvoid f1(T1, T2);\n\ntemplate\nvoid f1(T2, T1);\n\ntemplate\nlong f2(T);\n\ntemplate\nchar f2(T);\n\n但是在解析f1('a', 'b')时，可能找不到最佳匹配的函数。\n16.2.2 重载的函数模板的匹配顺序 \n假设将16.2中的details/funcoverload1.cpp替换为下面的代码：\n// details/funcoverload2.cpp\n#include \n\ntemplate\nint f(T)\n{\n    return 1;\n}\n\ntemplate\nint f(T*)\n{\n    return 2;\n}\n\nint main()\n{\n    std::cout (T)\n    std::cout (T)\n    std::cout (T*)\n}\n\n匹配过程为：\n\n0的类型是int，显然只能匹配f(int)\nnullptr的类型是std::nullptr_t，也只能匹配f(std::nullptr_t)\n(int*)nullptr的类型是int*，可以匹配f(int*)，也可以匹配f(int*)，而f(T*)相对于f(T)则是更为特化的版本（具体规则见16.2.3），所以将匹配f(T*)\n\n16.2.3 重载的函数模板的匹配规则 \n重载的函数模板之间仅可能存在偏序的关系，也就是只有一个可能比另一个更为特化。重载解析的过程如下：\n\n没有使用的具有默认实参的形参和没有使用的可变参数部分将被忽略\n根据以下规则形成参数列表：\n使用独特的构造类型（a unique invented type）替换模板形参\n使用独特的构造类类型（a unique invented class template）替换模板的模板形参\n使用独特的构造值（a unique invented value）替换非类型模板形参\n\n\n如果函数模板2的推导类型和参数列表1完全匹配，但是反过来不能，则得到参数列表1的函数模板更为特化，否则两个函数模板之间不存在更为特化的偏序关系\n\n匹配规则的原文：\n\nIf template argument deduction of the second template against the first synthesized list of argument types succeeds with an exact match, but not vice versa, then the first template is more specialized than the second. Conversely, if template argument deduction of the first template against the second synthesized list of argument types succeeds with an exact match, but not vice versa, then the second template is more specialized than the first. Otherwise (either no deduction succeeds or both succeed), there is no ordering between the two templates.\n\n以前一节（16.2.2）中代码为例：解析f((int*)nullptr)时，两个函数模板实例化的结果分别为f(int*)和f(int*)，形参是一样的，参数列表分别为(A1)和(A2*)，用A2*代换第一个函数模板中的T后可以和参数列表2完全匹配，而用任何类型代换第二个函数模板中的T*都将得到指针类型，和参数列表1无法匹配，因此f(T*)更为特化。\n书中还有一个例子：\ntemplate\nvoid t(T*, T const* = nullptr, ...);\n\ntemplate\nvoid t(T const*, T*, T* = nullptr);\n\nvoid example(int* p)\n{\n    t(p, p);\n}\n\n第一个函数模板中的可变形参和第二个函数模板中的具有默认实参的第三个参数没有使用，所以将被忽略。根据模板参数推导规则，参数列表1为(A1*, A1 const*)，参数列表2为(A2 const*, A2*)，因此没有办法将参数列表1代换为参数列表2，也没有办法将参数列表2代换为参数列表1，所以两个函数模板之间不存在偏序关系，重载解析过程将会失败。\n看完整本书后再回头在看这里，觉得书上解释不是特别恰当。解析t(p, p)时，两个函数模板实例化后的结果分别为t(int*, int const*)和t(int const*, int*)，第一个函数的第一个形参比第二个函数的第一个形参更为匹配，而第二个函数的第二个形参却比第一个函数的第二个形参更为匹配，因此这里存在模糊调用。\n16.2.4 函数模板和普通函数之间重载\n重载解析过程将首先匹配普通函数：\n// details/nontmpl1.cpp\n#include \n#include \ntemplate\nstd::string f(T)\n{\n    return \"Template\";\n}\n\nstd::string f(int&)\n{\n    return \"Nontemplate\";\n}\n\nint main()\n{\n    int x = 7;\n    std::cout \n当需要const转换或者引用转换时，如果普通函数不能精确匹配，则重载解析过程会尝试匹配函数模板；如果其余方面都相同，则重载解析过程会优先匹配普通函数，例如下面的代码：\n// details/nontmpl2.cpp\n#include \n#include \n\ntemplate\nstd::string f(T&)\n{\n    return \"Template\";\n}\n\nstd::string f(int const&)\n{\n    return \"Nontemplate\";\n}\n\nint main()\n{\n    int x = 7;\n    std::cout \n当成员函数模板作为构造函数时，可能会比普通的构造函数匹配度更高：\n// details/tmplconstr.cpp\n#include \n#include \n\nclass C {\n    public:\n        C() = default;\n        C (C const&) {\n            std::cout \n        C (T&&) {\n            std::cout \n匹配过程为：\n\n初始化x2时，T的推导类型为C&，折叠后模板构造函数的参数类型为C&，比拷贝构造函数更为匹配\n初始化x3时，T的推导类型为C&&，折叠后模板构造函数的参数类型为C&&，和移动构造函数一致，优先匹配非模板函数\n初始化x4时，T的推导类型为C const&，折叠后模板构造函数的参数类型为C const&，和拷贝构造函数一致，优先匹配非模板函数\n初始化x5时，T的推导类型为C const&&，折叠后模板构造函数的参数类型为C const&&，比移动构造函数更为匹配\n\n16.2.5 可变参数模板的重载\n由于可变参数模板的一个形参类型会对应多个实参类型，匹配情况就会有些复杂：\n// details/variadicoverload.cpp\n#include \n\ntemplate\nint f(T*)\n{\n    return 1;\n}\n\ntemplate\nint f(Ts...)\n{\n    return 2;\n}\n\ntemplate\nint f(Ts*...)\n{\n    return 3;\n}\n\nint main()\n{\n    std::cout (Ts...)\n    std::cout (Ts*...)\n    std::cout (T*)\n}\n\n匹配过程为：\n\nf(0, 0.0)有两个参数，且没有指针类型，所以只能匹配f<>(Ts...)\nf((int*)nullptr, (double*)nullptr)可以同时匹配两个可变参数模板，参数列表分别为(A1)和(A2*)，显然参数列表1可以代换为参数列表2，但是反过来不能，也就是得到参数列表2的函数模板更为特化\nf((int*)nullptr)可以同时匹配三个函数模板，参数列表分别为(A1*)、(A2)和(A3*)，显然参数列表2不够特化，所以接下来要比较参数列表1和参数列表3特化偏序关系。虽然可以双向代换，但是由于A3是参数包，单个参数A1不能转换为参数包，所以得到参数列表1的函数模板更为特化——这条规则也意味着普通函数模板比可变参数函数模板更为特化\n\n上述规则也适用于需要参数包展开的可变参数模板：\n// details/tupleoverload.cpp\n#include \n\ntemplate class Tuple\n{\n};\n\ntemplate\nint f(Tuple)\n{\n    return 1;\n}\n\ntemplate\nint f(Tuple)\n{\n    return 2;\n}\n\ntemplate\nint f(Tuple)\n{\n    return 3;\n}\n\nint main()\n{\n    std::cout ());       // calls f<>(Tuple)\n    std::cout ());     // calls f<>(Tuple)\n    std::cout ());              // calls f<>(Tuple)\n}\n\n16.3 显示特化\n显示特化一般是指将全部的模板形参代换为模板实参后得到的具体实现代码，也称为全特化（full specialization）。类模板、函数模板、变量模板和成员模板可以被全特化。\n16.3.1 类模板的全特化\n全特化类模板以template<>开始，且特化的结果可以和原始模板没有关系，例如：\ntemplate\nclass S {\n    public:\n        void info() {\n            std::cout ::info())\\n\";\n        }\n};\n\ntemplate<>\nclass S {\n    public:\n        void msg() {\n            std::cout ::msg())\\n\";\n        }\n};\n\n全特化时要为所有的模板形参提供模板实参（具有默认实参的模板形参除外）：\ntemplate\nclass Types {\n    public:\n        using I = int;\n};\n\ntemplate::I>\nclass S;                            // #1\n\ntemplate<>\nclass S {                     // #2\n    public:\n        void f();\n};\n\ntemplate<> class S;     // #3\n\ntemplate<> class S;        // ERROR: 0 cannot substitute U\n\nint main()\n{\n    S* pi;         // OK: uses #1 , no definition needed\n    S e1;          // ERROR: uses #1, but no definition available\n    S* pv;        // OK: uses #2\n    S sv;     // OK: uses #2, definition available\n    S e2;    // ERROR: uses #1, but no definition available\n    S e3;    // ERROR: uses #3, but no definition available\n}\n\ntemplate<>\nclass S {   // definition for #3\n};\n\n上例还表明，全特化可以只是声明。一旦全特化被声明，编译器将不再考虑模板定义，即全特化的实例和普通类是一样的，唯一的不同就是需要对应一个模板定义，因此定义成员函数时不需要前缀template<>：\ntemplate\nclass S;\n\ntemplate<> class S {\n    public:\n        void print() const;\n};\n\n// the following definition cannot be preceded by template<>\nvoid S::print() const\n{\n    std::cout \n当编译器已经通过模板定义生成了特化版本后，将不能再声明全特化版本：\ntemplate\nclass Invalid {\n};\n\nInvalid x1;     // causes the instantiation of Invalid\n\ntemplate<>\nclass Invalid;  // ERROR: Invalid already instantiated\n\n16.3.2 函数模板的全特化\n函数模板的全特化会考虑模板之间的特化偏序关系，例如：\ntemplate\nint f(T)    // #1\n{\n    return 1;\n}\n\ntemplate\nint f(T*)   // #2\n{\n    return 2;\n}\n\ntemplate<> int f(int)   // OK: specialization of #1\n{\n    return 3;\n}\n\ntemplate<> int f(int*)  // OK: specialization of #2\n{\n    return 4;\n}\n\n函数模板全特化时不能包含默认实参，因为会被视为一个新的函数定义：\ntemplate\nint f(T, T x = 42)\n{\n    return x;\n}\n\ntemplate<> int f(int, int = 35) // ERROR\n{\n    return 0;\n}\n\n16.3.3 变量模板的全特化\n举个例子：\ntemplate constexpr std::size_t SZ = sizeof(T);\n\ntemplate<> constexpr std::size_t SZ = 0;\n\n16.3.4 成员模板的全特化\n本节中首先定义了一个类模板：\ntemplate\nclass Outer {                       // #1\n    public:\n        template\n        class Inner {               // #2\n            private:\n                static int count;   // #3\n        };\n        static int code;            // #4\n        void print() const {        // #5\n            std::cout \nint Outer::code = 6;             // #6\n\ntemplate template\nint Outer::Inner::count = 7;  // #7\n\n并对外层类模板进行了特化：\ntemplate<>\nclass Outer {                 // #8\n    public:\n        template\n        class Inner {               // #9\n            private:\n                static int count;   // #10\n        };\n        void print() const {        // #11\n        }\n};\n\n可以仅对类的静态数据成员和成员函数进行特化，类中其余部分将仍然从模板定义生成：\ntemplate<>\nint Outer::code = 12;\n\ntemplate<>\nvoid Outer::print() const\n{\n    std::cout \";\n}\n\n如果仅对类的静态数据成员和成员函数进行声明，应该写为：\ntemplate<>\nint Outer::code;\n\ntemplate<>\nvoid Outer::print() const;\n\n静态数据成员的全特化声明虽然看起来像通过默认值进行初始化的定义，但是对于模板来说这被解释为声明。\n本节开头定义的模板中还包含内嵌类，只可以逐次特化：\ntemplate<>\n    template\n    class Outer::Inner {\n        public:\n            static long count; // member type changed\n    };\n\ntemplate<>\n    template\n    long Outer::Inner::count;\n\ntemplate<>\n    template<>\n    class Outer::Inner {\n        public:\n            enum { count = 1 };\n    };\n\n// the following is not valid C++: template<> cannot follow a template parameter list\ntemplate\ntemplate<> class Outer::Inner; // ERROR\n\ntemplate<>\nclass Outer::Inner {\n    public:\n        enum { count = 2 };\n};\n\n16.4 类模板的偏特化\n偏特化（partial specialization）是指代换模板中的一部分参数得到一个新的模板，原始模板称为主模板。偏特化的限制如下：\n\n偏特化的模板应该和主模板对应\n偏特化的模板中不能包含默认实参\n偏特化的非类型模板实参应该是非依赖型的值或者其它的非类型模板形参\n偏特化的模板实参列表应该和主模版的形参列表不同\n可变参数应该在偏特化模板的最后\n\n上述限制对应的例子如下：\ntemplate\nclass S;                            // primary template\n\ntemplate\nclass S;                    // ERROR: parameter kind mismatch\n\ntemplate\nclass S;                     // ERROR: no default arguments\n\ntemplate\nclass S;                  // ERROR: no nontype expressions\n\ntemplate\nclass S;                      // ERROR: no significant difference from primary template\n\ntemplate\nclass Tuple;\n\ntemplate\nclass Tuple;           // ERROR: pack expansion not at the end\n\ntemplate\nclass Tuple, Tail>;    // OK: pack expansion is at the end of a nested template argument list\n\n16.5 变量模板的偏特化\nC++标准中针对变量模板偏特化还有很多问题没有规定，取决于编译器的实现。书中只有两个例子：\ntemplate constexpr std::size_t SZ = sizeof(T);\ntemplate constexpr std::size_t SZ = sizeof(void*);\n\ntemplate typename T::iterator null_iterator;\ntemplate T* null_iterator = null_ptr; // T* doesn’t match T::iterator, and that is fine\n\n16.6 后记\n"},"2022-02-22-ch17-future-directions.html":{"url":"2022-02-22-ch17-future-directions.html","title":"Chapter 17 Future Directions","keywords":"","body":"17 模板的未来\n17.1 更宽松的typename关键字规则\n标准的发展方向是放宽typename关键字的限制，例如在之前不允许使用typename的地方可以使用typename关键字（C++11已经实现），以及在编译器可以推导出受限依赖型名称是类型时省略typename关键字（书中列出了几种正在被讨论的情形，但感觉只是语法糖而已，还是规范一些好）。\n17.2 更多类型的非类型模板形参\n目前非类型模板参数只能是整型，标准未来可能支持字符串类型和浮点型：\n\n对于C风格字符串类型的非类型模板参数，由于会将字符串转换为地址，而两个相同的字符串也可能有不同的地址，这就很难区分实例化后的两个模板是否是同一个实例\n对于浮点型，也是很难确定两个实例是否相等，因为浮点数存储存在误差\n\n17.3 函数模板偏特化\n实例化类模板时将首先匹配主模板，在找到了主模版后，如果存在部分匹配的偏特化类模板，将实例化偏特化类模板。原文：\n\nWhen a class template is looked up, only primary templates are considered at first. If, after the selection of a primary template, it turns out that there is a partial specialization of that template with a template argument pattern that matches that of the instantiation, its definition (in other words, its body) is instantiated instead of the definition of the primary template. (Full template specializations work exactly the same way.)\n\n对于函数模板，主模板之间可能重载，所以偏特化的模板该对应哪个主模板呢？\ntemplate\nvoid add (T& x, int i);     // a primary template\n\ntemplate\nvoid add (T1 a, T2 b);      // another (overloaded) primary template\n\ntemplate\nvoid add (T*&, int);    // Which primary template does this specialize?\n\n17.4 模板实参指定初始化\n在当前的标准下，即使模板参数有默认值，除非其后面的模板参数均使用默认值，否则必须显示指定模板实参，未来可能纳入标准的一个规则是类似C结构体的指定初始化：\ntemplate,\n    typename Copy = defaultCopy,\n    typename Swap = defaultSwap,\n    typename Init = defaultInit,\n    typename Kill = defaultKill>\nclass Mutator {\n    // ...\n};\n\nvoid test(MatrixList ml)\n{\n    mySort (ml, Mutator );\n}\n\n17.5 重载类模板\n类似函数重载一样，未来可能支持类模板的重载：\ntemplate\nclass Array {\n    // dynamically sized array\n    // ...\n};\ntemplate\nclass Array {\n    // fixed size array\n    // ...\n};\n\n但是在某种程度上有点像特化：\ntemplate\nclass Pair {\n    // pair of fields\n    // ...\n};\ntemplate\nclass Pair {\n    // pair of constant integer values\n    // ...\n};\n\n17.6 任意位置的参数包展开\n目前标准只支持尾部的参数包展开：\ntemplate\nstruct Front;\n\ntemplate\nstruct Front {\n    using Type = FrontT;\n};\n\n不支持首部和中间位置的参数包展开：\ntemplate\nstruct Back;\n\ntemplate\nstruct Back {  // ERROR: pack expansion not at the end of\n    using Type = BackT;         // template argument list\n};\n\ntemplate class Tuple {\n};\n\ntemplate\nstruct Split;\n\ntemplate\nstruct Split {\n    using before = Tuple;\n    using after = Tuple;\n};\n\n关键问题是不知道Split模板该在哪一个T的位置对参数包进行分割。\n17.7 规范化void\nvoid是不完整类型，很多时候都需要单独考虑void：\nauto&& r = f();             // error if f() returns void\ndecltype(auto) r = f();     // error if f() returns void\n\n17.8 为模板提供类型检查\n虽然模板报错时的信息都比较长（说的就是你g++），但是却很难判断是模板定义出错了，还是用户代码触发实例化的代码出错了，C++准备引入concept来解决这个问题：\ntemplate requires LessThanComparable\nT max(T a, T b)\n{\n    return b  (X, X);\n\nint main()\n{\n    X a, b;\n    X m = max(a, b); // ERROR: X does not meet the LessThanComparable requirement\n}\n\n当X不支持运算符时，编译器将给出更简单的报错信息。\n17.9 反射元编程（Reflective Metaprogramming）\n反射指通过代码获取程序的信息，例如类的非静态数据成员：\ntemplate void report(T p) {\n    constexpr {\n        std::meta::info infoT = reflexpr(T);\n        for (std::meta::info : std::meta::data_members(infoT)) {\n            -> {\n                std::cout \n由于constexpr的存在，上述代码将在编译时计算，最终结果类似于下面的代码：\nstruct X {\n    int x;\n    std::string s;\n};\n\ntemplate<> void report(X const& p) {\n    std::cout \n感觉是不能在运行时计算的，因为编译后的这些信息都丢掉了。这些信息类似于调试信息，如果带着的话可执行文件将变大。\n17.10 参数包操作\n目前只能通过sizeof...求出参数包中剩余参数个数，未来还可能支持下标运算来获取参数包中某个参数。\n17.11 模块\n主要用来提升编译速度，目前模板代码只能写在头文件中，虽然程序中可能只实例化很少的模板代码，但是却会对整个头文件进行词法分析和语法分析，引入模块后可以提前将头文件编译好以提升编译速度。\n"},"2022-02-23-ch18-the-polymorphic-power-of-templates.html":{"url":"2022-02-23-ch18-the-polymorphic-power-of-templates.html","title":"Chapter 18 The Polymorphic Power of Templates","keywords":"","body":"18 模板和多态\n18.1 动态多态\n动态多态是使用同一种方法在运行时调用不同的代码，书中给出的是最为熟知的画图形的例子：\n// poly/dynahier.hpp\n#include \"coord.hpp\"\n// common abstract base class GeoObj for geometric objects\nclass GeoObj {\n    public:\n        // draw geometric object:\n        virtual void draw() const = 0;\n        // return center of gravity of geometric object:\n        virtual Coord center_of_gravity() const = 0;\n        // ...\n        virtual ~GeoObj() = default;\n};\\\n\n// concrete geometric object class Circle\n// - derived from GeoObj\nclass Circle : public GeoObj {\n    public:\n        virtual void draw() const override;\n        virtual Coord center_of_gravity() const override;\n        // ...\n};\n\n// concrete geometric object class Line\n// - derived from GeoObj\nclass Line : public GeoObj {\n    public:\n        virtual void draw() const override;\n        virtual Coord center_of_gravity() const override;\n        // ...\n};\n// ...\n\n// poly/dynapoly.cpp\n#include \"dynahier.hpp\"\n#include \n\n// draw any GeoObj\nvoid myDraw (GeoObj const& obj)\n{\n    obj.draw(); // call draw() according to type of object\n}\n\n// compute distance of center of gravity between two GeoObjs\nCoord distance (GeoObj const& x1, GeoObj const& x2)\n{\n    Coord c = x1.center_of_gravity() - x2.center_of_gravity();\n    return c.abs(); // return coordinates as absolute values\n}\n\n// draw heterogeneous collection of GeoObjs\nvoid drawElems (std::vector const& elems)\n{\n    for (std::size_type i=0; idraw(); // call draw() according to type of element\n    }\n}\n\nint main()\n{\n    Line l;\n    Circle c, c1, c2;\n\n    myDraw(l);  // myDraw(GeoObj&) => Line::draw()\n    myDraw(c);  // myDraw(GeoObj&) => Circle::draw()\n\n    distance(c1,c2);    // distance(GeoObj&,GeoObj&)\n    distance(l,c);      // distance(GeoObj&,GeoObj&)\n\n    std::vector coll;  // heterogeneous collection\n    coll.push_back(&l);         // insert line\n    coll.push_back(&c);         // insert circle\n    drawElems(coll);            // draw different kinds of GeoObjs\n    }\n\n18.2 静态多态\n使用模板可以得到上例的静态多态版本：\n// poly/statichier.hpp\n#include \"coord.hpp\"\n\n// concrete geometric object class Circle\n// - not derived from any class\nclass Circle {\n    public:\n        void draw() const;\n        Coord center_of_gravity() const;\n        // ...\n};\n\n// concrete geometric object class Line\n// - not derived from any class\nclass Line {\n    public:\n        void draw() const;\n        Coord center_of_gravity() const;\n        // ...\n};\n// ...\n\n// poly/staticpoly.cpp\n#include \"statichier.hpp\"\n#include \n\n// draw any GeoObj\ntemplate\nvoid myDraw (GeoObj const& obj)\n{\n    obj.draw(); // call draw() according to type of object\n}\n\n// compute distance of center of gravity between two GeoObjs\ntemplate\nCoord distance (GeoObj1 const& x1, GeoObj2 const& x2)\n{\n    Coord c = x1.center_of_gravity() - x2.center_of_gravity();\n    return c.abs(); // return coordinates as absolute values\n}\n\n// draw homogeneous collection of GeoObjs\ntemplate\nvoid drawElems (std::vector const& elems)\n{\n    for (unsigned i=0; i(GeoObj&) => Line::draw()\n    myDraw(c);  // myDraw(GeoObj&) => Circle::draw()\n\n    distance(c1,c2);    // distance(GeoObj1&,GeoObj2&)\n    distance(l,c);      // distance(GeoObj1&,GeoObj2&)\n\n    // std::vector coll;   // ERROR: no heterogeneous collection possible\n    std::vector coll;         // OK: homogeneous collection possible\n    coll.push_back(l);              // insert line\n    drawElems(coll);                // draw all lines\n}\n\n18.3 动态多态和静态多态的对比\n\n术语\n\n通过继承实现的多态是绑定的（bounded）和动态的（dynamic）\n绑定是指参与多态的类型的接口由基类固定\n动态是指在运行时通过函数指针调用正确的函数\n\n\n通过模板实现的多态是未绑定的（unbounded）和静态的（static）\n未绑定是指参与多态的类型的接口是不固定的\n静态是指在编译时由编译器解析要调用的函数\n\n\n\n\n区别\n\n动态多态\n处理派生类集合的代码很优雅\n代码体积小\n代码可以被编译为二进制，源码可以不公开\n\n\n静态多态\n内置集合类型的处理很方便，但是类类型的通用接口不能通过统一的接口定义\n代码运行速度会快一些\n没有完整实现接口的类型也可以参与多态\n\n\n\n\n\n18.4 Concept\nConcept是指模板实参类型所需要支持的接口操作：\n// poly/conceptsreq.hpp\n#include \"coord.hpp\"\n\ntemplate\nconcept GeoObj = requires(T x) {\n    { x.draw() } -> void;\n    { x.center_of_gravity() } -> Coord;\n    // ...\n};\n\n// poly/conceptspoly.hpp\n#include \"conceptsreq.hpp\"\n#include \n\n// draw any GeoObj\ntemplate\nrequires GeoObj\nvoid myDraw (T const& obj)\n{\n    obj.draw(); // call draw() according to type of object\n}\n\n// compute distance of center of gravity between two GeoObjs\ntemplate\nrequires GeoObj && GeoObj\nCoord distance (T1 const& x1, T2 const& x2)\n{\n    Coord c = x1.center_of_gravity() - x2.center_of_gravity();\n    return c.abs(); // return coordinates as absolute values\n}\n\n// draw homogeneous collection of GeoObjs\ntemplate\nrequires GeoObj\nvoid drawElems (std::vector const& elems)\n{\n    for (std::size_type i=0; i\n18.5 静态多态下的设计模式\n在传统的设计模式中，桥接模式（bridge pattern）将接口与实现分离开。抽象类中包含一个实现类，抽象类通过该实现类提供具体的功能。可以简单理解为抽象类提供了一个功能，但是这个功能需要分若干步骤实现，实现类接口定义了每个步骤。\n在动态多态下，抽象类中包含的是实现类的指针，而在静态多态下，抽象类中包含的是实现类的对象。\n18.6 泛型编程\n泛型编程是指用泛化的参数来为算法提供抽象的表达。原文：\n\nProgramming with generic parameters to finding the most abstract representation of efficient algorithms.\n\n在C++中，泛型编程基本等价于模板编程，就像面向对象编程基本等价于使用虚函数一样。C++标准模板库（Standard Template Library，STL）是泛型编程的典型代表。STL中定义了算法和容器，容器是类，但是算法并不是容器类的成员函数，所以它们可以被应用于各种容器，并且用迭代器的类型进行了限制，这也是concept的一种体现。\n// poly/printmax.cpp\n#include \n#include \n#include \n#include \n#include \"MyClass.hpp\"\n\ntemplate\nvoid printMax (T const& coll)\n{\n    // compute position of maximum value\n    auto pos = std::max_element(coll.begin(),coll.end());\n\n    // print value of maximum element of coll (if any):\n    if (pos != coll.end()) {\n        std::cout  c1;\n    std::list c2;\n    // ...\n    printMax(c1);\n    printMax(c2);\n}\n\n18.7 后记\n"},"2022-03-01-ch19-implementing-traits.html":{"url":"2022-03-01-ch19-implementing-traits.html","title":"Chapter 19 Implementing Traits","keywords":"","body":"19 类型特征模板\n19.1 序列累加的例子\n19.1.1 固定类型特征\n假设有一个对容器中元素累加的模板：\n// traits/accum1.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\ntemplate\nT accum (T const* beg, T const* end)\n{\n    T total{}; // assume this actually creates a zero value\n    while (beg != end) {\n        total += *beg;\n        ++beg;\n    }\n    return total;\n}\n\n#endif // ACCUM_HPP\n\n分别使用该模板对整型数组和字符进行累加：\n// traits/accum1.cpp\n#include \"accum1.hpp\"\n#include \n\nint main()\n{\n    // create array of 5 integer values\n    int num[] = { 1, 2, 3, 4, 5 };\n\n    // print average value\n    std::cout \n输出结果为：\nthe average value of the integer values is 3\nthe average value of the characters in \"templates\" is -5\n\n由于char所表示的数据范围较小，累加的过程可能存在溢出或者截断，所以会出现负值。当然可以通过将返回类型也作为模板参数解决这个问题，但是会比较麻烦。\n另一种方式是为不同的类型T关联一个返回值的类型，这个相关联的类型可以视为T的类型特征。原文：\n\nAn alternative approach to the extra parameter is to create an association between each type T for which accum() is called and the corresponding type that should be used to hold the accumulated value. This association could be considered characteristic of the type T, and therefore the type in which the sum is computed is sometimes called a trait of T.\n\n类型特征可以通过模板特化实现：\n// traits/accumtraits2.hpp\ntemplate\nstruct AccumulationTraits;\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = int;\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = int;\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = long;\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = unsigned long;\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = double;\n};\n\n然后将模板修改为：\n// traits/accum2.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\n#include \"accumtraits2.hpp\"\n\ntemplate\nauto accum (T const* beg, T const* end)\n{\n    // return type is traits of the element type\n    using AccT = typename AccumulationTraits::AccT;\n\n    AccT total{}; // assume this actually creates a zero value\n    while (beg != end) {\n        total += *beg;\n        ++beg;\n    }\n    return total;\n}\n\n#endif // ACCUM_HPP\n\n这就会得到正确的输出：\nthe average value of the integer values is 3\nthe average value of the characters in \"templates\" is 108\n\n19.1.2 值特征\n类型特征的解决办法很好的解决了返回类型的问题，但是却不能保证初值total是一个合理值，为此可以再为类型T提供值特征：\n// traits/accumtraits3.hpp\ntemplate\nstruct AccumulationTraits;\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = int;\n    static AccT const zero = 0;\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = int;\n    static AccT const zero = 0;\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = long;\n    static AccT const zero = 0;\n};\n// ...\n\n并用如下代码改写模板：\n// traits/accum3.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\n#include \"accumtraits3.hpp\"\n\ntemplate\nauto accum (T const* beg, T const* end)\n{\n    // return type is traits of the element type\n    using AccT = typename AccumulationTraits::AccT;\n\n    AccT total = AccumulationTraits::zero; // init total by trait value\n    while (beg != end) {\n    total += *beg;\n    ++beg;\n    }\n    return total;\n}\n\n#endif // ACCUM_HPP\n\n但是C++只允许类的静态常量数据成员是整型或者枚举类型，对于浮点型，应该使用constexpr；对于自定义类型，只能通过静态函数的方式：\n// traits/accumtraits4.hpp\ntemplate\nstruct AccumulationTraits;\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = int;\n    static constexpr AccT zero() {\n        return 0;\n    }\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = int;\n    static constexpr AccT zero() {\n        return 0;\n    }\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = long;\n    static constexpr AccT zero() {\n        return 0;\n    }\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = unsigned long;\n    static constexpr AccT zero() {\n        return 0;\n    }\n};\n\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = double;\n    static constexpr AccT zero() {\n        return 0;\n    }\n};\n// ...\n\n// traits/accumtraits4bigint.hpp\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = BigInt;\n    static BigInt zero() {\n        return BigInt{0};\n    }\n};\n\n不过在C++17中，对于自定义类型还可以写为inline的形式：\ntemplate<>\nstruct AccumulationTraits {\n    using AccT = BigInt;\n    inline static BigInt const zero = BigInt{0}; // OK since C++17\n};\n\n19.1.3 将类型特征作为模板参数 \n类型特征也可以作为模板参数：\n// traits/accum5.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\n#include \"accumtraits4.hpp\"\n\ntemplate>\nauto accum (T const* beg, T const* end)\n{\n    typename AT::AccT total = AT::zero();\n    while (beg != end) {\n        total += *beg;\n        ++beg;\n    }\n    return total;\n}\n\n#endif // ACCUM_HPP\n\n19.2 类型特征和策略\n累加模板的过程可以抽象为遍历序列中的每个元素，并和当前得到的累加值进行加法求和，这里将求和操作称为策略（policy），因此可以将模板策略参数化，通过模板参数来控制求和、求积的过程：\n// traits/accum6.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\n#include \"accumtraits4.hpp\"\n#include \"sumpolicy1.hpp\"\n\ntemplate>\nauto accum (T const* beg, T const* end)\n{\n    using AccT = typename Traits::AccT;\n    AccT total = Traits::zero();\n    while (beg != end) {\n        Policy::accumulate(total, *beg);\n        ++beg;\n    }\n    return total;\n}\n\n#endif // ACCUM_HPP\n\n// traits/sumpolicy1.hpp\n#ifndef SUMPOLICY_HPP\n#define SUMPOLICY_HPP\n\nclass SumPolicy {\n    public:\n        template\n        static void accumulate (T1& total, T2 const& value) {\n            total += value;\n        }\n};\n\n#endif // SUMPOLICY_HPP\n\n// traits/accum6.cpp\n#include \"accum6.hpp\"\n#include \n\nclass MultPolicy {\n    public:\n        template\n        static void accumulate (T1& total, T2 const& value) {\n            total *= value;\n        }\n};\n\nint main()\n{\n    // create array of 5 integer values\n    int num[] = { 1, 2, 3, 4, 5 };\n\n    // print product of all values\n    std::cout (num, num+5)\n                \n由于初值仍然为0，所以代码并不正确，有两种方法可以解决这个问题，一个是将初值作为策略的一部分，还有就是仿照标注库std::accumulate将初值作为参数。\n19.2.1 类型特征和策略的区别\n\n类型特征（trait）表示模板参数的额外属性：\n可以不作为模板参数传递\n在作为模板参数的情况下一般具有默认值，调用时基本不需要提供模板实参，见19.1.3\n一般和模板参数密切相关\n一般是类型或者常量\n一般通过类型特征模板获取\n\n\n策略（policy）表示函数或者类型中可以配置的行为（个人认为重点在可配置）\n大多数情况下要通过模板参数传递才能发挥作用\n一般不提供默认模板实参，需要显示指定\n一般和其它模板参数关系不大\n一般通过成员函数实现\n一般实现在普通类或者类模板\n\n\n\n19.2.2 通过类模板实现策略\n策略还可以实现为类模板，然后将其作为模板的模板参数：\n// traits/sumpolicy2.hpp\n#ifndef SUMPOLICY_HPP\n#define SUMPOLICY_HPP\n\ntemplate\nclass SumPolicy {\n    public:\n        static void accumulate (T1& total, T2 const& value) {\n            total += value;\n        }\n};\n\n#endif // SUMPOLICY_HPP\n\n// traits/accum7.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\n#include \"accumtraits4.hpp\"\n#include \"sumpolicy2.hpp\"\n\ntemplate class Policy = SumPolicy,\n            typename Traits = AccumulationTraits>\nauto accum (T const* beg, T const* end)\n{\n    using AccT = typename Traits::AccT;\n    AccT total = Traits::zero();\n    while (beg != end) {\n        Policy::accumulate(total, *beg);\n        ++beg;\n    }\n    return total;\n}\n\n#endif // ACCUM_HPP\n\n19.2.3 组合使用类型特征和策略\n当都通过模板参数传递类型特征和策略时，一般将策略放在类型特征之前，这是因为策略可能不使用默认模板实参，而类型特征一般使用默认模板实参。\n19.2.4 通过迭代器实现累加\n前面的累加模板都是通过指针实现的，标准库中更通用的方式是通过迭代器（书中的例子还是会导致溢出和截断）：\n// traits/accum0.hpp\n#ifndef ACCUM_HPP\n#define ACCUM_HPP\n\n#include \n\ntemplate\nauto accum (Iter start, Iter end)\n{\n    using VT = typename std::iterator_traits::value_type;\n    VT total{}; // assume this actually creates a zero value\n    while (start != end) {\n        total += *start;\n        ++start;\n    }\n    return total;\n}\n#endif // ACCUM_HPP\n\n19.3 类型函数\n类型函数是以类型为参数并返回一个类型或者值的函数，如果将sizeof视为函数的话，那么其就是一个类型函数，下面的代码可以认为是sizeof的函数版本：\n// traits/sizeof.cpp\n#include \n#include \n\ntemplate\nstruct TypeSize {\n    static std::size_t const value = sizeof(T);\n};\n\nint main()\n{\n    std::cout ::value = \"\n                ::value \n19.3.1 获取容器中元素类型的模板\n下面的偏特化模板可以获取容器中元素的类型：\n// traits/elementtype.hpp\n#include \n#include \n\ntemplate\nstruct ElementT;                    // primary template\n\ntemplate\nstruct ElementT> {   // partial specialization for std::vector\n    using Type = T;\n};\n\ntemplate\nstruct ElementT> {     // partial specialization for std::list\n    using Type = T;\n};\n// ...\n\ntemplate\nstruct ElementT {             // partial specialization for arrays of known bounds\n    using Type = T;\n};\n\ntemplate\nstruct ElementT {              // partial specialization for arrays of unknown bounds\n    using Type = T;\n};\n// ...\n\n使用方法为：\n// traits/elementtype.cpp\n#include \"elementtype.hpp\"\n#include \n#include \n#include \n\ntemplate\nvoid printElementType (T const& c)\n{\n    std::cout ::Type).name()\n                 s;\n    printElementType(s);\n    int arr[42];\n    printElementType(arr);\n}\n\n19.3.2 类型修饰模板（Transformation Traits）\n类型修饰模板可以移除和添加类型中的引用、移除限定符和实现类型退化（decay）。\n移除引用\n// traits/removereference.hpp\ntemplate\nstruct RemoveReferenceT {\n    using Type = T;\n};\n\ntemplate\nstruct RemoveReferenceT {\n    using Type = T;\n};\n\ntemplate\nstruct RemoveReferenceT {\n    using Type = T;\n};\n\n添加引用\n// traits/addreference.hpp\ntemplate\nstruct AddLValueReferenceT {\n    using Type = T&;\n};\n\ntemplate\nusing AddLValueReference = typename AddLValueReferenceT::Type;\n\ntemplate\nstruct AddRValueReferenceT {\n    using Type = T&&;\n};\n\ntemplate\nusing AddRValueReference = typename AddRValueReferenceT::Type;\n\n引用折叠规则适用于这里。由于void是不完整类型，所以需要实现以下特化（这里只是AddLValueReferenceT<>的例子）：\ntemplate<>\nstruct AddLValueReferenceT {\n    using Type = void;\n};\n\ntemplate<>\nstruct AddLValueReferenceT {\n    using Type = void const;\n};\n\ntemplate<>\nstruct AddLValueReferenceT {\n    using Type = void volatile;\n};\n\ntemplate<>\nstruct AddLValueReferenceT {\n    using Type = void const volatile;\n};\n\n移除限定符\n移除const限定：\n// traits/removeconst.hpp\ntemplate\nstruct RemoveConstT {\n    using Type = T;\n};\n\ntemplate\nstruct RemoveConstT {\n    using Type = T;\n};\n\ntemplate\nusing RemoveConst = typename RemoveConstT::Type;\n\n同时移除const和volatile限定：\n// traits/removecv.hpp\n#include \"removeconst.hpp\"\n#include \"removevolatile.hpp\"\n\ntemplate\nstruct RemoveCVT : RemoveConstT::Type> {\n};\n\ntemplate\nusing RemoveCV = typename RemoveCVT::Type;\n\nRemoveCVT<>通过RemoveVolatileT<>移除了volatile限定，还通过继承的方式继承了RemoveConstT::Type。\n实现类型退化\n当模板参数为传值类型时，会发生类型退化：\n// traits/passbyvalue.cpp\n#include \n#include \n#include \n\ntemplate\nvoid f(T)\n{\n}\n\ntemplate\nvoid printParameterType(void (*)(A))\n{\n    std::cout ::value ::value ::value );\n    printParameterType(&f);\n    printParameterType(&f);\n    printParameterType(&f);\n}\n\n输出为：\nParameter type: i\n- is int:     1\n- is const:   0\n- is pointer: 0\nParameter type: i\n- is int:     1\n- is const:   0\n- is pointer: 0\nParameter type: Pi\n- is int:     0\n- is const:   0\n- is pointer: 1\nParameter type: PFiiE\n- is int:     0\n- is const:   0\n- is pointer: 1\n\n模拟类型退化的模板为：\ntemplate\nstruct DecayT : RemoveCVT {\n};\n\ntemplate\nstruct DecayT {\n    using Type = T*;\n};\n\ntemplate\nstruct DecayT {\n    using Type = T*;\n};\n\ntemplate\nstruct DecayT {\n    using Type = R (*)(Args...);\n};\n\ntemplate\nstruct DecayT {\n    using Type = R (*)(Args..., ...);\n};\n\n// traits/decay.cpp\n#include \n#include \n#include \n#include \"decay.hpp\"\n\ntemplate\nvoid printDecayedType()\n{\n    using A = typename DecayT::Type;\n    std::cout ::value ::value ::value ();\n    printDecayedType();\n    printDecayedType();\n    printDecayedType();\n}\n\n对于为什么需要第二个可变参数特化模板我也没看懂。原文：\n\nStrictly speaking, the comma prior to the second ellipsis (...) is optional but is provided here for clarity. Due to the ellipsis being optional, the function type in the first partial specialization is actually syntactically ambiguous: It can be parsed as either R(Args, ...) (a C-style varargs parameter) or R(Args... name) (a parameter pack). The second interpretation is picked because Args is an unexpanded parameter pack. We can explicitly add the comma in the (rare) cases where the other interpretation is desired.\n\n19.3.3 谓词模板\n谓词模板接受多个类型参数，返回一个布尔值。\n判断类型是否相同\nIsSameT<>判断两个类型是否相同：\n// traits/issame0.hpp\ntemplate\nstruct IsSameT {\n    static constexpr bool value = false;\n};\n\ntemplate\nstruct IsSameT {\n    static constexpr bool value = true;\n};\n\n将布尔值转换为类型\n通过下面的模板可以实现将布尔值转换为类型：\n// traits/boolconstant.hpp\ntemplate\nstruct BoolConstant {\n    using Type = BoolConstant;\n    static constexpr bool value = val;\n};\n\nusing TrueType = BoolConstant;\nusing FalseType = BoolConstant;\n\n这样IsSameT<>就可以通过继承的方式实现：\n// traits/issame.hpp\n#include \"boolconstant.hpp\"\n\ntemplate\nstruct IsSameT : FalseType\n{\n};\n\ntemplate\nstruct IsSameT : TrueType\n{\n};\n\n将布尔值转换为类型的好处是可以在编译时实现函数分发，相比于向函数中传递true和false从而实现在运行时执行不同分支的代码的方式来说会更快一些（我觉得是这样子）：\n// traits/issame.cpp\n#include \"issame.hpp\"\n#include \n\ntemplate\nvoid fooImpl(T, TrueType)\n{\n    std::cout \nvoid fooImpl(T, FalseType)\n{\n    std::cout \nvoid foo(T t)\n{\n    fooImpl(t, IsSameT{}); // choose impl. depending on whether T is int\n}\n\nint main()\n{\n    foo(42);    // calls fooImpl(42, TrueType)\n    foo(7.7);   // calls fooImpl(42, FalseType)\n}\n\n19.3.4 结果类型模板 \n结果类型模板给出多个类型的运算结果。\n例如对于加法，最简单的实现为：\n// traits/plus1.hpp\ntemplate\nstruct PlusResultT {\n    using Type = decltype(T1() + T2());\n};\n\ntemplate\nusing PlusResult = typename PlusResultT::Type;\n\n但是这种方式要求T1和T2可以被默认构造，为了消除这个限制，可以使用std::declval：\n// traits/plus2.hpp\n#include \n\ntemplate\nstruct PlusResultT {\n    using Type = decltype(std::declval() + std::declval());\n};\n\ntemplate\nusing PlusResult = typename PlusResultT::Type;\n\nstd::declval的定义如下：\nnamespace std {\n    template\n    add_rvalue_reference_t declval() noexcept;\n}\n\n因为这个模板只用在decltype和sizeof，所以标准库并不提供定义。原文：\n\nThis function template is intentionally left undefined because it’s only meant to be used within\ndecltype, sizeof, or some other context where no definition is ever needed.\n\n19.4 基于SFINAE规则的类型特征模板\n19.4.1 通过SFINAE规则实现函数重载 \n基于SFINAE规则实现的函数重载可以用于判断类型是否可以被默认构造：\n// traits/isdefaultconstructible1.hpp\n#include \"issame.hpp\"\n\ntemplate\nstruct IsDefaultConstructibleT {\n    private:\n        // test() trying substitute call of a default constructor for T passed as U:\n        template\n            static char test(void*);\n        // test() fallback:\n        template\n            static long test(...);\n    public:\n        static constexpr bool value\n            = IsSameT(nullptr)), char>::value;\n};\n\n使用方法为：\nIsDefaultConstructibleT::value     // yields true\n\nstruct S {\n    S() = delete;\n};\nIsDefaultConstructibleT::value       // yields false\n\ntest()中不能使用T作为模板参数的原因在于IsDefaultConstructibleT::value会先以参数T实例化类模板，在这个过程中会实例化test()的声明，如果T不能被默认构造，将会出现编译错误，使用U将实例化推迟到了引用value的时刻，也就是利用SFINAE规则的时刻。原文：\n\nThis doesn’t work, however, because for any T, always, all member functions are substituted, so that for a type that isn’t default constructible, the code fails to compile instead of ignoring the first test() overload. By passing the class template parameter T to a function template parameter U, we create a specific SFINAE context only for the second test() overload.\n\n另一种基于谓词模板的判断方式如下：\n// traits/isdefaultconstructible2.hpp\n#include \n\ntemplate\nstruct IsDefaultConstructibleHelper {\n    private:\n        // test() trying substitute call of a default constructor for T passed as U:\n        template\n            static std::true_type test(void*);\n        // test() fallback:\n        template\n            static std::false_type test(...);\n    public:\n        using Type = decltype(test(nullptr));\n};\n\ntemplate\nstruct IsDefaultConstructibleT : IsDefaultConstructibleHelper::Type {\n};\n\n19.4.2 通过SFINAE规则实现偏特化 \n基于SFINAE规则实现的偏特化也可以用于判断类型是否可以被默认构造：\n// traits/isdefaultconstructible3.hpp\n#include \"issame.hpp\"\n#include  // defines true_type and false_type\n\n// helper to ignore any number of template parameters:\ntemplate using VoidT = void;\n\n// primary template:\ntemplate>\nstruct IsDefaultConstructibleT : std::false_type\n{\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct IsDefaultConstructibleT> : std::true_type\n{\n};\n\n19.4.3 基于SFINAE规则的泛型lambda表达式 \n基于SFINAE规则实现的泛型lambda表达式也可以用于判断类型是否可以被默认构造，但是很复杂：\n// traits/isvalid.hpp\n#include \n\n// helper: checking validity of f(args...) for F f and Args... args:\ntemplate()(std::declval()...))>\nstd::true_type isValidImpl(void*);\n\n// fallback if helper SFINAE’d out:\ntemplate\nstd::false_type isValidImpl(...);\n\n// define a lambda that takes a lambda f and returns whether calling f with args is valid\ninline constexpr\nauto isValid = [](auto f) {\n                            return [](auto&&... args) {\n                                        return decltype(isValidImpl(nullptr)){};\n                                    };\n                            };\n\n// helper template to represent a type as a value\ntemplate\nstruct TypeT {\n    using Type = T;\n};\n\n// helper to wrap a type as a value\ntemplate\nconstexpr auto type = TypeT{};\n\n// helper to unwrap a wrapped type in unevaluated contexts\ntemplate\nT valueT(TypeT); // no definition needed\n\n使用方法为：\nconstexpr auto isDefaultConstructible\n    = isValid([](auto x) -> decltype((void)decltype(valueT(x))()) {\n                });\n\nisDefaultConstructible(type)   // true (int is default-constructible)\nisDefaultConstructible(type)  // false (references are not default-constructible)\n\n一点点分析。isDefaultConstructible和isValid()都是常量表达式，可以在编译时计算。isDefaultConstructible是以lambda表达式[](auto x) -> decltype((void)decltype(valueT(x))()) {}调用isValid()返回的lambda表达式，代换后的结果为：\nconstexpr auto isDefaultConstructible\n    = [](auto&&... args) {\n        return decltype(isValidImpl decltype((void)decltype(valueT(x))())),\n                                    decltype(args)&&...\n                                    >(nullptr)\n                        ){};\n    };\n\nisDefaultConstructible是一个泛型lambda表达式，所以auto&&... args为转发引用。当以TypeT类型或者TypeT类型的临时对象调用isDefaultConstructible时，推导结果为TypeT和TypeT。由于上述return语句的最后是{}，所以isDefaultConstructible返回的将是isValidImpl<>模板的返回类型创建的临时对象，也就是std::true_type或者std::false_type类型的临时对象。\n现在只需要确定return后面的decltype的推导结果就可以了。注意到这是一个函数调用，参数为nullptr，将匹配isValidImpl(void*):\n\n第1个参数包含泛型lambda表达式，编译器将创建一个重载了函数调用运算符模板的闭包类型：\n\nclass SomeCompilerSpecificName\n{\n    public:\n        SomeCompilerSpecificName();\n        template\n        auto operator() (T x) -> decltype((void)decltype(valueT(x))())) const\n        {\n        }\n};\n\n\n第2个模板参数类型为TypeT&&或者TypeT&&\n第3个模板参数是decltype的推导结果，推导的对象为std::declval()(std::declval()...)。std::declval()会实例化闭包类型，但是并不会实例化函数调用运算符成员模板。std::declval()...将创建一个TypeT或者TypeT类型的临时对象，并用该临时对象作为参数调用闭包类型，这时才会实例化闭包类型中的函数调用运算符成员模板，该模板参数类型为TypeT或者TypeT。在推导返回类型的过程中，decltype(valueT(x))的结果为int或者int&，当尝试默认构造引用类型时就会失败，编译器转而寻求另一个版本的isValidImpl<>，这将使得isDefaultConstructible返回std::false_type类型的临时对象。\n\n19.4.4 编译基于SFINAE规则的类型特征模板（SFINAE-Friendly Traits）\n19.3.4节中的traits/plus2.hpp解决了T1和T2需要默认构造才能相加求和的问题，但是还存在+未定义的问题，例如对于如下代码：\ntemplate\nclass Array {\n    // ...\n};\n\n// declare + for arrays of different element types:\ntemplate\nArray::Type> operator+ (Array const&, Array const&);\n\nclass A {\n};\nclass B {\n};\n\nvoid addAB(Array arrayA, Array arrayB) {\n    auto sum = arrayA + arrayB; // ERROR: fails in instantiation of PlusResultT\n    // ...\n}\n\n在推导返回类型的过程中，如果A和B不能相加，则编译器会因为实例化PlusResultT::Type失败报错，因为此时是在实例化类成员的过程中，而不是在代换的过程中，所以SFINAE规则并不适用。原文：\n\nThe practical problem is not that this failure occurs with code that is clearly ill-formed like this (there is no way to add an array of A to an array of B) but that it occurs during template argument deduction for operator+, deep in the instantiation of PlusResultT.\n\n简单的解决办法是再实现一个重载版本：\n// declare generic + for arrays of different element types:\ntemplate\nArray::Type> operator+ (Array const&, Array const&);\n\n// overload + for concrete types:\nArray operator+(Array const& arrayA, Array const& arrayB);\n\nvoid addAB(Array const& arrayA, Array const& arrayB) {\n    auto sum = arrayA + arrayB; // ERROR?: depends on whether the compiler instantiates PlusResultT\n    // ...\n}\n\n但这还是可能报错，原因是虽然重载版本更为匹配，但是标准并没有规定此时是否需要实例化模板，如果实例化了，就有可能报错。原文：\n\nThis has a remarkable consequence: It means that the program may fail to compile even if we add a specific overload to adding A and B arrays, because C++ does not specify whether the types in a function template are actually instantiated if another overload would be better.\n\n为了解决这个问题，需要把所有可能的失败挪到代换相关上下文中，而不是在函数体或者类定义中：\n// traits/hasplus.hpp\n#include       // for declval\n#include   // for true_type, false_type, and void_t\n\n// primary template:\ntemplate>\nstruct HasPlusT : std::false_type\n{\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct HasPlusT() + std::declval())>> : std::true_type\n{\n};\n\n// traits/plus3.hpp\n#include \"hasplus.hpp\"\n\ntemplate::value>\nstruct PlusResultT { // primary template, used when HasPlusT yields true\n    using Type = decltype(std::declval() + std::declval());\n};\n\ntemplate\nstruct PlusResultT { // partial specialization, used otherwise\n};\n\n编译器推导返回类型时，会先实例化PlusResultT，如果第三个参数推导结果为true，则实例化主模板，代换顺利结束；否则实例化特化版本，由于特化版本没有Type成员，则函数模板的实例化以SFINAE规则结束。\n19.5 IsConvertibleT<>\n基于SFINAE规则的类型特征模板可以用来判断是否可以进行类型转换：\n// traits/isconvertible.hpp\n#include   // for true_type and false_type\n#include       // for declval\n\ntemplate\nstruct IsConvertibleHelper {\n    private:\n        // test() trying to call the helper aux(TO) for a FROM passed as F:\n        static void aux(TO);\n        template()))>\n            static std::true_type test(void*);\n        // test() fallback:\n        template\n            static std::false_type test(...);\n    public:\n        using Type = decltype(test(nullptr));\n};\n\ntemplate\nstruct IsConvertibleT : IsConvertibleHelper::Type {\n};\n\ntemplate\nusing IsConvertible = typename IsConvertibleT::Type;\n\ntemplate\nconstexpr bool isConvertible = IsConvertibleT::value;\n\n使用到的方法和19.4.1节中的类似。书中的代码有错误，调用test()时应该提供两个模板实参，这里是修改后的正确版本。\n一般来说是不能转换为数组类型和指针类型的，所以还需要如下特化：\ntemplate::value\n                                            || IsArrayT::value\n                                            || IsFunctionT::value>\nstruct IsConvertibleHelper {\n    using Type = std::integral_constant::value && IsVoidT::value>;\n};\n\ntemplate\nstruct IsConvertibleHelper {\n    // ... // previous implementation of IsConvertibleHelper here\n};\n\n19.6 侦测类成员\n基于SFINAE规则的模板还可以用来侦测某个类中是否定义了某个成员。\n19.6.1 侦测类型成员\n使用19.4.2节中偏特化的方法可以侦测类中是否定义了size_type类型：\n// traits/hassizetype.hpp\n#include  // defines true_type and false_type\n\n// helper to ignore any number of template parameters:\ntemplate using VoidT = void;\n\n// primary template:\ntemplate>\nstruct HasSizeTypeT : std::false_type\n{\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct HasSizeTypeT> : std::true_type\n{\n};\n\n19.6.2 侦测任意类型成员 \n为每个类型成员都定义上述的模板过于麻烦了，可以使用宏来简化：\n// traits/hastype.hpp\n#include  // for true_type, false_type, and void_t\n#define DEFINE_HAS_TYPE(MemType)                                    \\\n    template>                    \\\n    struct HasTypeT_##MemType                                       \\\n        : std::false_type { };                                      \\\n    template                                            \\\n    struct HasTypeT_##MemType>  \\\n        : std::true_type { } // ; intentionally skipped\n\n// traits/hastype.cpp\n#include \"hastype.hpp\"\n\n#include \n#include \n\nDEFINE_HAS_TYPE(value_type);\nDEFINE_HAS_TYPE(char_type);\n\nint main()\n{\n    std::cout ::value ::value_type: \"\n                >::value ::value ::value \n19.6.3 侦测非类型成员 \n用同样的方法也可以侦测类中的数据成员和成员函数：\n// traits/hasmember.hpp\n#include  // for true_type, false_type, and void_t\n\n#define DEFINE_HAS_MEMBER(Member)                                       \\\n    template>                        \\\n    struct HasMemberT_##Member                                          \\\n        : std::false_type { };                                          \\\n    template                                                \\\n    struct HasMemberT_##Member>    \\\n        : std::true_type { } // ; intentionally skipped\n\n// traits/hasmember.cpp\n#include \"hasmember.hpp\"\n#include \n#include \n#include \n\nDEFINE_HAS_MEMBER(size);\nDEFINE_HAS_MEMBER(first);\n\nint main()\n{\n    std::cout ::value ::size: \"\n                >::value ::first: \"\n                >::value \n上面的代码无法处理重载函数（可能是因为区分确定两个重载函数的地址），但是可以通过调用的方式来侦测：\n// traits/hasbegin.hpp\n#include       // for declval\n#include   // for true_type, false_type, and void_t\n\n// primary template:\ntemplate>\nstruct HasBeginT : std::false_type {\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct HasBeginT().begin())>>\n    : std::true_type {\n};\n\n同样的技巧也可以用于检测表达式：\n// traits/hasless.hpp\n#include       // for declval\n#include   // for true_type, false_type, and void_t\n\n// primary template:\ntemplate>\nstruct HasLessT : std::false_type\n{\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct HasLessT() ())>>\n    : std::true_type\n{\n};\n\n也可以用来检测多个条件：\n// traits/hasvarious.hpp\n#include       // for declval\n#include   // for true_type, false_type, and void_t\n\n// primary template:\ntemplate>\nstruct HasVariousT : std::false_type\n{\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct HasVariousT().begin()),\n                                    typename T::difference_type,\n                                    typename T::iterator>>\n    : std::true_type\n{\n};\n\n19.6.4 使用泛型lambda表达式侦测类型成员\n和19.6.2节中使用宏定义模板最相近的方法是使用19.4.3节中的isValid()：\n// traits/isvalid1.cpp\n#include \"isvalid.hpp\"\n#include \n#include \n#include \n\nint main()\n{\n    using namespace std;\n    cout  decltype((void)valueT(x).first) {\n                    });\n    cout >)  typename decltype(valueT(x))::size_type {\n                    });\n\n    struct CX {\n        using size_type = std::size_t;\n    };\n    cout ) )) {\n        cout  decltype(valueT(x) ) , type) , type) , \"hello\") \n编译试了下，必须要添加编译选项-std=c++17，同时hasLess(42, type)和hasLess(type, \"hello\")结果为false，这是因为以42和hello作为参数调用valueT()时无法进行推导。\n也可以通过std::declval来实现上述类型特征模板（原理上都是产生某种类型的临时对象）：\n// traits/isvalid2.cpp\n#include \"isvalid.hpp\"\n#include \n#include \n#include \n\nconstexpr auto hasFirst\n    = isValid([](auto&& x) -> decltype((void)&x.first) {\n                });\ntemplate\nusing HasFirstT = decltype(hasFirst(std::declval()));\n\nconstexpr auto hasSizeType\n    = isValid([](auto&& x) -> typename std::decay_t::size_type {\n                });\ntemplate\nusing HasSizeTypeT = decltype(hasSizeType(std::declval()));\n\nconstexpr auto hasLess\n    = isValid([](auto&& x, auto&& y) -> decltype(x \nusing HasLessT = decltype(hasLess(std::declval(), std::declval()));\n\nint main()\n{\n    using namespace std;\n    cout >::value ::value ::value ::value ::value ::value ::value \n19.7 其它类型特征模板\n19.7.1 分支型模板\n根据某种条件实例化主模板或者特化的模板称为分支模板，可以统一写为下面的形式：\n// traits/ifthenelse.hpp\n#ifndef IFTHENELSE_HPP\n#define IFTHENELSE_HPP\n\n// primary template: yield the second argument by default and rely on\n// a partial specialization to yield the third argument\n// if COND is false\ntemplate\nstruct IfThenElseT {\n    using Type = TrueType;\n};\n\n// partial specialization: false yields third argument\ntemplate\nstruct IfThenElseT {\n    using Type = FalseType;\n};\n\ntemplate\nusing IfThenElse = typename IfThenElseT::Type;\n#endif // IFTHENELSE_HPP\n\n下面是一个利用分支模板选择容纳N的最小整型的例子：\n// traits/smallestint.hpp\n#include \n#include \"ifthenelse.hpp\"\n\ntemplate\nstruct SmallestIntT {\n    using Type =\n        typename IfThenElseT::max(), char,\n            typename IfThenElseT::max(), short,\n                typename IfThenElseT::max(), int,\n                    typename IfThenElseT::max(), long,\n                        typename IfThenElseT::max(),\n                                                long long, // then\n                                                void // fallback\n                                            >::Type\n                                        >::Type\n                                    >::Type\n                                >::Type\n                            >::Type;\n};\n\n如果想要获取某种整型的无符号类型，可以将模板写为下面的形式：\n// yield T when using member Type:\ntemplate\nstruct IdentityT {\n    using Type = T;\n};\n\n// to make unsigned after IfThenElse was evaluated:\ntemplate\nstruct MakeUnsignedT {\n    using Type = typename std::make_unsigned::type;\n};\n\ntemplate\nstruct UnsignedT {\n    using Type = typename IfThenElse::value && !std::is_same::value,\n                                        MakeUnsignedT,\n                                        IdentityT\n                                    >::Type;\n};\n\n19.7.2 侦测不抛出异常的成员\n如果要判断某操作是否会抛出异常，例如移动构造函数是否会抛出异常，可以使用下面的模板：\n// traits/isnothrowmoveconstructible1.hpp\n#include       // for declval\n#include   // for bool_constant\n\ntemplate\nstruct IsNothrowMoveConstructibleT\n    : std::bool_constant()))>\n{\n};\n\n如果T类型没有移动构造函数（或者拷贝构造函数），则表达式T(std::declval())是非法的，也就无法进行编译。借鉴19.6.3中的方法，可以在侦测移动是否抛出异常之前侦测是否可以移动：\n// traits/isnothrowmoveconstructible2.hpp\n#include       // for declval\n#include   // for true_type, false_type, and bool_constant<>\n\n// primary template:\ntemplate>\nstruct IsNothrowMoveConstructibleT : std::false_type\n{\n};\n\n// partial specialization (may be SFINAE’d away):\ntemplate\nstruct IsNothrowMoveConstructibleT()))>>\n    : std::bool_constant()))>\n{\n};\n\n19.7.3 类型特征模板的缺点\n类型特征模板起作用的原因是定义了类型成员Type，所以不得不显示的写出::Type来获取类型特征，为了简便可以使用别名模板来代替：\ntemplate\nusing RemoveCV = typename RemoveCVT::Type;\n\ntemplate\nusing RemoveReference = typename RemoveReferenceT::Type;\n\ntemplate\nusing PlusResult = typename PlusResultT::Type;\n\n对于值特征，也需要显示写出::value，为了简便可以使用变量模板来代替：\ntemplate\nconstexpr bool IsSame = IsSameT::value;\n\ntemplate\nconstexpr bool IsConvertible = IsConvertibleT::value;\n\n19.8 类型分类\n类型特征模板也可以用来判断类型是内置类型、指针类型还是类类型。\n19.8.1 判断内置类型\n内置类型数量较少，可以通过穷举的方式提供所有的特化版本：\n// traits/isfunda.hpp\n#include       // for nullptr_t\n#include   // for true_type, false_type, and bool_constant<>\n\n// primary template: in general T is not a fundamental type\ntemplate\nstruct IsFundaT : std::false_type {\n};\n\n// macro to specialize for fundamental types\n#define MK_FUNDA_TYPE(T)                               \\\n    template<> struct IsFundaT : std::true_type {    \\\n    };\n\nMK_FUNDA_TYPE(void)\nMK_FUNDA_TYPE(bool)\nMK_FUNDA_TYPE(char)\nMK_FUNDA_TYPE(signed char)\nMK_FUNDA_TYPE(unsigned char)\nMK_FUNDA_TYPE(wchar_t)\nMK_FUNDA_TYPE(char16_t)\nMK_FUNDA_TYPE(char32_t)\n\nMK_FUNDA_TYPE(signed short)\nMK_FUNDA_TYPE(unsigned short)\nMK_FUNDA_TYPE(signed int)\nMK_FUNDA_TYPE(unsigned int)\nMK_FUNDA_TYPE(signed long)\nMK_FUNDA_TYPE(unsigned long)\nMK_FUNDA_TYPE(signed long long)\nMK_FUNDA_TYPE(unsigned long long)\n\nMK_FUNDA_TYPE(float)\nMK_FUNDA_TYPE(double)\nMK_FUNDA_TYPE(long double)\n\nMK_FUNDA_TYPE(std::nullptr_t)\n\n#undef MK_FUNDA_TYPE\n\n// traits/isfundatest.cpp\n#include \"isfunda.hpp\"\n#include \n\ntemplate\nvoid test (T const&)\n{\n    if (IsFundaT::value) {\n        std::cout \n19.8.2 判断复合类型\n这里的复合类型是指指针类型、引用类型、成员指针类型和数组类型：\n指针类型\n// traits/ispointer.hpp\ntemplate\nstruct IsPointerT : std::false_type {       // primary template: by default not a pointer\n};\n\ntemplate\nstruct IsPointerT : std::true_type {    // partial specialization for pointers\n    using BaseT = T; // type pointing to\n};\n\n引用类型\n// traits/islvaluereference.hpp\ntemplate\nstruct IsLValueReferenceT : std::false_type {       // by default no lvalue reference\n};\n\ntemplate\nstruct IsLValueReferenceT : std::true_type {    // unless T is lvalue references\n    using BaseT = T; // type referring to\n};\n\n// traits/isrvaluereference.hpp\ntemplate\nstruct IsRValueReferenceT : std::false_type {       // by default no rvalue reference\n};\n\ntemplate\nstruct IsRValueReferenceT : std::true_type {   // unless T is rvalue reference\n    using BaseT = T; // type referring to\n};\n\n// traits/isreference.hpp\n#include \"islvaluereference.hpp\"\n#include \"isrvaluereference.hpp\"\n#include \"ifthenelse.hpp\"\n\ntemplate\nclass IsReferenceT\n    : public IfThenElseT::value,\n                            IsLValueReferenceT,\n                            IsRValueReferenceT\n                            >::Type {\n};\n\n数组类型\n// traits/isarray.hpp\n#include \n\ntemplate\nstruct IsArrayT : std::false_type {         // primary template: not an array\n};\n\ntemplate\nstruct IsArrayT : std::true_type {    // partial specialization for arrays\n    using BaseT = T;\n    static constexpr std::size_t size = N;\n};\n\ntemplate\nstruct IsArrayT : std::true_type {     // partial specialization for unbound arrays\n    using BaseT = T;\n    static constexpr std::size_t size = 0;\n};\n\n成员指针类型\n// traits/ispointertomember.hpp\ntemplate\nstruct IsPointerToMemberT : std::false_type {           // by default no pointer-to-member\n};\n\ntemplate\nstruct IsPointerToMemberT : std::true_type {    // partial specialization\n    using MemberT = T;\n    using ClassT = C;\n};\n\n19.8.3 识别函数类型\n函数可能包含任意数量的参数，为此需要为类型特征模板提供一个参数包：\n// traits/isfunction.hpp\n#include \"../typelist/typelist.hpp\"\n\ntemplate\nstruct IsFunctionT : std::false_type {                      // primary template: no function\n};\n\ntemplate\nstruct IsFunctionT : std::true_type {        // functions\n    using Type = R;\n    using ParamsT = Typelist;\n    static constexpr bool variadic = false;\n};\n\ntemplate\nstruct IsFunctionT : std::true_type {   // variadic functions\n    using Type = R;\n    using ParamsT = Typelist;\n    static constexpr bool variadic = true;\n};\n\n如果要处理const、volatile和引用等修饰符，还需要很多特化版本，具体见书。\n19.8.4 判断类类型\n类中一般都包含成员，所以可以通过成员指针来判断类类型：\n// traits/isclass.hpp\n#include \n\ntemplate>\nstruct IsClassT : std::false_type {         // primary template: by default no class\n};\n\ntemplate\nstruct IsClassT>   // classes can have pointer-to-member\n    : std::true_type {\n};\n\n19.8.5 判断枚举类型 \n书中的是“非其它”的实现方式：\n// traits/isenum.hpp\ntemplate\nstruct IsEnumT {\n    static constexpr bool value = !IsFundaT::value &&\n                                    !IsPointerT::value &&\n                                    !IsReferenceT::value &&\n                                    !IsArrayT::value &&\n                                    !IsPointerToMemberT::value &&\n                                    !IsFunctionT::value &&\n                                    !IsClassT::value;\n};\n\n19.9 提取策略的类型特征模板\n19.9.1 传递只读类型的参数\n向函数传递只读类型的参数有两种方法，分别为传值和传常量引用，可以通过下面类型特征模板简单判断哪种方式开销更小：\n// traits/rparam.hpp\n#ifndef RPARAM_HPP\n#define RPARAM_HPP\n\n#include \"ifthenelse.hpp\"\n#include \ntemplate\nstruct RParam {\n    using Type\n        = IfThenElse::value\n                            && std::is_trivially_move_constructible::value),\n                        T,\n                        T const&>;\n};\n\n#endif // RPARAM_HPP\n\n使用方式如下：\n// traits/rparamcls.hpp\n#include \"rparam.hpp\"\n#include \n\nclass MyClass1 {\n    public:\n        MyClass1 () {\n        }\n        MyClass1 (MyClass1 const&) {\n            std::cout  by value\ntemplate<>\nclass RParam {\n    public:\n        using Type = MyClass2;\n};\n\n// traits/rparam1.cpp\n#include \"rparam.hpp\"\n#include \"rparamcls.hpp\"\n\n// function that allows parameter passing by value or by reference\ntemplate\nvoid foo (typename RParam::Type p1, typename RParam::Type p2)\n{\n    // ...\n}\nint main()\n{\n    MyClass1 mc1;\n    MyClass2 mc2;\n    foo(mc1,mc2);\n}\n\n但是不便之处在于编译器无法进行类型推导了，这是因为RParam::Type不是可推导的上下文，但是可以通过包装器（wrapper）包装一下：\n// traits/rparam2.cpp\n#include \"rparam.hpp\"\n#include \"rparamcls.hpp\"\n\n// function that allows parameter passing by value or by reference\ntemplate\nvoid foo_core (typename RParam::Type p1, typename RParam::Type p2)\n{\n    // ...\n}\n\n// wrapper to avoid explicit template parameter passing\ntemplate\nvoid foo (T1 && p1, T2 && p2)\n{\n    foo_core(std::forward(p1),std::forward(p2));\n}\n\nint main()\n{\n    MyClass1 mc1;\n    MyClass2 mc2;\n    foo(mc1,mc2); // same as foo_core(mc1,mc2)\n}\n\n19.10 标准库中的类型特征模板\n19.8.5节中的判断枚举类型的模板不太容易直接实现，类似的还有标准库中的std::is_union模板，为此编译器提供了一些支持。\n19.11 后记\n附录D中介绍了标准库中类型特征模板。\n"},"2022-03-02-ch20-overloading-on-type-properties.html":{"url":"2022-03-02-ch20-overloading-on-type-properties.html","title":"Chapter 20 Overloading on Type Properties","keywords":"","body":"20 基于类型属性的重载\n20.1 算法特化\n算法特化（algorithm specialization）是为某种特定类型设计的算法，通常比泛型算法性能高。在定义了特化的算法后，一般只需借助重载解析规则便可以自动调用特化的算法，例如：\ntemplate\nvoid swap(T& x, T& y)\n{\n    T tmp(x);\n    x = y;\n    y = tmp;\n}\n\ntemplate\nvoid swap(Array& x, Array& y)\n{\n    swap(x.ptr, y.ptr);\n    swap(x.len, y.len);\n}\n\n但也不是所有的特化算法都可以简单的转换为函数模板，例如下面的迭代器前进的例子：\ntemplate\nvoid advanceIter(InputIterator& x, Distance n)\n{\n    while (n > 0) { // linear time\n        ++x;\n        --n;\n    }\n}\n\ntemplate\nvoid advanceIter(RandomAccessIterator& x, Distance n) {\n    x += n; // constant time\n}\n\n两个advanceIter()模板只有模板参数名字不同，编译器将无法解析。\n20.2 通过标签实现函数模板的分发 \n引入迭代器标签后就可以正确解析了：\ntemplate\nvoid advanceIterImpl(Iterator& x, Distance n, std::input_iterator_tag)\n{\n    while (n > 0) { // linear time\n        ++x;\n        --n;\n    }\n}\n\ntemplate\nvoid advanceIterImpl(Iterator& x, Distance n, std::random_access_iterator_tag) {\n    x += n; // constant time\n}\n\ntemplate\nvoid advanceIter(Iterator& x, Distance n)\n{\n    advanceIterImpl(x, n, typename std::iterator_traits::iterator_category());\n}\n\n标准库中迭代器的分类如下：\nnamespace std {\n    struct input_iterator_tag { };\n    struct output_iterator_tag { };\n    struct forward_iterator_tag : public input_iterator_tag { };\n    struct bidirectional_iterator_tag : public forward_iterator_tag { };\n    struct random_access_iterator_tag : public bidirectional_iterator_tag { };\n}\n\n20.3 启用和禁用函数模板\n通过EnableIf<>可以实现启用和禁用函数模板，原理依然是SFINAE规则：\n// typeoverload/enableif.hpp\ntemplate\nstruct EnableIfT {\n};\n\ntemplate\nstruct EnableIfT {\n    using Type = T;\n};\n\ntemplate\nusing EnableIf = typename EnableIfT::Type;\n\ntemplate\nconstexpr bool IsRandomAccessIterator =\n    IsConvertible::iterator_category,\n                    std::random_access_iterator_tag>;\n\ntemplate\nEnableIf>\nadvanceIter(Iterator& x, Distance n) {\n    x += n; // constant time\n}\n\ntemplate\nEnableIf>\nadvanceIter(Iterator& x, Distance n)\n{\n    while (n > 0) { // linear time\n        ++x;\n        --n;\n    }\n}\n\n注意同时也要禁用其它重载函数，否则会导致模糊调用。\n20.3.1 多条件下的算法特化\n有些迭代器还可以后退，所以现在的需求变成了：\n\n对于随机访问迭代器，可以在常量时间内前进和后退\n对于双向迭代器，可以在线性时间内前进和后退\n对于输入迭代器，只能在线性时间内前进\n\n// typeoverload/advance2.hpp\n#include \n\n// implementation for random access iterators:\ntemplate\nEnableIf>\nadvanceIter(Iterator& x, Distance n) {\n    x += n; // constant time\n}\n\ntemplate\nconstexpr bool IsBidirectionalIterator =\n    IsConvertible::iterator_category,\n                    std::bidirectional_iterator_tag>;\n\n// implementation for bidirectional iterators:\ntemplate\nEnableIf && !IsRandomAccessIterator>\nadvanceIter(Iterator& x, Distance n) {\n    if (n > 0) {\n        for ( ; n > 0; ++x, --n) {  // linear time\n        }\n    } else {\n        for ( ; n \nEnableIf>\nadvanceIter(Iterator& x, Distance n) {\n    if (n  0) { // linear time\n        ++x;\n        --n;\n    }\n}\n\n20.3.2 将EnableIf作为默认模板参数 \nEnableIf<>一般写在函数模板的返回类型处，对于没有返回类型的函数，EnableIf<>可以作为默认的模板实参：\n// typeoverload/container1.hpp\n#include \n#include \"enableif.hpp\"\n#include \"isconvertible.hpp\"\n\ntemplate\nconstexpr bool IsInputIterator =\n    IsConvertible::iterator_category,\n                    std::input_iterator_tag>;\n\ntemplate\nclass Container {\n    public:\n        // construct from an input iterator sequence:\n        template>>\n        Container(Iterator first, Iterator last);\n\n        // convert to a container so long as the value types are convertible:\n        template>>\n        operator Container() const;\n};\n\n20.3.3 编译时if\n借助C++17的编译时if可以避免使用EnableIf<>：\n// typeoverload/advance3.hpp\ntemplate\nvoid advanceIter(Iterator& x, Distance n) {\n    if constexpr(IsRandomAccessIterator) {\n        // implementation for random access iterators:\n        x += n;                         // constant time\n    }\n    else if constexpr(IsBidirectionalIterator) {\n        // implementation for bidirectional iterators:\n        if (n > 0) {\n            for ( ; n > 0; ++x, --n) {  // linear time for positive n\n            }\n        } else {\n            for ( ; n  0) {                 // linear time for positive n only\n            ++x;\n            --n;\n        }\n    }\n}\n\n20.3.4 Concepts\n使用concept可以最简单的实现启用和禁用模板，但可惜的是还没有支持：\n// typeoverload/container4.hpp\ntemplate\nclass Container {\n    public:\n        // construct from an input iterator sequence:\n        template\n        requires IsInputIterator\n        Container(Iterator first, Iterator last);\n\n        // construct from a random access iterator sequence:\n        template\n        requires IsRandomAccessIterator\n        Container(Iterator first, Iterator last);\n\n        // convert to a container so long as the value types are convertible:\n        template\n        requires IsConvertible\n        operator Container() const;\n};\n\n20.4 基于类型属性的类模板特化\n20.4.1 启用和禁用特化的类模板\n和20.3.2一样，可以通过引入默认模板参数来匹配特化的类模板，本节中以实现一个字典为例：\ntemplate\nclass Dictionary\n{\n    private:\n        vector> data;\n    public:\n        // subscripted access to the data:\n        value& operator[](Key const& key)\n        {\n            // search for the element with this key:\n            for (auto& element : data) {\n                if (element.first == key) {\n                    return element.second;\n                }\n            }\n\n            // there is no element with this key; add one\n            data.push_back(pair(key, Value()));\n            return data.back().second;\n        }\n        // ...\n};\n\ntemplate\nclass Dictionary && !HasHash>>\n{\n    private:\n        map data;\n    public:\n        value& operator[](Key const& key) {\n            return data[key];\n        }\n        // ...\n};\n\ntemplate\nclass Dictionary>>\n{\n    private:\n        unordered_map data;\n    public:\n        value& operator[](Key const& key) {\n            return data[key];\n        }\n        // ...\n};\n\n20.4.2 通过标签匹配类模板\nadvanceIter()也可以借助类模板实现：\n// primary template (intentionally undefined):\ntemplate::iterator_category,\n                                std::input_iterator_tag,\n                                std::bidirectional_iterator_tag,\n                                std::random_access_iterator_tag>>\nclass Advance;\n\n// general, linear-time implementation for input iterators:\ntemplate\nclass Advance\n{\n    public:\n        using DifferenceType = typename std::iterator_traits::difference_type;\n        void operator() (Iterator& x, DifferenceType n) const\n        {\n            while (n > 0) {\n                ++x;\n                --n;\n            }\n        }\n};\n\n// bidirectional, linear-time algorithm for bidirectional iterators:\ntemplate\nclass Advance\n{\n    public:\n        using DifferenceType = typename std::iterator_traits::difference_type;\n        void operator() (Iterator& x, DifferenceType n) const\n        {\n            if (n > 0) {\n                while (n > 0) {\n                    ++x;\n                    --n;\n                }\n            } else {\n                while (n \nclass Advance\n{\n    public:\n        using DifferenceType = typename std::iterator_traits::difference_type;\n        void operator() (Iterator& x, DifferenceType n) const\n        {\n            x += n;\n        }\n}\n\nBestMatchInSet<>的功能为找到最匹配的类型，这可以借助函数的重载机制：\n// construct a set of match() overloads for the types in Types...:\ntemplate\nstruct MatchOverloads;\n\n// basis case: nothing matched:\ntemplate<>\nstruct MatchOverloads<> {\n    static void match(...);\n};\n\n// recursive case: introduce a new match() overload:\ntemplate\nstruct MatchOverloads : public MatchOverloads {\n    static T1 match(T1);                    // introduce overload for T1\n    using MatchOverloads::match;   // collect overloads from bases\n};\n\n// find the best match for T in Types...:\ntemplate\nstruct BestMatchInSetT {\n    using Type = decltype(MatchOverloads::match(declval()));\n};\n\ntemplate\nusing BestMatchInSet = typename BestMatchInSetT::Type;\n\nMatchOverloads<>通过递归的方式重载了多个match()，每个函数接受不同类型的参数。当在decltype对match()调用进行推导的过程中，就可以实现最佳匹配。个人认为实例化的过程应该为：\n\n实例化BestMatchInSet<>触发实例化BestMatchInSetT<>\n实例化BestMatchInSetT<>时会检查Type的定义，这会触发decltype中的推导，从而触发实例化MatchOverloads\n实例化MatchOverloads会递归实例化基类，然后在每个基类中定义match()，并在派生类中拉取基类的match()\n回到第2步，decltype中的推导会根据重载解析规则选择最匹配的match()，最终推导出BestMatchInSet<>::Type的类型\n回到第1步，引用BestMatchInSetT::Type得到最终结果\n\n书中关于这一部分的解释：\n\nThe MatchOverloads template uses recursive inheritance to declare a match() function with each type in the input set of Types.\nEach instantiation of the recursive MatchOverloads partial specialization introduces a new match() function for the next type in the list. It then employs a using declaration to pull in the match() function(s) defined in its base class, which handles the remaining types in the list. When applied recursively, the result is a complete set of match() overloads corresponding to the given types, each of which returns its parameter type. \nThe BestMatchInSetT template then passes a T object to this set of overloaded match() functions and produces the return type of the selected (best) match() function. If none of the functions matches, the void returning basis case (which uses an ellipsis to capture any argument) indicates failure.\nTo summarize, BestMatchInSetT translates a function-overloading result into a trait and makes it relatively easy to use tag dispatching to select among class template partial specializations.\n\n20.5 可安全实例化的模板\n如果将每一个模板参数都使用EnableIf进行限制，则当模板代换失败时SFINAE规则会起作用，不会导致编译失败，这样的模板称为可安全实例化的模板（instantiation-safe templates）。下面的代码不是可安全实例化的，因为无法保证类型T支持运算符，也无法保证结果可以转换为bool：\ntemplate\nT const& min(T const& x, T const& y)\n{\n    if (y \n为了保证类型T支持运算符，需要实现LessResultT<>：\n// typeoverload/lessresult.hpp\n#include       // for declval()\n#include   // for true_type and false_type\n\ntemplate\nclass HasLess {\n    template struct Identity;\n    template static std::true_type\n        test(Identity() ())>*);\n    template static std::false_type\n        test(...);\n    public:\n        static constexpr bool value = decltype(test(nullptr))::value;\n};\n\ntemplate\nclass LessResultImpl {\n    public:\n        using Type = decltype(std::declval() ());\n};\n\ntemplate\nclass LessResultImpl {\n};\n\ntemplate\nclass LessResultT\n    : public LessResultImpl::value> {\n};\n\ntemplate\nusing LessResult = typename LessResultT::Type;\n\n并改进min()的定义：\n// typeoverload/min2.hpp\n#include \"isconvertible.hpp\"\n#include \"lessresult.hpp\"\n\ntemplate\nEnableIf, bool>, T const&>\nmin(T const& x, T const& y)\n{\n    if (y \n测试代码：\n// typeoverload/min.cpp\n#include \"min.hpp\"\n\nstruct X1 { };\nbool operator\nX3报错的原因在于运算符不能比较两个临时对象，X4报错的原因在于没有匹配的运算符，X6报错的原因在于NotBoolConvertible不能隐式转换为bool类型。\n最有意思的是X7。explicit修饰的类型转换只在条件表达式、逻辑运算符和条件运算符? :中可以作为隐式转换，称为特定语境下的类型转换（contextually converted），而IsConvertible<>是借助decltype中的函数调用判断是否可以进行转换的，所以X7中的类型转换不起作用，为此需要引入IsContextualBoolT<>：\n// typeoverload/iscontextualbool.hpp\n#include       // for declval()\n#include   // for true_type and false_type\n\ntemplate\nclass IsContextualBoolT {\n    private:\n        template struct Identity;\n        template static std::true_type\n            test(Identity() ? 0 : 1)>*);\n        template static std::false_type\n            test(...);\n    public:\n        static constexpr bool value = decltype(test(nullptr))::value;\n};\ntemplate\nconstexpr bool IsContextualBool = IsContextualBoolT::value;\n\n// typeoverload/min3.hpp\n#include \"iscontextualbool.hpp\"\n#include \"lessresult.hpp\"\n\ntemplate\nEnableIf>, T const&>\nmin(T const& x, T const& y)\n{\n    if (y \n20.6 标准库中基于类型属性的重载\n除了20.2中已经提到的迭代器分类外，标准库中基于类型属性的重载还包括：\n\n以某些类型调用std::copy时最终会调用std::memcpy或者std::memmove\n以某些类型调用std::fill时最终会调用std::memset\n避免调用平凡的析构函数\n\n《STL源码剖析》一书中介绍了大量有关这部分的内容。\n20.7 后记\n"},"2022-03-03-ch21-templates-and-inheritance.html":{"url":"2022-03-03-ch21-templates-and-inheritance.html","title":"Chapter 21 Templates and Inheritance","keywords":"","body":"21 模板和继承\n21.1 空基类优化\n只包含类型成员、非虚成员函数和静态数据成员的类型为空类型，但是所占内存大小并不为0：\n// inherit/empty.cpp\n#include \n\nclass EmptyClass {\n};\n\nint main()\n{\n    std::cout \n在我的机器上输出为：\nsizeof(EmptyClass): 1\n\n21.1.1 空基类的布局\n空基类优化（Empty Base Class Optimization，EBCO）是指当同一类型的对象（也包括派生类对象）不会被分配到同一起始地址时可以不为空基类分配额外的空间。原文：\n\nEven though there are no zero-size types in C++, the C++ standard does specify that when an empty class is used as a base class, no space needs to be allocated for it provided that it does not cause it to be allocated to the same address as another object or subobject of the same type.\n\n看一个例子：\n// inherit/ebco1.cpp\n#include \nclass Empty {\n    using Int = int; // type alias members don’t make a class nonempty\n};\n\nclass EmptyToo : public Empty {\n};\n\nclass EmptyThree : public EmptyToo {\n};\nint main()\n{\n    std::cout \n如果编译器实现了空基类优化，则输出相同（但是不为0）；否则不同，在我的机器上输出为：\nsizeof(Empty):      1\nsizeof(EmptyToo):   1\nsizeof(EmptyThree): 1\n\n还有一个例子：\n// inherit/ebco2.cpp\n#include \n\nclass Empty {\n    using Int = int; // type alias members don’t make a class nonempty\n};\n\nclass EmptyToo : public Empty {\n};\nclass NonEmpty : public Empty, public EmptyToo {\n};\n\nint main()\n{\n    std::cout \n在我的机器上输出为：\nsizeof(Empty):      1\nsizeof(EmptyToo):   1\nsizeof(EmptyThree): 2\n\n21.1.2 将成员作为基类\n书中给了一种将模板实参和数据成员绑定在一起的方法，但是没想明白代码的使用场景：\ntemplate\nclass Optimizable {\n    private:\n        BaseMemberPair info_and_storage;\n        // ...\n};\n\n// inherit/basememberpair.hpp\n#ifndef BASE_MEMBER_PAIR_HPP\n#define BASE_MEMBER_PAIR_HPP\n\ntemplate\nclass BaseMemberPair : private Base {\n    private:\n        Member mem;\n    public:\n        // constructor\n        BaseMemberPair (Base const & b, Member const & m)\n            : Base(b), mem(m) {\n        }\n\n        // access base class data via first()\n        Base const& base() const {\n            return static_cast(*this);\n        }\n        Base& base() {\n            return static_cast(*this);\n        }\n\n        // access member data via second()\n        Member const& member() const {\n            return this->mem;\n        }\n        Member& member() {\n            return this->mem;\n        }\n};\n#endif // BASE_MEMBER_PAIR_HPP\n\n21.2 奇异递归模板模式\n奇异递归模板模式（Curiously Recurring Template Pattern，CRTP）是指将派生类作为模板参数传递到基类中来为派生类提供一些功能，这样可以在避免使用虚函数的情况下实现多态。例如利用这种方式可以实现对象计数：\n// inherit/objectcounter.hpp\n#include \n\ntemplate\nclass ObjectCounter {\n    private:\n        inline static std::size_t count = 0; // number of existing objects\n    protected:\n        // default constructor\n        ObjectCounter() {\n            ++count;\n        }\n\n        // copy constructor\n        ObjectCounter (ObjectCounter const&) {\n            ++count;\n        }\n\n        // move constructor\n        ObjectCounter (ObjectCounter &&) {\n            ++count;\n        }\n\n        // destructor\n        ~ObjectCounter() {\n            --count;\n        }\n    public:\n        // return number of existing objects:\n        static std::size_t live() {\n            return count;\n        }\n};\n\n// inherit/countertest.cpp\n#include \"objectcounter.hpp\"\n#include \n\ntemplate\nclass MyString : public ObjectCounter> {\n    // ...\n};\n\nint main()\n{\n    MyString s1, s2;\n    MyString ws;\n    std::cout : \"\n        ::live() : \"\n        \n21.2.1 巴顿-诺克曼技巧\n早期C++无法对函数模板进行重载，巴顿-诺克曼技巧通过将函数模板实现为友元来用来解决这个问题：\ntemplate\nclass Array {\n        static bool areEqual(Array const& a, Array const& b);\n    public:\n        // ...\n        friend bool operator== (Array const& a, Array const& b) {\n            return areEqual(a, b);\n        }\n};\n\n例如实例化Array时，实例化后的友元函数存在于全局命名空间中，可以访问Array的protected和private成员，同时只是一个普通的函数，可以被重载。在C++支持函数模板重载后，这个“注入到全局命名空间”的技巧不适用了。现代C++中的名称查找是基于ADL规则的：\n// inherit/wrapper.cpp\nclass S {\n};\n\ntemplate\nclass Wrapper {\n    private:\n        T object;\n    public:\n        Wrapper(T obj) : object(obj) { // implicit conversion from T to Wrapper\n        }\n        friend void foo(Wrapper const&) {\n        }\n};\n\nint main()\n{\n    S s;\n    Wrapper w(s);\n    foo(w);     // OK: Wrapper is a class associated with w\n    foo(s);     // ERROR: Wrapper is not associated with s\n}\n\nw关联的类是Wrapper，其中定义了foo()，而s关联的类是S，没有定义foo()。\n21.2.2 通过CRTP实现关系运算符\n实现关系运算符时，一般会只实现==和，!=、、>和>=都通过组合来实现。如果很多类型都有这种需求，则可以泛化为模板：\ntemplate\nbool operator!= (T const& x1, T const& x2) {\n    return !(x1 == x2);\n}\n\n但是这个模板太通用了，可以挪到基类中然后通过CRTP为特定的派生类所用：\n// inherit/equalitycomparable.cpp\ntemplate\nclass EqualityComparable\n{\n    public:\n        friend bool operator!= (Derived const& x1, Derived const& x2) {\n            return !(x1 == x2);\n        }\n};\n\nclass X : public EqualityComparable\n{\n    public:\n        friend bool operator== (X const& x1, X const& x2) {\n            // implement logic for comparing two objects of type X\n        }\n};\n\nint main()\n{\n    X x1, x2;\n    if (x1 != x2) { }\n}\n\n21.2.3 外观模式\n外观模式中的基类定义了大量或者全部的接口，这些接口借助派生类的接口实现。外观模式可以通过CRTP实现，本节中给出了一个迭代器外观类的例子：\n// inherit/iteratorfacadeskel.hpp\ntemplate\nclass IteratorFacade\n{\n    public:\n        using value_type = typename std::remove_const::type;502 Chapter 21: Templates and Inheritance\n        using reference = Reference;\n        using pointer = Value*;\n        using difference_type = Distance;\n        using iterator_category = Category;\n\n        // input iterator interface:\n        reference operator *() const { ... }\n        pointer operator ->() const { ... }\n        Derived& operator ++() { ... }\n        Derived operator ++(int) { ... }\n        friend bool operator== (IteratorFacade const& lhs,\n        IteratorFacade const& rhs) { ... }\n        // ...\n\n        // bidirectional iterator interface:\n        Derived& operator --() { ... }\n        Derived operator --(int) { ... }\n\n        // random access iterator interface:\n        reference operator [](difference_type n) const { ... }\n        Derived& operator +=(difference_type n) { ... }\n        // ...\n        friend difference_type operator -(IteratorFacade const& lhs, IteratorFacade const& rhs) { ... }\n        friend bool operator \n用户代码调用IteratorFacade<>中的各种运算符，而这些运算符调用派生类的接口实现：\n\n所有迭代器应该都支持dereference()、increment()和equals()\n双向迭代器应该支持decrement()\n随机访问迭代器应该支持advance()和measureDistance()\n\nIteratorFacade<>通过下面的方式调用派生类中的实现：\nDerived& asDerived() { return *static_cast(this); }\n\nDerived const& asDerived() const {\n    return *static_cast(this);\n}\n\nreference operator*() const {\n    return asDerived().dereference();\n}\n\nDerived& operator++() {\n    asDerived().increment();\n    return asDerived();\n}\n\nDerived operator++(int) {\n    Derived result(asDerived());\n    asDerived().increment();\n    return result;\n}\n\nfriend bool operator== (IteratorFacade const& lhs, IteratorFacade const& rhs) {\n    return lhs.asDerived().equals(rhs.asDerived());\n}\n\n链表迭代器\n基于IteratorFacade<>的链表迭代器如下所示：\n// inherit/listnode.hpp\ntemplate\nclass ListNode\n{\n    public:\n        T value;\n        ListNode* next = nullptr;\n        ~ListNode() { delete next; }\n};\n\n// inherit/listnodeiterator0.hpp\ntemplate\nclass ListNodeIterator\n    : public IteratorFacade, T, std::forward_iterator_tag>\n{\n        ListNode* current = nullptr;\n    public:\n        T& dereference() const {\n            return current->value;\n        }\n        void increment() {\n            current = current->next;\n        }\n        bool equals(ListNodeIterator const& other) const {\n            return current == other.current;\n        }\n        ListNodeIterator(ListNode* current = nullptr) : current(current) { }\n};\n\n接口隐藏\n在基类中调用派生类对象的接口要求派生类中的实现是public的，为此可以定义访问类IteratorFacadeAccess，然后在ListNodeIterator中将IteratorFacadeAccess定义为友元来解决这个问题：\n// inherit/iteratorfacadeaccessskel.hpp\n// ‘friend’ this class to allow IteratorFacade access to core iterator operations:\nclass IteratorFacadeAccess\n{\n    // only IteratorFacade can use these definitions\n    template\n        friend class IteratorFacade;\n\n    // required of all iterators:\n    template\n    static Reference dereference(Iterator const& i) {\n        return i.dereference();\n    }\n    // ...\n    // required of bidirectional iterators:\n    template\n    static void decrement(Iterator& i) {\n        return i.decrement();\n    }\n\n    // required of random-access iterators:\n    template\n    static void advance(Iterator& i, Distance n) {\n        return i.advance(n);\n    }\n    // ...\n};\n\n迭代器适配器\n有了IteratorFacade<>后可以很容易的将构建迭代器适配器，例如通过对象的迭代器构建成员的迭代器：\n// inherit/person.hpp\nstruct Person {\n    std::string firstName;\n    std::string lastName;\n    friend std::ostream& operator\n// inherit/projectioniteratorskel.hpp\ntemplate\nclass ProjectionIterator\n    : public IteratorFacade,\n                            T,\n                            typename std::iterator_traits::iterator_category,\n                            T&,\n                            typename std::iterator_traits::difference_type>\n{\n        using Base = typename std::iterator_traits::value_type;\n        using Distance = typename std::iterator_traits::difference_type;\n\n        Iterator iter;\n        T Base::* member;\n\n        friend class IteratorFacadeAccess;\n        // ... // implement core iterator operations for IteratorFacade\n    public:\n        ProjectionIterator(Iterator iter, T Base::* member)\n        : iter(iter), member(member) { }\n};\n\ntemplate\nauto project(Iterator iter, T Base::* member) {\n    return ProjectionIterator(iter, member);\n}\n\n// inherit/projectioniterator.cpp\n#include \n#include \n#include \n\nint main()\n{\n    std::vector authors = { {\"David\", \"Vandevoorde\"},\n                                    {\"Nicolai\", \"Josuttis\"},\n                                    {\"Douglas\", \"Gregor\"} };\n\n    std::copy(project(authors.begin(), &Person::firstName),\n                project(authors.end(), &Person::firstName),\n                std::ostream_iterator(std::cout, \"\\n\"));\n}\n\n完整代码\n上面的代码很乱，完整代码应该为：\n#include \n#include \n#include \n#include \n\nstruct Person\n{   \n    std::string firstName;\n    std::string lastName;\n};\n\nclass IteratorFacadeAccess\n{\n    template\n    friend class IteratorFacade;\n\n    template\n    static Reference dereference(Iterator const& i)\n    {   \n        return i.dereference();\n    }\n\n    template\n    static bool equals(Iterator& il, Iterator& ir)\n    {   \n        return il.equals(ir);\n    }\n\n    template\n    static void increment(Iterator& i)\n    {\n        return i.increment();\n    }\n};\n\ntemplate\nclass IteratorFacade\n{\n    public:\n        using value_type = typename std::remove_const::type;\n        using reference = Reference;\n        using pointer = Value*;\n        using difference_type = Distance;\n        using iterator_category = Category;\n\n        Derived& asDerived()\n        {\n            return *static_cast(this);\n        }\n        Derived const& asDerived() const\n        {\n            return *static_cast(this);\n        }\n\n        //input iterator interface\n        reference operator*() const\n        {\n            return IteratorFacadeAccess::dereference(asDerived());\n        }\n        Derived& operator++()\n        {\n            IteratorFacadeAccess::increment(asDerived());\n            return asDerived();\n        }\n        Derived operator++(int)\n        {\n            Derived result(asDerived());\n            IteratorFacadeAccess::increment(asDerived());\n            return result;\n        }\n\n        friend bool operator==(IteratorFacade const& lhs, IteratorFacade const& rhs)\n        {\n            return IteratorFacadeAccess::equals(lhs.asDerived(), rhs.asDerived());\n        }\n        friend bool operator!=(IteratorFacade const& lhs, IteratorFacade const& rhs)\n        {\n            return !(lhs == rhs);\n        }\n\n        friend difference_type operator-(IteratorFacade const& lhs, IteratorFacade const& rhs)\n        {\n            return &(*lhs) - &(*rhs);\n        }\n};\n\ntemplate\nclass ProjectionIterator\n    : public IteratorFacade,\n                            T,\n                            typename std::iterator_traits::iterator_category,\n                            T&,\n                            typename std::iterator_traits::difference_type>\n{\n        using Base = typename std::iterator_traits::value_type;\n        using Distance = typename std::iterator_traits::difference_type;\n\n        Iterator iter;\n        T Base::* member;\n\n        friend class IteratorFacadeAccess;\n\n        T& dereference() const\n        {\n            return (*iter).*member;\n        }\n        void increment()\n        {\n            ++iter;\n        }\n        bool equals(ProjectionIterator const& other) const\n        {\n            return iter == other.iter;\n        }\n    public:\n        ProjectionIterator(Iterator iter, T Base::* member) : iter(iter), member(member) {}\n};\n\ntemplate\nauto project(Iterator iter, T Base::* member)\n{\n    return ProjectionIterator(iter, member);\n}\n\nint main()\n{\n    std::vector authors = { {\"David\", \"Vandevoorde\"},\n                                    {\"Nicolai\", \"Josuttis\"},\n                                    {\"Douglas\", \"Gregor\"} };\n\n    std::copy(project(authors.begin(), &Person::lastName),\n                project(authors.end(), &Person::lastName),\n                std::ostream_iterator(std::cout, \"\\n\"));\n}\n\n但是输出却多了三行：\nVandevoorde\nJosuttis\nGregor\n\n这是因为我机器上的std::copy通过减法计算了两个迭代器指向的Person::lastName的距离，大小是6个std::string，而不是3个Person，所以会多输出三行。\n21.3 混入\n混入（mixins）是一种通过反转继承关系的方式来对类型进行定制的方法。假如现在有一个Point类和Polygon类：\nclass Point\n{\n    public:\n        double x, y;\n        Point() : x(0.0), y(0.0) { }\n        Point(double x, double y) : x(x), y(y) { }\n};\n\nclass Polygon\n{\n    private:\n        std::vector points;\n    public:\n        // ... // public operations\n};\n\n如果再为每个点增加颜色和标签等属性，同时还要保证可以在Polygon中使用扩展的点，则可以从Point派生出新的LabeledPoint，并将Polygon泛化为模板：\nclass LabeledPoint : public Point\n{\n    public:\n        std::string label;\n        LabeledPoint() : Point(), label(\"\") { }\n        LabeledPoint(double x, double y) : Point(x, y), label(\"\") { }\n};\n\ntemplate\nclass Polygon\n{\n    private:\n        // std::vector points;\n    public:\n        // ... // public operations\n};\n\n另一种实现方式是通过混入：\ntemplate\nclass Point : public Mixins...\n{\n    public:\n        double x, y;\n        Point() : Mixins()..., x(0.0), y(0.0) { }\n        Point(double x, double y) : Mixins()..., x(x), y(y) { }\n};\n\nclass Label\n{\n    public:\n        std::string label;\n        Label() : label(\"\") { }\n};\nusing LabeledPoint = Point;\n\nclass Color\n{\n    public:\n        unsigned char red = 0, green = 0, blue = 0;\n};\nusing MyPoint = Point;\n\n21.3.1 基于CRTP的混入\n混入也可以和CRTP结合来进行定制：\ntemplate... Mixins>\nclass Point : public Mixins...\n{\n    public:\n        double x, y;\n        Point() : Mixins()..., x(0.0), y(0.0) { }\n        Point(double x, double y) : Mixins()..., x(x), y(y) { }\n};\n\n21.3.2 参数化虚函数\n混入也可以将成员函数变为虚函数，但是感觉很混乱：\n// inherit/virtual.cpp\n#include \nclass NotVirtual {\n};\n\nclass Virtual {\n    public:\n        virtual void foo() {\n        }\n};\n\ntemplate\nclass Base : public Mixins... {\n    public:\n        // the virtuality of foo() depends on its declaration\n        // (if any) in the base classes Mixins...\n        void foo() {\n            std::cout \nclass Derived : public Base {\n    public:\n        void foo() {\n            std::cout * p1 = new Derived;\n    p1->foo();  // calls Base::foo()\n    Base* p2 = new Derived;\n    p2->foo();  // calls Derived::foo()\n}\n\n21.4 模板实参指定初始化\n如果模板中有多个参数，且每个参数都有默认值，当前标准并不支持指定初始化靠后的模板参数，所以下面的代码得不到想要的结果：\ntemplate\nclass BreadSlicer {\n    // ...\n};\n\nBreadSlicer bc;\n\n书中给了一种解决办法：\n// PolicySelector creates A,B,C,D as base classes\n// Discriminator<> allows having even the same base class more than once\ntemplate\nclass Discriminator : public Base {\n};\n\ntemplate\nclass PolicySelector : public Discriminator,\n                        public Discriminator,\n                        public Discriminator,\n                        public Discriminator {\n};\n\n// name default policies as P1, P2, P3, P4\nclass DefaultPolicies {\n    public:\n        using P1 = DefaultPolicy1;\n        using P2 = DefaultPolicy2;\n        using P3 = DefaultPolicy3;\n        using P4 = DefaultPolicy4;\n};\n\n// class to define a use of the default policy values\n// avoids ambiguities if we derive from DefaultPolicies more than once\nclass DefaultPolicyArgs : virtual public DefaultPolicies {\n};\n\ntemplate\nclass Policy1_is : virtual public DefaultPolicies {\n    public:\n        using P1 = Policy; // overriding type alias\n};\n\ntemplate\nclass Policy2_is : virtual public DefaultPolicies {\n    public:\n        using P2 = Policy; // overriding type alias\n};\n\ntemplate\nclass Policy3_is : virtual public DefaultPolicies {\n    public:\n        using P3 = Policy; // overriding type alias\n};\n\ntemplate\nclass Policy4_is : virtual public DefaultPolicies {\n    public:\n        using P4 = Policy; // overriding type alias\n};\n\ntemplate\nclass BreadSlicer {\n    using Policies = PolicySelector;\n    // use Policies::P1, Policies::P2, ... to refer to the various policies\n    // ...\n};\n\nBreadSlicer> bc;\n\n21.5 后记\n"},"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html":{"url":"2022-03-05-ch22-bridging-static-and-dynamic-polymorphism.html","title":"Chapter 22 Bridging Static and Dynamic Polymorphism","keywords":"","body":"22 桥接静态和动态多态\n本章实现了FunctionPtr<>，类似于std::function。\n22.1 从函数对象到函数指针再到std::function\n下面是一个可以接收任意函数对象并调用的模板：\n// bridge/forupto1.cpp\n#include \n#include \n\ntemplate\nvoid forUpTo(int n, F f)\n{\n    for (int i = 0; i != n; ++i)\n    {\n        f(i); // call passed function f for i\n    }\n}\n\nvoid printInt(int i)\n{\n    std::cout  values;\n\n    // insert values from 0 to 4:\n    forUpTo(5,\n            [&values](int i) {\n            values.push_back(i);\n            });\n\n    // print elements:\n    forUpTo(5,\n            printInt); // prints 0 1 2 3 4\n    std::cout \n基本每一次调用forUpto()都会实例化新的函数，这会增加代码体积，解决方法是不实现为模板而是通过函数指针：\n// bridge/forupto2.hpp\nvoid forUpTo(int n, void (*f)(int))\n{\n    for (int i = 0; i != n; ++i)\n    {\n        f(i); // call passed function f for i\n    }\n}\n\n但是这就不能传递lambda对象了（因为是类），为此可以使用std::function：\n// bridge/forupto3.hpp\n#include \n\nvoid forUpTo(int n, std::function f)\n{\n    for (int i = 0; i != n; ++i)\n    {\n        f(i); // call passed function f for i\n    }\n}\n\n22.2 泛化的函数指针\n本章接下来实现一个可以替代std::funtion的FuntionPtr<>：\n// bridge/forupto4.cpp\n#include \"functionptr.hpp\"\n#include \n#include \n\nvoid forUpTo(int n, FunctionPtr f)\n{\n    for (int i = 0; i != n; ++i)\n    {\n        f(i); // call passed function f for i\n    }\n}\n\nvoid printInt(int i)\n{\n    std::cout  values;\n    // insert values from 0 to 4:\n    forUpTo(5,\n            [&values](int i) {\n            values.push_back(i);\n            });\n\n    // print elements:\n    forUpTo(5,\n            printInt); // prints 0 1 2 3 4\n            std::cout \nFuntionPtr<>的特性包括：\n\n调用保存任意的可调用对象\n可以拷贝、移动和赋值\n可以为空\n\n根据以上需求，实现的FunctionPtr<>如下：\n// bridge/functionptr.hpp\n// primary template:\ntemplate\nclass FunctionPtr;\n\n// partial specialization:\ntemplate\nclass FunctionPtr\n{\n    private:\n        FunctorBridge* bridge;\n    public:\n        // constructors:\n        FunctionPtr() : bridge(nullptr) {\n        }\n        FunctionPtr(FunctionPtr const& other); // see functionptr-cpinv.hpp\n        FunctionPtr(FunctionPtr& other)\n            : FunctionPtr(static_cast(other)) {\n        }\n        FunctionPtr(FunctionPtr&& other) : bridge(other.bridge) {\n            other.bridge = nullptr;\n        }\n        // construction from arbitrary function objects:\n        template FunctionPtr(F&& f); // see functionptr-init.hpp\n\n        // assignment operators:\n        FunctionPtr& operator=(FunctionPtr const& other) {\n            FunctionPtr tmp(other);\n            swap(*this, tmp);\n            return *this;\n        }\n        FunctionPtr& operator=(FunctionPtr&& other) {\n            delete bridge;\n            bridge = other.bridge;\n            other.bridge = nullptr;\n            return *this;\n        }\n        // construction and assignment from arbitrary function objects:\n        template FunctionPtr& operator=(F&& f) {\n            FunctionPtr tmp(std::forward(f));\n            swap(*this, tmp);522 Chapter 22: Bridging Static and Dynamic Polymorphism\n            return *this;\n        }\n\n        // destructor:\n        ~FunctionPtr() {\n            delete bridge;\n        }\n\n        friend void swap(FunctionPtr& fp1, FunctionPtr& fp2) {\n            std::swap(fp1.bridge, fp2.bridge);\n        }\n        explicit operator bool() const {\n            return bridge == nullptr;\n        }\n\n        // invocation:\n        R operator()(Args... args) const; // see functionptr-cpinv.hpp\n};\n\nFunctionPtr<>只包含一个FunctorBridge<>类型的指针bridge。\n22.3 桥接接口\nFunctorBridge<>实现为一个抽象基类：\n// bridge/functorbridge.hpp\ntemplate\nclass FunctorBridge\n{\n    public:\n        virtual ~FunctorBridge() {\n        }\n        virtual FunctorBridge* clone() const = 0;\n        virtual R invoke(Args... args) const = 0;\n};\n\nclone()接口用来实现拷贝，invoke()接口用来实现调用，所以FunctionPtr<>中的拷贝构造和调用就可以像下面这样实现：\n// bridge/functionptr-cpinv.hpp\ntemplate\nFunctionPtr::FunctionPtr(FunctionPtr const& other)\n    : bridge(nullptr)\n{\n    if (other.bridge) {\n        bridge = other.bridge->clone();\n    }\n}\n\ntemplate\nR FunctionPtr::operator()(Args... args) const\n{\n    return bridge->invoke(std::forward(args)...);\n}\n\n22.4 类型擦除\n为了能够接收任意函数对象，需要将FunctorBridge<>的派生类实现为SpecificFunctorBridge<>以接收任意函数对象：\n// bridge/specificfunctorbridge.hpp\ntemplate\nclass SpecificFunctorBridge : public FunctorBridge {\n    private:\n        Functor functor;\n    public:\n        template\n        SpecificFunctorBridge(FunctorFwd&& functor)\n            : functor(std::forward(functor)) {\n        }\n        virtual SpecificFunctorBridge* clone() const override {\n            return new SpecificFunctorBridge(functor);\n        }\n        virtual R invoke(Args... args) const override {\n            return functor(std::forward(args)...);\n        }\n};\n\nFunctionPtr<>通过任意函数对象进行构造的代码为：\n// bridge/functionptr-init.hpp\ntemplate\ntemplate\nFunctionPtr::FunctionPtr(F&& f)\n    : bridge(nullptr)\n{\n    using Functor = std::decay_t;\n    using Bridge = SpecificFunctorBridge;\n    bridge = new Bridge(std::forward(f));\n}\n\nSpecificFunctorBridge<>保存了函数的类型F，但是FunctionPtr::bridge是抽象基类FunctorBridge<>的指针，无法访问SpecificFunctorBridge::functor，所以函数的类型不可见了，只能进行调用，这就是将静态多态的类型信息擦除转换为动态多态的方式。\n22.5 可选的桥接\n如果还需要判断两个FunctionPtr<>是否会调用同一函数，就需要为FunctionPtr<>重载==运算符：\nbool operator==(FunctionPtr const& f1, FunctionPtr const& f2) {\n    if (f1 || f2) {\n        return f1 && f2;\n    }\n    return f1.bridge->equals(f2.bridge);\n}\n\nbool operator!=(FunctionPtr const& f1, FunctionPtr const& f2) {\n    return !(f1 == f2);\n}\n\n书中的代码判断有错误，应该是只有在两个函数都不为空时才调用equals()进行比较。然后在FunctorPtr<>中添加接口，并在SpecificFunctorBridge<>中实现：\ntemplate\nclass FunctorBridge\n{\n    public:\n        virtual ~FunctorBridge() {\n        }\n        virtual FunctorBridge* clone() const = 0;\n        virtual R invoke(Args... args) const = 0;\n        virtual bool equals(FunctorBridge const* fb) const = 0;\n};\n\ntemplate\nclass SpecificFunctorBridge : public FunctorBridge {\n    private:\n        Functor functor;\n    public:\n        template\n        SpecificFunctorBridge(FunctorFwd&& functor)\n            : functor(std::forward(functor)) {\n        }\n        virtual SpecificFunctorBridge* clone() const override {\n            return new SpecificFunctorBridge(functor);\n        }\n        virtual R invoke(Args... args) const override {\n            return functor(std::forward(args)...);\n        }\n        virtual bool equals(FunctorBridge const* fb) const override {\n            if (auto specFb = dynamic_cast(fb)) {\n                return functor == specFb->functor;\n            }\n            // functors with different types are never equal:\n            return false;\n        }\n};\n\n这里的问题在于要求Functor必须实现了==运算符，这对函数指针没有问题，有问题的是lambda表达式，为了避免编译错误，可以通过基于SFINAE规则的类型特征模板解决：\n// bridge/isequalitycomparable.hpp\n#include       // for declval()\n#include   // for true_type and false_type\n\ntemplate\nclass IsEqualityComparable\n{\n    private:\n        // test convertibility of == and ! == to bool:\n        static void* conv(bool); // to check convertibility to bool\n        template\n        static std::true_type test(decltype(conv(std::declval() ==\n                                                    std::declval())),\n                                    decltype(conv(!(std::declval() ==\n                                                    std::declval())))\n                                    );\n        // fallback:\n        template\n        static std::false_type test(...);\n    public:\n        static constexpr bool value = decltype(test(nullptr, nullptr))::value;\n};\n\n// bridge/tryequals.hpp\n#include \n#include \"isequalitycomparable.hpp\"\n\ntemplate::value>\nstruct TryEquals\n{\n    static bool equals(T const& x1, T const& x2) {\n        return x1 == x2;\n    }\n};\n\nclass NotEqualityComparable : public std::exception\n{\n};\n\ntemplate\nstruct TryEquals\n{\n    static bool equals(T const& x1, T const& x2) {\n        throw NotEqualityComparable();\n    }\n};\n\n最终虚函数equals()实现为：\ntemplate\nclass SpecificFunctorBridge : public FunctorBridge {\n    private:\n        Functor functor;\n    public:\n        template\n        SpecificFunctorBridge(FunctorFwd&& functor)\n            : functor(std::forward(functor)) {\n        }\n        virtual SpecificFunctorBridge* clone() const override {\n            return new SpecificFunctorBridge(functor);\n        }\n        virtual R invoke(Args... args) const override {\n            return functor(std::forward(args)...);\n        }\n        virtual bool equals(FunctorBridge const* fb) const override {\n            if (auto specFb = dynamic_cast(fb)) {\n                return TryEquals::equals(functor, specFb->functor);\n            }\n            // functors with different types are never equal:\n            return false;\n        }\n};\n\n22.6 性能方面的考虑\n本章中实现的FunctionPtr<>虽然是模板，最终却是通过bridge变量实现的函数调用，完整了静态多态到动态多态的转换，这样做是否值得需要同时考量虚函数调用的开销和调用函数对象的开销。\n22.7 后记\n"},"2022-03-05-ch23-metaprogramming.html":{"url":"2022-03-05-ch23-metaprogramming.html","title":"Chapter 23 Metaprogramming","keywords":"","body":"23 元编程\n元编程是对程序进行编程，也就是在编程系统对源代码进行构建的过程中产生出新代码、实现新功能的技术。原文：\n\nMetaprogramming consists of “programming a program.” In other words, we lay out code that the programming system executes to generate new code that implements the functionality we really want.\n\n23.1 现代C++中的元编程\n23.1.1 值元编程\n值元编程（value metaprogramming）是在编译期间对变量进行求值的技术。C++11引入的constexpr解决了大量需要在编译期间求值的问题，C++14开始支持复杂的控制结构，下面是一个在编译时计算平方根的例子：\n// meta/sqrtconstexpr.hpp\ntemplate\nconstexpr T sqrt(T x)\n{\n    // handle cases where x and its square root are equal as a special case to simplify\n    // the iteration criterion for larger x:\n    if (x = hi || midSquared == x) {\n            // mid must be the square root:\n            return mid;\n        }\n        // continue with the higher/lower half-interval:\n        if (midSquared \n23.1.2 类型元编程\n类型元编程（type metaprogramming）是在编译期间以类型作为参数产生新类型的技术，下面的是一个利用模板递归实例化技术提取变量类型的例子：\n// meta/removeallextents.hpp\n// primary template: in general we yield the given type:\ntemplate\nstruct RemoveAllExtentsT {\n    using Type = T;\n};\n\n// partial specializations for array types (with and without bounds):\ntemplate\n    struct RemoveAllExtentsT {\n    using Type = typename RemoveAllExtentsT::Type;\n};\n\ntemplate\nstruct RemoveAllExtentsT {\n    using Type = typename RemoveAllExtentsT::Type;\n};\n\ntemplate\nusing RemoveAllExtents = typename RemoveAllExtentsT::Type;\n\n23.1.3 混合元编程\n混合元编程（hybrid metaprogramming）是在编译期间生成代码并在运行期间进行求值的技术。例如要计算向量点积，通常会将代码写为下面的样子：\ntemplate\nauto dotProduct(std::array const& x, std::array const& y)\n{\n    T result{};\n    for (std::size_t k = 0; k\n循环中包含跳转，所以编译器可能会进行循环展开优化，从而形成一系列的乘法求和运算，这种优化也可以通过元编程来实现：\ntemplate\nstruct DotProductT {\n    static inline T result(T* a, T* b) {\n        return *a * *b + DotProduct::result(a+1,b+1);\n    }\n};\n\n// partial specialization as end criteria\ntemplate\nstruct DotProductT {\n    static inline T result(T*, T*) {\n        return T{};\n    }\n};\ntemplate\nauto dotProduct(std::array const& x, std::array const& y)\n{\n    return DotProductT::result(x.begin(), y.begin());\n}\n\n23.1.4 对不同单位下的值运算进行混合元编程\n混合元编程的另外一个应用是对具有不同单位的值求和，具体为在编译期间确定求和结果的类型，并在运行期间进行计算，例如：\n// meta/ratio.hpp\ntemplate\nstruct Ratio {\n    static constexpr unsigned num = N; // numerator\n    static constexpr unsigned den = D; // denominator\n    using Type = Ratio;\n};\n\n// meta/ratioadd.hpp\n// implementation of adding two ratios:\ntemplate\nstruct RatioAddImpl\n{\n    private:\n        static constexpr unsigned den = R1::den * R2::den;\n        static constexpr unsigned num = R1::num * R2::den + R2::num * R1::den;\n    public:\n        typedef Ratio Type;\n};\n\n// using declaration for convenient usage:\ntemplate\nusing RatioAdd = typename RatioAddImpl::Type;\n\n// meta/duration.hpp\n// duration type for values of type T with unit type U:\ntemplate>\nclass Duration {\n    public:\n        using ValueType = T;\n        using UnitType = typename U::Type;\n    private:\n        ValueType val;\n    public:\n        constexpr Duration(ValueType v = 0)\n            : val(v) {\n        }\n        constexpr ValueType value() const {\n            return val;\n        }\n};\n\n// meta/durationadd.hpp\n// adding two durations where unit type might differ:\ntemplate\nauto constexpr operator+(Duration const& lhs, Duration const& rhs)\n{\n    // resulting type is a unit with 1 a nominator and\n    // the resulting denominator of adding both unit type fractions\n    using VT = Ratio::den>;\n    // resulting value is the sum of both values\n    // converted to the resulting unit type:\n    auto val = lhs.value() * VT::den / U1::den * U1::num + rhs.value() * VT::den / U2::den * U2::num;\n    return Duration(val);\n}\n\n看到这里我一下子就想起来了标准库中关于时间的模板std::chrono。Ratio<>是一个单位类型，RatioAddImpl<>对两个具有不同单位的单位元进行求和得到新的单位元类型。Duration表示U单位下的数值，该数值用内置类型T表示，最终的加法是对两个不同单位下的数值进行求和。下面是测试代码：\nint x = 42;\nint y = 77;\nauto a = Duration>(x);       // x milliseconds\nauto b = Duration>(y);          // y 2/3 seconds\nauto c = a + b;                                 // computes resulting unit type 1/3000 seconds\n                                                // and generates run-time code for c = a*3 + b*2000\nauto d = Duration>(7.5);     // 7.5 1/3 seconds\nauto e = Duration>(4);            // 4 seconds\nauto f = d + e;                                 // computes resulting unit type 1/3 seconds\n                                                // and generates code for f = d + e*3\n\n23.2 元编程中的反射\n在没有constexpr之前，通过元编程计算平方根的方法为：\n// meta/sqrt1.hpp\n// primary template to compute sqrt(N)\ntemplate\nstruct Sqrt {\n    // compute the midpoint, rounded up\n    static constexpr auto mid = (LO+HI+1)/2;\n    // search a not too large value in a halved interval\n    static constexpr auto value = (N::value : Sqrt::value;\n};\n\n// partial specialization for the case when LO equals HI\ntemplate\nstruct Sqrt {\n    static constexpr auto value = M;\n};\n\n通常元编程可以包含下面三部分内容：\n\n计算（computation），通过递归实例化或者常量表达式在编译期间进行求值\n反射（reflection），通过代码在编译期间侦测程序的特性\n生成（generation），在编译器期间生成额外的代码\n\n23.3 递归实例化的开销\n23.3.1 跟踪递归实例化的过程\n当使用如下代码实例化上一节的计算平方根的代码时：\n// meta/sqrt1.cpp\n#include \n#include \"sqrt1.hpp\"\n\nint main()\n{\n    std::cout ::value = \" ::value ::value = \" ::value ::value = \" ::value ::value = \" ::value \n想当然的会认为Sqrt::value的递归过程为：\n\nSqrt::value\nSqrt::value\nSqrt::value\nSqrt::value\nSqrt::value\n\n但是实际实例化的过程并没有这么简单，这是因为Sqrt::value包含两个分支，编译期间无法根据条件优化掉无效的分支，最终的结果是一个超长的条件判断表达式。虽然是通过二分法计算平方根，但是实际实例化的类模板为O(2logN)个。不仅如此，当使用::运算符引用value时，还需要实例化整个类。不过好在可以借助IfThenElse<>实现分支优化：\n// meta/sqrt2.hpp\n#include \"ifthenelse.hpp\"\n\n// primary template for main recursive step\ntemplate\nstruct Sqrt {\n    // compute the midpoint, rounded up\n    static constexpr auto mid = (LO+HI+1)/2;\n\n    // search a not too large value in a halved interval\n    using SubT = IfThenElse, Sqrt>;\n    static constexpr auto value = SubT::value;\n};\n\n// partial specialization for end of recursion criterion\ntemplate\nstruct Sqrt {\ns   tatic constexpr auto value = S;\n};\n\n书中给出的一段解释解答了一个让我疑惑很久的问题。原文：\n\nAt this point it is important to remember that defining a type alias for a class template instance does not cause a C++ compiler to instantiate the body of that instance. Therefore, when we write using SubT = IfThenElse,Sqrt>, neither Sqrt nor Sqrt is fully instantiated. Whichever of these two types ends up being a synonym for SubT is fully instantiated when looking up SubT::value.\n\n这也就是说实例化IfThenElse<>时只会实例化IfThenElseT<>，因为引用了IfThenElseT<>::Type。在后面引用SubT::value时，才会实例化Type的具体类型（也就是Sqrt或者Sqrt）。联想到第14章开头提到过，编译器只在获取类大小或者访问类成员时才实例化类模板，也印证了这个说法。\n23.4 计算完整性\nSqrt<>的例子表明模板元编程是可以实现任意计算的。\n23.5 递归实例化和递归模板\n假设有下面的递归模板：\ntemplate\nstruct Doublify {\n};\n\ntemplate\nstruct Trouble {\n    using LongType = Doublify::LongType,\n    typename Trouble::LongType>;\n};\ntemplate<>\nstruct Trouble {\n    using LongType = double;\n};\n\nTrouble::LongType ouch;\n\n随着实例化Trouble<>的N的增大，Trouble::LongType的名字也会越来越长，这对编译器是一个很大的负担，因此编译器都对模板名字进行了压缩。\n23.6 枚举值和常量值\n早期C++只支持枚举类型作为元编程中的常量，例如下面计算3的幂的例子：\n// meta/pow3enum.hpp\n// primary template to compute 3 to the Nth\ntemplate\nstruct Pow3 {\n    enum { value = 3 * Pow3::value };\n};\n\n// full specialization to end the recursion\ntemplate<>\nstruct Pow3 {\n    enum { value = 1 };\n};\n\n然后从C++98开始，可以使用类内静态常量参与元编程计算：\n// meta/pow3const.hpp\n// primary template to compute 3 to the Nth\ntemplate\nstruct Pow3 {\n    static int const value = 3 * Pow3::value;\n};\n\n// full specialization to end the recursion\ntemplate<>\nstruct Pow3 {\n    static int const value = 1;\n};\n\n本来编译器是不需要为Pow3::value分配地址的，但是当向void foo(int const&)传递value时，就需要为value分配地址了，value不再是编译期间的常量了。\n直到C++17允许内联静态数据成员后，才解决了这个问题（但是原理书上没说）。\n23.7 后记\n最早由Erwin Unruh提出的元编程例子：\n// meta/unruh.cpp\n// prime number computation\n// (modified from original from 1994 by Erwin Unruh)\n\ntemplate\nstruct is_prime {\n    enum { pri = (p==2) || ((p%i) && is_prime2?p:0),i-1>::pri) };\n};\n\ntemplate<>\nstruct is_prime {\n    enum {pri=1};\n};\n\ntemplate<>\nstruct is_prime {\n    enum {pri=1};\n};\n\ntemplate\nstruct D {\n    D(void*);\n};\n\ntemplate\nstruct CondNull {\n    static int const value = i;\n};\n\ntemplate<>\nstruct CondNull {\n    static void* value;\n};\n\nvoid* CondNull::value = 0;\n\ntemplate\nstruct Prime_print { // primary template for loop to print prime numbers\n    Prime_print a;\n    enum { pri = is_prime::pri };\n    void f() {\n        D d = CondNull::value; // 1 is an error, 0 is fine\n        a.f();\n    }\n};\ntemplate<>\nstruct Prime_print { // full specialization to end the loop\n    enum {pri=0};\n    void f() {\n        D d = 0;\n    };\n};\n\n#ifndef LAST\n#define LAST 18\n#endif\n\nint main()\n{\n    Prime_print a;\n    a.f();\n}\n\n这个程序会在编译错误中打印出所有的小于18的素数。。。\n"},"2022-03-06-ch24-typelists.html":{"url":"2022-03-06-ch24-typelists.html","title":"Chapter 24 Typelists","keywords":"","body":"24 类型列表\n24.1 类型列表\n类型列表就是存储类型的列表，和std::list类似也可以进行添加和删除等操作，但是区别在于添加操作不会对原始列表进行修改，而是创建一个新的列表，最常见的方式是通过模板实现：\n// typelist/typelist.hpp\ntemplate\nclass Typelist\n{\n};\n\n获取类型列表中第一个类型：\n// typelist/typelistfront.hpp\ntemplate\nclass FrontT;\n\ntemplate\nclass FrontT>\n{\n    public:\n        using Type = Head;\n};\n\ntemplate\nusing Front = typename FrontT::Type;\n\n移除类型列表中第一个类型：\n// typelist/typelistpopfront.hpp\ntemplate\nclass PopFrontT;\n\ntemplate\nclass PopFrontT> {\n    public:\n        using Type = Typelist;\n};\n\ntemplate\nusing PopFront = typename PopFrontT::Type;\n\n在类型列表首部添加一个新的类型：\n// typelist/typelistpushfront.hpp\ntemplate\nclass PushFrontT;\n\ntemplate\nclass PushFrontT, NewElement> {\n    public:\n        using Type = Typelist;\n};\n\ntemplate\nusing PushFront = typename PushFrontT::Type;\n\n24.2 类型列表算法\n24.2.1 索引算法\n利用PopFront<>和递归可以实现获取类型列表中第N个类型的算法：\n// typelist/nthelement.hpp\n// recursive case:\ntemplate\nclass NthElementT : public NthElementT, N-1>\n{\n};\n\n// basis case:\ntemplate\nclass NthElementT : public FrontT\n{\n};\n\ntemplate\nusing NthElement = typename NthElementT::Type;\n\n24.2.2 查找算法\n查找类型列表中最大位宽的算法如下：\n// typelist/largesttype.hpp\ntemplate\nclass LargestTypeT;\n\n// recursive case:\ntemplate\nclass LargestTypeT\n{\n    private:\n        using First = Front;\n        using Rest = typename LargestTypeT>::Type;\n    public:\n        using Type = IfThenElse= sizeof(Rest)), First, Rest>;\n};\n\n// basis case:\ntemplate<>\nclass LargestTypeT>\n{\n    public:\n        using Type = char;\n};\n\ntemplate\nusing LargestType = typename LargestTypeT::Type;\n\n递归终止条件模板可能会导致编译错误，为此可以添加IsEmpty<>进行封装：\n// typelist/typelistisempty.hpp\ntemplate\nclass IsEmpty\n{\n    public:\n        static constexpr bool value = false;\n};\n\ntemplate<>\nclass IsEmpty> {\n    public:\n        static constexpr bool value = true;\n};\n\n// typelist/genericlargesttype.hpp\ntemplate::value>\nclass LargestTypeT;\n\n// recursive case:\ntemplate\nclass LargestTypeT\n{\n    private:\n        using Contender = Front;\n        using Best = typename LargestTypeT>::Type;\n    public:\n        using Type = IfThenElse= sizeof(Best)), Contender, Best>;\n};\n\n// basis case:\ntemplate\nclass LargestTypeT\n{\n    public:\n        using Type = char;\n};\n\ntemplate\nusing LargestType = typename LargestTypeT::Type;\n\n24.2.3 追加算法\n追加算法和PushFrontT<>类似：\n// typelist/typelistpushback.hpp\ntemplate\nclass PushBackT;\n\ntemplate\nclass PushBackT, NewElement>\n{\n    public:\n        using Type = Typelist;\n};\n\ntemplate\nusing PushBack = typename PushBackT::Type;\n\n但是也可以通过Front<>、PushFront<>、PopFront<>和IsEmpty<>实现：\n// typelist/genericpushback.hpp\ntemplate::value>\nclass PushBackRecT;\n\n// recursive case:\ntemplate\nclass PushBackRecT\n{\n        using Head = Front;\n        using Tail = PopFront;\n        using NewTail = typename PushBackRecT::Type;\n    public:\n        using Type = PushFront;\n};\n\n// basis case:\ntemplate\nclass PushBackRecT\n{\n    public:\n        using Type = PushFront;\n};\n\n// generic push-back operation:\ntemplate\nclass PushBackT : public PushBackRecT { };\n\ntemplate\nusing PushBack = typename PushBackT::Type;\n\n两种方法虽然效果一样，但是在编译时间上有很大差别，原因在于第一种方法只需要实例化多个Typelist<>就可以，而第二种方法还会实例化PushBackRecT<>、PushFrontT<>、FrontT<>和PopFrontT<>。\n24.2.4 反转算法\n反转算法的一种实现方式是通过Front<>取出类型列表首部类型，然后递归反转剩下的类型列表，最后再进行组合：\n// typelist/typelistreverse.hpp\ntemplate::value>\nclass ReverseT;\n\ntemplate\nusing Reverse = typename ReverseT::Type;\n\n// recursive case:\ntemplate\nclass ReverseT\n    : public PushBackT>, Front> { };\n\n// basis case:\ntemplate\nclass ReverseT\n{\n    public:\n        using Type = List;\n};\n\nReverse<>也可以用来实现PopBack<>（感觉有些多此一举）：\n// typelist/typelistpopback.hpp\ntemplate\nclass PopBackT {\n    public:\n        using Type = Reverse>>;\n};\n\ntemplate\nusing PopBack = typename PopBackT::Type;\n\n24.2.5 变换算法 \n变换算法是将类型列表中的类型进行变换生成新的类型列表的算法，实现方法是先对首部类型进行类型变换，然后递归的对去除首部的类型列表进行变换，最终再拼接：\n// typelist/transform.hpp\ntemplate class MetaFun, bool Empty = IsEmpty::value>\nclass TransformT;\n\n// recursive case:\ntemplate class MetaFun>\nclass TransformT\n    : public PushFrontT, MetaFun>::Type,\n                        typename MetaFun>::Type>\n{\n};\n\n// basis case:\ntemplate class MetaFun>\nclass TransformT\n{\n    public:\n        using Type = List;\n};\n\ntemplate class MetaFun>\nusing Transform = typename TransformT::Type;\n\n变换元函数MetaFun<>可以是下面的形式：\n// typelist/addconst.hpp\ntemplate\nstruct AddConstT\n{\n    using Type = T const;\n};\n\ntemplate\nusing AddConst = typename AddConstT::Type;\n\n24.2.6 累加算法\n累加算法可以在遍历类型列表中的每一个类型的过程中使用类型函数F进行计算：\n// typelist/accumulate.hpp\ntemplate class F,\n            typename I,\n            bool = IsEmpty::value>\nclass AccumulateT;\n\n// recursive case:\ntemplate class F,\n            typename I>\nclass AccumulateT\n    : public AccumulateT, F, typename F>::Type>\n{\n};\n\n// basis case:\ntemplate class F,\n            typename I>\nclass AccumulateT\n{\n    public:\n        using Type = I;\n};\n\ntemplate class F,\n            typename I>\nusing Accumulate = typename AccumulateT::Type;\n\n累加算法也可以用来查找类型列表中位宽最大的类型：\n// typelist/largesttypeacc0.hpp\ntemplate\nclass LargerTypeT\n    : public IfThenElseT= sizeof(U), T, U>\n{\n};\n\ntemplate\nclass LargestTypeAccT\n    : public AccumulateT, LargerTypeT, Front>\n{\n};\n\ntemplate\nusing LargestTypeAcc = typename LargestTypeAccT::Type;\n\n当向LargestTypeAcc<>传递空类型列表时会出现编译错误，改进方法如下：\n// typelist/largesttypeacc.hpp\ntemplate\nclass LargerTypeT\n    : public IfThenElseT= sizeof(U), T, U>\n{\n};\n\ntemplate::value>\nclass LargestTypeAccT;\n\ntemplate\nclass LargestTypeAccT\n    : public AccumulateT, LargerTypeT, Front>\n{\n};\n\ntemplate\nclass LargestTypeAccT\n{\n};\n\ntemplate\nusing LargestTypeAcc = typename LargestTypeAccT::Type;\n\n24.2.7 插入排序\n插入排序的思路是首先取出类型列表的首部类型，然后对剩下的类型列表进行排序，最终再将首部类型插入到合适的位置：\n// typelist/insertionsort.hpp\ntemplate class Compare,\n            bool = IsEmpty::value>\nclass InsertionSortT;\n\ntemplate class Compare>\nusing InsertionSort = typename InsertionSortT::Type;\n\n// recursive case (insert first element into sorted list):\ntemplate class Compare>\nclass InsertionSortT\n    : public InsertSortedT, Compare>,\n                            Front, Compare>\n{\n};\n\n// basis case (an empty list is sorted):\ntemplate class Compare>\nclass InsertionSortT\n{\n    public:\n        using Type = List;\n};\n\n在有序类型列表中插入类型的模板InsertSortedT<>依然是通过递归的方式实现的：\n// typelist/insertsorted.hpp\n#include \"identity.hpp\"\ntemplate class Compare,\n            bool = IsEmpty::value>\nclass InsertSortedT;\n\n// recursive case:\ntemplate class Compare>\nclass InsertSortedT\n{\n        // compute the tail of the resulting list:\n        using NewTail = typename IfThenElse>::value,\n                                            IdentityT,\n                                            InsertSortedT, Element, Compare>>::Type;\n        // compute the head of the resulting list:\n        using NewHead = IfThenElse>::value,\n                                    Element,\n                                    Front>;\n    public:\n        using Type = PushFront;\n};\n\n// basis case:\ntemplate class Compare>\nclass InsertSortedT\n    : public PushFrontT\n{\n};\n\ntemplate class Compare>\nusing InsertSorted = typename InsertSortedT::Type;\n\n当Compare::value为true时，在排序后的类型列表中T会出现在U的前面，测试代码如下：\n// typelist/insertionsorttest.hpp\ntemplate\nstruct SmallerThanT {\n    static constexpr bool value = sizeof(T) ;\n    using ST = InsertionSort;\n    std::cout >::value \n24.3 非类型的类型列表\n这个名字有点绕，实际意思就是在编译时存储值的列表，为此需要为每个值构造一个类型：\n// typelist/ctvalue.hpp\ntemplate\nstruct CTValue\n{\n    static constexpr T value = Value;\n};\n\n对前几个素数的编译时值列表求积的代码为：\n// typelist/multiply.hpp\ntemplate\nstruct MultiplyT;\n\ntemplate\nstruct MultiplyT, CTValue> {\n    public:\n        using Type = CTValue;\n};\n\ntemplate\nusing Multiply = typename MultiplyT::Type;\n\nusing Primes = Typelist, CTValue,\n                        CTValue, CTValue,\n                        CTValue>;\n\nAccumulate>::value\n\n如果编译时值列表中的值都是同一类型的话，那么也可以使用下面的模板：\n// typelist/cttypelist.hpp\ntemplate\nusing CTTypelist = Typelist...>;\n\n或者不借助TypeList<>，直接实现ValueList<>：\n// typelist/valuelist.hpp\ntemplate\nstruct Valuelist {\n};\n\ntemplate\nstruct IsEmpty> {\n    static constexpr bool value = sizeof...(Values) == 0;\n};\n\ntemplate\nstruct FrontT> {\n    using Type = CTValue;\n    static constexpr T value = Head;\n};\n\ntemplate\nstruct PopFrontT> {\n    using Type = Valuelist;\n};\n\ntemplate\nstruct PushFrontT, CTValue> {\n    using Type = Valuelist;\n};\n\ntemplate\nstruct PushBackT, CTValue> {\n    using Type = Valuelist;\n};\n\n定义了IsEmpty<>、FrontT<>、PopFrontT<>、PushFrontT后就可以进行插入排序了：\n// typelist/valuelisttest.hpp\ntemplate\nstruct GreaterThanT;\n\ntemplate\nstruct GreaterThanT, CTValue> {\n    static constexpr bool value = First > Second;\n};\n\nvoid valuelisttest()\n{\n    using Integers = Valuelist;\n    using SortedIntegers = InsertionSort;\n    static_assert(std::is_same_v>,\n                    \"insertion sort failed\");\n}\n\n24.3.1 使用auto推导非类型模板参数\n从C++17开始，由于auto可以用来推导非类型模板参数的类型，所以CTValue<>还有更简单的定义：\n// typelist/ctvalue17.hpp\ntemplate\nstruct CTValue\n{\n    static constexpr auto value = Value;\n};\n\n24.4 利用参数包展开优化算法\n对于24.2.5中的变换算法，还可以利用参数包展开来进行优化：\n// typelist/variadictransform.hpp\ntemplate class MetaFun>\nclass TransformT, MetaFun, false>\n{\n    public:\n        using Type = Typelist::Type...>;\n};\n\n书中还给出了一个根据索引提取类型列表中指定类型的例子：\n// typelist/select.hpp\ntemplate\nclass SelectT;\n\ntemplate\nclass SelectT>\n{\n    public:\n        using Type = Typelist...>;\n};\n\ntemplate\nusing Select = typename SelectT::Type;\n\n24.5 Cons风格的类型列表\n假如C++不支持可变参数模板，那么类型列表就只能写成LISP中的样子了：\n// typelist/cons.hpp\nclass Nil { };\n\ntemplate\nclass Cons {\n    public:\n        using Head = HeadT;\n        using Tail = TailT;\n};\n\n// typelist/consfront.hpp\ntemplate\nclass FrontT {\n    public:\n        using Type = typename List::Head;\n};\n\ntemplate\nusing Front = typename FrontT::Type;\n\n// typelist/conspushfront.hpp\ntemplate\nclass PushFrontT {\n    public:\n        using Type = Cons;\n};\n\ntemplate\nusing PushFront = typename PushFrontT::Type;\n\n// typelist/conspopfront.hpp\ntemplate\nclass PopFrontT {\n    public:\n        using Type = typename List::Tail;\n};\n\ntemplate\nusing PopFront = typename PopFrontT::Type;\n\n// typelist/consisempty.hpp\ntemplate\nstruct IsEmpty {\n    static constexpr bool value = false;\n};\n\ntemplate<>\nstruct IsEmpty {\n    static constexpr bool value = true;\n};\n\n定义了这些基础操作后，就可以进行插入排序了：\n// typelist/conslisttest.hpp\ntemplate\nstruct SmallerThanT {\n    static constexpr bool value = sizeof(T) >>>;\n    using SortedTypes = InsertionSort;\n    using Expected = Cons>>>;\n    std::cout ::value \n24.6 后记\n"},"2022-03-07-ch25-tuples.html":{"url":"2022-03-07-ch25-tuples.html","title":"Chapter 25 Tuples","keywords":"","body":"25 元组\n本章实现了Tuple<>，类似于std::tuple。\n25.1 基本设计\n25.1.1 存储\n最简单的方式还是将元组拆分为头和尾的形式进行存储：\n// tuples/tuple0.hpp\ntemplate\nclass Tuple;\n\n// recursive case:\ntemplate\nclass Tuple\n{\n    private:\n        Head head;\n        Tuple tail;\n    public:\n        // constructors:\n        Tuple() {\n        }\n        Tuple(Head const& head, Tuple const& tail)\n            : head(head), tail(tail) {\n        }\n        // ...\n\n        Head& getHead() { return head; }\n        Head const& getHead() const { return head; }\n        Tuple& getTail() { return tail; }\n        Tuple const& getTail() const { return tail; }\n};\n\n// basis case:\ntemplate<>\nclass Tuple<> {\n// no storage required\n};\n\n元组中的元素通过TupleGet<>提取：\n// tuples/tupleget.hpp\n// recursive case:\ntemplate\nstruct TupleGet {\n    template\n    static auto apply(Tuple const& t) {\n        return TupleGet::apply(t.getTail());\n    }\n};\n\n// basis case:\ntemplate<>\nstruct TupleGet {\n    template\n    static Head const& apply(Tuple const& t) {\n        return t.getHead();\n    }\n};\n\ntemplate\nauto get(Tuple const& t) {\n    return TupleGet::apply(t);\n}\n\n25.1.2 构造函数\n书中提到了其它几个构造函数，但是配套代码中没有，下面的是我自己写的：\n#include \n\ntemplate\nclass Tuple;\n\n// recursive case:\ntemplate\nclass Tuple\n{\n    private:\n        Head head;\n        Tuple tail;\n    public:\n        // #1\n        Tuple() {\n        }\n        // #2\n        Tuple(Head const& head, Tuple const& tail)\n            : head(head), tail(tail) {\n        }\n        // #3\n        Tuple(Head const& head, Tail const&... tail)\n            : head(head), tail(tail...) {\n        }\n        // #4\n        template\n        Tuple(VHead&& vhead, VTail&&... vtail)\n            : head(std::forward(vhead)), tail(std::forward(vtail)...) {\n        }\n        // #5\n        template\n        Tuple(Tuple const& other)\n            : head(other.getHead()), tail(other.getTail()) {\n        }\n\n        Head& getHead() { return head; }\n        Head const& getHead() const { return head; }\n        Tuple& getTail() { return tail; }\n        Tuple const& getTail() const { return tail; }\n};\n\n// basis case:\ntemplate<>\nclass Tuple<> {\n// no storage required\n};\n\nint main()\n{\n    Tuple t(17, 3.14, \"Hello, World!\");\n    Tuple t2(t);\n}\n\nt2的初始化会报错，显示无法将Tuple转换为long类型。\n下面分析下构造函数的重载解析过程。1和2参数数量不匹配，3中Head为long，不能匹配Tuple。4实例化后的构造函数为Tuple&>(Tuple&)，5实例化后的构造函数为Tuple(Tuple const&)，用t初始化t2时4比5的匹配度更高，编译器将匹配构造函数4，这就导致了在构造head的过程中出现类型转换的错误。\n4的本意是通过一系列的值初始化元组，5的本意是从其它的元组初始化，所以应该在两个模板构造函数中添加std::enable_if来保证参数包的大小是相同的：\ntemplate>\nTuple(VHead&& vhead, VTail&&... vtail)\n    : head(std::forward(vhead)), tail(std::forward(vtail)...) { }\n\ntemplate>\nTuple(Tuple const& other)\n    : head(other.getHead()), tail(other.getTail()) { }\n\n类似std::make_tuple，还可以通过makeTuple()构造元组：\n// tuples/maketuple.hpp\ntemplate\nauto makeTuple(Types&&... elems)\n{\n    return Tuple...>(std::forward(elems)...);\n}\n\n25.2 基本操作\n25.2.1 比较\n比较操作判断两个元组类型是否相同：\n// tuples/tupleeq.hpp\n// basis case:\nbool operator==(Tuple<> const&, Tuple<> const&)\n{\n    // empty tuples are always equivalent\n    return true;\n}\n\n// recursive case:\ntemplate>\nbool operator==(Tuple const& lhs, Tuple const& rhs)\n{\n    return lhs.getHead() == rhs.getHead() && lhs.getTail() == rhs.getTail();\n}\n\n25.2.5 输出\n// tuples/tupleio.hpp\n#include \nvoid printTuple(std::ostream& strm, Tuple<> const&, bool isFirst = true)\n{\n    strm \nvoid printTuple(std::ostream& strm, Tuple const& t,\nbool isFirst = true)\n{\n    strm \nstd::ostream& operator const& t)\n{\n    printTuple(strm, t);\n    return strm;\n}\n\n25.3 算法\n元组和上一章实现的类型列表TypeList<>类似，都存储了一系列的类型，但不同的是元组中还包括类型所对应的值，因此元组所支持的算法既要在编译时确定类型，又需要在运行时对值进行计算。\n25.3.1 类型操作算法 \n下面是元组的编译时算法，主要用来确定类型：\n// tuples/tupletypelist.hpp\n// determine whether the tuple is empty:\ntemplate<>\nstruct IsEmpty> {\n    static constexpr bool value = true;\n};\n\n// extract front element:\ntemplate\nclass FrontT> {\n    public:\n        using Type = Head;\n};\n\n// remove front element:\ntemplate\nclass PopFrontT> {\n    public:\n        using Type = Tuple;\n};\n\n// add element to the front:\ntemplate\nclass PushFrontT, Element> {\n    public:\n        using Type = Tuple;\n};\n\n// add element to the back:\ntemplate\nclass PushBackT, Element> {\n    public:\n        using Type = Tuple;\n};\n\n这里只有原始的类模板，没有给出别名模板。\n25.3.2 值操作算法 \n和前一节类型操作算法对应的值算法如下：\n// tuples/popfront.hpp\ntemplate\nPopFront> popFront(Tuple const& tuple)\n{\n    return tuple.getTail();\n}\n\n// tuples/pushfront.hpp\ntemplate\nPushFront, V> pushFront(Tuple const& tuple, V const& value)\n{\n    return PushFront, V>(value, tuple);\n}\n\n// tuples/pushback.hpp\n// basis case\ntemplate\nTuple pushBack(Tuple<> const&, V const& value)\n{\n    return Tuple(value);\n}\n\n// recursive case\ntemplate\nTuple pushBack(Tuple const& tuple, V const& value)\n{\n    return Tuple(tuple.getHead(), pushBack(tuple.getTail(), value));\n}\n\n25.3.3 反转算法 \n反转算法通过递归的方式实现：\n// tuples/reverse.hpp\n// basis case\nTuple<> reverse(Tuple<> const& t)\n{\n    return t;\n}\n\n// recursive case\ntemplate\nReverse> reverse(Tuple const& t)\n{\n    return pushBack(reverse(t.getTail()), t.getHead());\n}\n\n有了反转算法后，就可以实现弹出最后一个元素的算法了：\n// tuples/popback.hpp\ntemplate\nPopBack> popBack(Tuple const& tuple)\n{\n    return reverse(popFront(reverse(tuple)));\n}\n\n25.3.4 索引列表\n上一节中的反转算法效率可以通过统计拷贝的次数来测量：\n// tuples/copycounter.hpp\ntemplate\nstruct CopyCounter\n{\n    inline static unsigned numCopies = 0;\n    CopyCounter() {\n    }\n    CopyCounter(CopyCounter const&) {\n        ++numCopies;\n    }\n};\n\n// tuples/copycountertest.hpp\nvoid copycountertest()\n{\n    Tuple, CopyCounter, CopyCounter,\n            CopyCounter, CopyCounter> copies;\n    auto reversed = reverse(copies);\n    std::cout ::numCopies ::numCopies ::numCopies ::numCopies ::numCopies \n拷贝次数过多主要是由于pushBack()的递归，每次在构造Tuple::tail时都会发生拷贝。更有效率的方式是使用makeTuple()进行构造，类似下面的代码：\nauto reversed = makeTuple(get(copies), get(copies),\n                            get(copies), get(copies),\n                            get(copies));\n\n这样拷贝次数就都降低为1次了，但是上面的写法很麻烦，所以应该将索引序列变成非类型的模板参数包，也就是索引列表。\n25.3.5 通过索引列表实现反转\n索引列表借助上一章的ValueList<>实现：\n// tuples/indexlistreverse.hpp\ntemplate\nauto reverseImpl(Tuple const& t, Valuelist)\n    -> decltype(makeTuple(get(t)...))\n{\n    return makeTuple(get(t)...);\n}\n\ntemplate\nauto reverse(Tuple const& t)\n    -> decltype(reverseImpl(t, Reverse>()))\n{\n    return reverseImpl(t, Reverse>());\n}\n\nreverseImpl()中第二个参数没有名字，因为在函数体中并不需要使用该参数，主要作用是通过该参数推导Indices。如果没有该参数，则必须要通过显示实例化模板的方式显式指定。\n构造ValueList<>的MakeIndexList()代码如下：\n// tuples/makeindexlist.hpp\n// recursive case\ntemplate>\nstruct MakeIndexListT : MakeIndexListT>>\n{\n};\n\n// basis case\ntemplate\nstruct MakeIndexListT\n{\n    using Type = Result;\n};\n\ntemplate\nusing MakeIndexList = typename MakeIndexListT::Type;\n\n25.3.6 重排和选择\nreverseImpl()只是通过一个递减的值列表选择出元组中的元素，其核心是提取算法：\n// tuples/select.hpp\ntemplate\nauto select(Tuple const& t, Valuelist)\n{\n    return makeTuple(get(t)...);\n}\n\n下面是一个将I重复N次的索引序列，可以用来生成由元组中第I个元素重复N次的新元组：\n// tuples/splat.hpp\ntemplate>\nclass ReplicatedIndexListT;\n\ntemplate\nclass ReplicatedIndexListT>\n    : public ReplicatedIndexListT> {\n};\n\ntemplate\nclass ReplicatedIndexListT> {\n    public:\n        using Type = Valuelist;\n};\n\ntemplate\nusing ReplicatedIndexList = typename ReplicatedIndexListT::Type;\n\ntemplate\nauto splat(Tuple const& t)\n{\n    return select(t, ReplicatedIndexList());\n}\n\n注意ReplicatedIndexListT<>的主模板和特化模板之间的模板形参有区别。\n如果要对元组中的元素按照大小进行排序进行排序，可以先对下标进行排序，然后再应用select()：\n// tuples/tuplesorttest.hpp\n#include \ntemplate\nclass SmallerThanT\n{\n    public:\n        static constexpr bool value = sizeof(T) (42,77), 'c', 42, 7.7);\n    std::cout (t1); // t2 is Tuple\n    std::cout \n// tuples/tuplesort.hpp\n// metafunction wrapper that compares the elements in a tuple:\ntemplate class F>\nclass MetafunOfNthElementT {\n    public:\n        template class Apply;\n        template\n        class Apply, CTValue>\n            : public F, NthElement> { };\n};\n\n// sort a tuple based on comparing the element types:\ntemplate class Compare, typename... Elements>\nauto sort(Tuple const& t)\n{\n    return select(t,\n            InsertionSort, \n                            MetafunOfNthElementT, Compare>::template Apply>\n                            ());\n}\n\nInsertionSort<>中第一个参数是需要排序的值列表，第二个参数是比较值列表的元函数。因为不是简单的比较值列表中索引的大小，而是比较元组中具有该索引的类型的大小，因此需要将额外的参数Tuple和比较函数SmallerThanT<>进行组合。此外由于InsertionSort<>中第二个参数依然是模板（模板的模板参数），而MetafunOfNthElementT, Compare>并不是模板，所以需要再次引用嵌入的类模板Apply<>，同时提示编译器Apply<>是模板。\n25.4 将元组像参数包一样展开\n为了将元组传递给接收可变参数的函数，可以利用和select()中同样的方式将参数包展开：\n// tuples/apply.hpp\ntemplate\nauto applyImpl(F f, Tuple const& t, Valuelist)\n    ->decltype(f(get(t)...))\n{\n    return f(get(t)...);\n}\n\ntemplate\nauto apply(F f, Tuple const& t)\n    ->decltype(applyImpl(f, t, MakeIndexList()))\n{\n    return applyImpl(f, t, MakeIndexList());\n}\n\n25.5 优化\n25.5.1 元组和空基类优化\n为了利用空基类优化，就不能将Tuple::tail作为成员，而应该作为基类：\n// tuples/tuplestorage1.hpp\n// recursive case:\ntemplate\nclass Tuple : private Tuple\n{\n    private:\n        Head head;\n    public:\n        Head& getHead() { return head; }\n        Head const& getHead() const { return head; }\n        Tuple& getTail() { return *this; }\n        Tuple const& getTail() const { return *this; }\n};\n\n问题在于采用继承的方式会先初始化基类，虽然没什么问题，但是看起来有些别扭，解决办法是通过多重继承：\n// tuples/tuplestorage2.hpp\ntemplate\nclass Tuple;\n\ntemplate\nclass TupleElt\n{\n        T value;\n    public:\n        TupleElt() = default;\n\n        template\n        TupleElt(U&& other) : value(std::forward(other) { }\n\n        T& get() { return value; }\n        T const& get() const { return value; }\n};\n\n// recursive case:\ntemplate\nclass Tuple : private TupleElt, private Tuple\n{\n    public:\n        Head& getHead() {\n            // potentially ambiguous\n            return static_cast *>(this)->get();\n        }\n        Head const& getHead() const {\n            // potentially ambiguous\n            return static_cast const*>(this)->get();\n        }\n        Tuple& getTail() { return *this; }\n        Tuple const& getTail() const { return *this; }\n};\n\n// basis case:\ntemplate<>\nclass Tuple<> {\n// no storage required\n};\n\n这虽然解决了初始化顺序的问题，但是当多重继承的基类相同时就会出现歧义，为了解决这个问题，可以在TupleElt<>中加入一个高度信息：\n// tuples/tupleelt1.hpp\ntemplate\nclass TupleElt {\n        T value;\n    public:\n        TupleElt() = default;\n        template\n        TupleElt(U&& other) : value(std::forward(other)) { }\n        T& get() { return value; }\n        T const& get() const { return value; }\n};\n\n// tuples/tuplestorage3.hpp\ntemplate\nclass Tuple;\n\n// recursive case:\ntemplate\nclass Tuple\n    : private TupleElt, private Tuple\n{\n        using HeadElt = TupleElt;\n    public:\n        Head& getHead() {\n        return static_cast(this)->get();\n        }\n        Head const& getHead() const {\n        return static_cast(this)->get();\n        }\n        Tuple& getTail() { return *this; }\n        Tuple const& getTail() const { return *this; }\n};\n\n// basis case:\ntemplate<>\nclass Tuple<> {\n// no storage required\n};\n\n下面的程序可以用来测试优化后的存储空间：\n// tuples/compressedtuple1.cpp\n#include \n#include \"tupleelt1.hpp\"\n#include \"tuplestorage3.hpp\"\n#include \n\nstruct A {\n    A() {\n        std::cout  t1;\n    std::cout \nt1的大小是5字节，说明继承链中的空元组的存储空间被优化了。由于上例中的A和B也是空类型，所以可以改进TupleElt<>来将A和B所占用的存储空间也优化掉：\n// tuples/tupleelt2.hpp\n#include \ntemplate::value && !std::is_final::value>\nclass TupleElt;\n\ntemplate\nclass TupleElt\n{\n        T value;\n    public:\n        TupleElt() = default;\n        template\n        TupleElt(U&& other) : value(std::forward(other)) { }\n\n        T& get() { return value; }\n        T const& get() const { return value; }\n};\n\ntemplate\nclass TupleElt : private T\n{\n    public:\n        TupleElt() = default;\n        template\n        TupleElt(U&& other) : T(std::forward(other)) { }\n\n        T& get() { return *this; }\n        T const& get() const { return *this; }\n};\n\n25.5.2  常量时间的get()\n由于TupleElt<>的实现方法是通过继承，因此可以利用派生类到基类的转换实现常量时间的get()：\n// tuples/constantget.hpp\ntemplate\nT& getHeight(TupleElt& te)\n{\n    return te.get();\n}\n\ntemplate\nclass Tuple;\n\ntemplate\nauto get(Tuple& t)\n    -> decltype(getHeight(t))\n{\n    return getHeight(t);\n}\n\n因为优化后的元组是私有继承的方式，所以需要将get()声明为友元。\n25.6 下标运算\n元组也可以定义下标运算符，内部借助get()实现：\ntemplate\nauto& operator[](CTValue) {\n    return get(*this);\n}\n\nauto t = makeTuple(0, '1', 2.2f, std::string{\"hello\"});\nauto a = t[CTValue{}];\nauto b = t[CTValue{}];\n\n由于get(*this)是编译期间确定的值，所以参数也必须是一个编译期间的值。可以发现CTValue<>的写法有些复杂，所以可以借助字面值运算符模板：\n// tuples/literals.hpp\n#include \"ctvalue.hpp\"\n#include \n#include \n\n// convert single char to corresponding int value at compile time:\nconstexpr int toInt(char c) {\n    // hexadecimal letters:\n    if (c >= 'A' && c (c) - static_cast('A') + 10;\n    }\n    if (c >= 'a' && c (c) - static_cast('a') + 10;\n    }\n    // other (disable '.' for floating-point literals):\n    assert(c >= '0' && c (c) - static_cast('0');\n}\n\n// parse array of chars to corresponding int value at compile time:\ntemplate\nconstexpr int parseInt(char const (&arr)[N]) {\n    int base = 10;                  // to handle base (default: decimal)\n    int offset = 0;                 // to skip prefixes like 0x\n    if (N > 2 && arr[0] == '0') {\n        switch (arr[1]) {\n            case 'x':               // prefix 0x or 0X, so hexadecimal\n            case 'X':\n                base = 16;\n                offset = 2;\n                break;\n            case 'b':               // prefix 0b or 0B (since C++14), so binary\n            case 'B':\n                base = 2;\n                offset = 2;\n                break;\n            default:                // prefix 0, so octal\n                base = 8;\n                offset = 1;\n                break;\n        }\n    }\n    // iterate over all digits and compute resulting value:\n    int value = 0;\n    int multiplier = 1;\n    for (std::size_t i = 0; i \nconstexpr auto operator\"\" _c() {\n    return CTValue({cs...})>{};\n}\n\nauto t = makeTuple(0, '1', 2.2f, std::string{\"hello\"});\nauto c = t[2_c];\nauto d = t[3_c];\n\n25.7 后记\n25.3.1、25.3.2、25.3.3中没有给出别名模板，配套代码中也缺少省略的内容，完整的反转算法如下：\n#include \n#include \n\ntemplate\nclass Tuple;\n\n// recursive case:\ntemplate\nclass Tuple\n{\n    private:\n        Head head;\n        Tuple tail;\n    public:\n        Tuple() {\n        }\n        Tuple(Head const& head, Tuple const& tail)\n            : head(head), tail(tail) {\n        }\n        Tuple(Head const& head, Tail const&... tail)\n            : head(head), tail(tail...) {\n        }\n        template>\n        Tuple(VHead&& vhead, VTail&&... vtail)\n            : head(std::forward(vhead)), tail(std::forward(vtail)...) {\n        }\n        template>\n        Tuple(Tuple const& other)\n            : head(other.getHead()), tail(other.getTail()) {\n        }\n\n        Head& getHead() { return head; }\n        Head const& getHead() const { return head; }\n        Tuple& getTail() { return tail; }\n        Tuple const& getTail() const { return tail; }\n};\n\n// basis case:\ntemplate<>\nclass Tuple<> {\n// no storage required\n};\n\ntemplate\nstruct IsEmpty {\n    static constexpr bool value = false;\n};\n\ntemplate<>\nstruct IsEmpty> {\n    static constexpr bool value = true;\n};\n\ntemplate\nclass FrontT;\n\ntemplate\nclass FrontT> {\n    public:\n        using Type = Head;\n};\n\ntemplate\nusing Front = typename FrontT::Type;\n\ntemplate\nclass PopFrontT;\n\ntemplate\nclass PopFrontT> {\n    public:\n        using Type = Tuple;\n};\n\ntemplate\nusing PopFront = typename PopFrontT::Type;\n\ntemplate\nclass PushFrontT;\n\ntemplate\nclass PushFrontT, Element> {\n    public:\n        using Type = Tuple;\n};\n\ntemplate\nusing PushFront = typename PushFrontT::Type;\n\ntemplate\nclass PushBackT;\n\ntemplate\nclass PushBackT, Element> {\n    public:\n        using Type = Tuple;\n};\n\ntemplate\nusing PushBack = typename PushBackT::Type;\n\ntemplate::value>\nclass ReverseT;\n\ntemplate\nusing Reverse = typename ReverseT::Type;\n\ntemplate\nclass ReverseT\n{\n    public:\n        using Type = PushBack>, Front>;\n};\n\ntemplate\nclass ReverseT\n{\n    public:\n        using Type = Tuple;\n};\n\ntemplate\nclass PopBackT {\n    public:\n        using Type = Reverse>>;\n};\n\ntemplate\nusing PopBack = typename PopBackT::Type;\n\ntemplate\nTuple pushBack(Tuple<> const&, V const& value)\n{\n    return Tuple(value);\n}\n\n// recursive case\ntemplate\nTuple pushBack(Tuple const& tuple, V const& value)\n{\n    return Tuple(tuple.getHead(), pushBack(tuple.getTail(), value));\n}\n\nTuple<> reverse(Tuple<> const& t)\n{\n    return t;\n}\n\n// recursive case\ntemplate\nReverse> reverse(Tuple const& t)\n{\n    return pushBack(reverse(t.getTail()), t.getHead());\n}\n\nint main()\n{\n    Tuple t(1, 2.5, std::string(\"hello\"));\n    reverse(t);\n}\n\n"},"2022-03-08-ch26-discriminated-unions.html":{"url":"2022-03-08-ch26-discriminated-unions.html","title":"Chapter 26 Discriminated Unions","keywords":"","body":"26 可识别联合体\n可识别联合体中存储了一组可能类型之一的值，但是和传统的联合体不同的是可识别联合体知道当前其中存储的是什么类型，也就可以提高安全性。本章实现了Variant<>，类似于std::variant，一个简单的应用如下：\n// variant/variant.cpp\n#include \"variant.hpp\"\n#include \n#include \n\nint main()\n{\n    Variant field(17);\n    if (field.is()) {\n        std::cout () () \n26.1 存储\n可以分别通过Tuple<>和union来实现可识别联合体：\n// variant/variantstorageastuple.hpp\ntemplate\nclass Variant {\n    public:\n        Tuple storage;\n        unsigned char discriminator;\n};\n\n// variant/variantstorageasunion.hpp\ntemplate\nunion VariantStorage;\n\ntemplate\nunion VariantStorage {\n    Head head;\n    VariantStorage tail;\n};\n\ntemplate<>\nunion VariantStorage<> {\n};\n\n但是Tuple<>的方法占用了过多的存储空间，union的方式无法使用继承，书中最终采用的方式是使用一个足够大的缓冲区来容纳所有可能的类型，并通过VariantStorage::discriminator标识缓冲区中的数据应该解释为哪种类型（下标从1开始，0表示未存储数据），代码如下：\n// variant/variantstorage.hpp\n#include  // for std::launder()\n\ntemplate\nclass VariantStorage {\n        using LargestT = LargestType>;\n        alignas(Types...) unsigned char buffer[sizeof(LargestT)];\n        unsigned char discriminator = 0;\n    public:\n        unsigned char getDiscriminator() const { return discriminator; }\n        void setDiscriminator(unsigned char d) { discriminator = d; }\n        void* getRawBuffer() { return buffer; }\n        const void* getRawBuffer() const { return buffer; }\n\n        template\n            T* getBufferAs() { return std::launder(reinterpret_cast(buffer)); }\n        template\n            T const* getBufferAs() const {\n                return std::launder(reinterpret_cast(buffer));\n            }\n};\n\n26.2 设计 \n可识别联合体的定义如下：\n// variant/variantchoice.hpp\n#include \"findindexof.hpp\"\n\ntemplate\nclass VariantChoice {\n        using Derived = Variant;\n        Derived& getDerived() { return *static_cast(this); }\n        Derived const& getDerived() const {\n            return *static_cast(this);\n        }\n    protected:\n        // compute the discriminator to be used for this type\n        constexpr static unsigned Discriminator =\n            FindIndexOfT, T>::value + 1;\n    public:\n        VariantChoice() { }\n        VariantChoice(T const& value);          // see variantchoiceinit.hpp\n        VariantChoice(T&& value);               // see variantchoiceinit.hpp\n        bool destroy();                         // see variantchoicedestroy.hpp\n        Derived& operator= (T const& value);    // see variantchoiceassign.hpp\n        Derived& operator= (T&& value);         // see variantchoiceassign.hpp\n};\n\n// variant/findindexof.hpp\ntemplate::value>\nstruct FindIndexOfT;\n\n// recursive case:\ntemplate\nstruct FindIndexOfT\n    : public IfThenElse, T>::value,\n                        std::integral_constant,\n                        FindIndexOfT, T, N+1>>\n{\n};\n\n// basis case:\ntemplate\nstruct FindIndexOfT\n{\n};\n\n// variant/variant.hpp\ntemplate\nclass Variant\n    : private VariantStorage, private VariantChoice...\n{\n        template\n        friend class VariantChoice;\n\n    public:\n        template bool is() const;           // see variantis.hpp\n        template T& get() &;                // see variantget.hpp\n        template T const& get() const&;     // see variantget.hpp\n        template T&& get() &&;              // see variantget.hpp\n\n        // see variantvisit.hpp:\n        template\n        VisitResult visit(Visitor&& vis) &;\n        template\n        VisitResult visit(Visitor&& vis) const&;\n        template\n        VisitResult visit(Visitor&& vis) &&;\n\n        using VariantChoice::VariantChoice...;\n        Variant();                                          // see variantdefaultctor.hpp\n        Variant(Variant const& source);                     // see variantcopyctor.hpp\n        Variant(Variant&& source);                          // see variantmovector.hpp\n        template\n        Variant(Variant const& source);     // variantcopyctortmpl.hpp\n        template\n        Variant(Variant&& source);\n\n        using VariantChoice::operator=...;\n        Variant& operator= (Variant const& source);         // see variantcopyassign.hpp\n        Variant& operator= (Variant&& source);\n        template\n        Variant& operator= (Variant const& source);\n        template\n        Variant& operator= (Variant&& source);\n\n        bool empty() const;\n\n        ~Variant() { destroy(); }\n        void destroy(); // see variantdestroy.hpp\n};\n\n基类VariantStorage为可识别的联合体提供存储，其余基类VariantChoice...为可识别联合体提供标识——这是一种嵌套的展开参数包的方式，展开后将继承多个VariantChoice<>，其中第一个模板参数是Types中的每一个类型，第二个模板参数是Types中的所有类型。将Type...作为第二个模板参数传入到VariantChoice<>中以使getDrived()返回派生类的引用用到了CRTP技术。\nVariant<>中的成员函数将在后面的小节中详细说明。\n26.3 查询和提取 \n查询操作判断可识别联合体中存储的是否是某一种类型的值：\n// variant/variantis.hpp\ntemplate\ntemplate\nbool Variant::is() const\n{\n    return this->getDiscriminator() == VariantChoice::Discriminator;\n}\n\n提取操作从可识别联合体中获取某种类型的值：\n// variant/variantget.hpp\n#include \n\nclass EmptyVariant : public std::exception {\n};\n\ntemplate\ntemplate\nT& Variant::get() & {\n    if (empty()) {\n        throw EmptyVariant();\n    }\n\n    assert(is());\n    return *this->template getBufferAs();\n}\n\n26.4 通过某种类型的值初始化、赋值和析构\n26.4.1 初始化 \n可识别联合体可以通过某种类型的初值初始化，为此通过using VariantChoice::VariantChoice...拉取了所有基类的构造函数，例如Variant继承了下列构造函数：\nVariant(int const&);\nVariant(int&&);\nVariant(double const&);\nVariant(double&&);\nVariant(string const&);\nVariant(string&&);\n\n所以只需要实现VariantChoice<>的构造函数：\n// variant/variantchoiceinit.hpp\n#include  // for std::move()\n\ntemplate\nVariantChoice::VariantChoice(T const& value) {\n    // place value in buffer and set type discriminator:\n    new(getDerived().getRawBuffer()) T(value);\n    getDerived().setDiscriminator(Discriminator);\n}\n\ntemplate\nVariantChoice::VariantChoice(T&& value) {\n    // place moved value in buffer and set type discriminator:\n    new(getDerived().getRawBuffer()) T(std::move(value));\n    getDerived().setDiscriminator(Discriminator);\n}\n\n这里使用的是原地new运算符，即在指针所指向的内存中构造T类型的对象。\n26.4.2 析构\n析构时需要根据当前存储的类型释放缓冲区：\n// variant/variantchoicedestroy.hpp\ntemplate\nbool VariantChoice::destroy() {\n    if (getDerived().getDiscriminator() == Discriminator) {\n        // if type matches, call placement delete:\n        getDerived().template getBufferAs()->~T();\n        return true;\n    }\n    return false;\n}\n\n这里的析构也是原地析构，即析构后不释放缓冲区。因为可识别联合体中存储的肯定是某种类型的数据，所以有且只有一个VariantChoice::destroy()返回true。为了强制析构，可以将所有的destroy()都调用一遍：\n// variant/variantdestroy.hpp\ntemplate\nvoid Variant::destroy() {\n// call destroy() on each VariantChoice base class; at most one will succeed:\n    bool results[] = {\n        VariantChoice::destroy()...\n    };\n    // indicate that the variant does not store a value\n    this->setDiscriminator(0);\n}\n\n析构的最后将VariantStorage::discriminator设置为了0，表示可识别联合体中未存储任何类型的值。\n在C++17中也可以写为下面的形式：\n// variant/variantdestroy17.hpp\ntemplate\nvoid Variant::destroy()\n{\n    // call destroy() on each VariantChoice base class; at most one will succeed:\n    (VariantChoice::destroy() , ...);\n\n    // indicate that the variant does not store a value\n    this->setDiscriminator(0);\n}\n\n26.4.3 赋值\n可识别联合体初始化后也可以通过某种类型的值进行赋值，为此也通过using VariantChoice::operator=...拉取了基类中的赋值运算符：\n// variant/variantchoiceassign.hpp\ntemplate\nauto VariantChoice::operator= (T const& value) -> Derived& {\n    if (getDerived().getDiscriminator() == Discriminator) {\n        // assign new value of same type:\n        *getDerived().template getBufferAs() = value;\n    }\n    else {\n        // assign new value of different type:\n        getDerived().destroy(); // try destroy() for all types\n        new(getDerived().getRawBuffer()) T(value); // place new value\n        getDerived().setDiscriminator(Discriminator);\n    }\n    return getDerived();\n}\n\ntemplate\nauto VariantChoice::operator= (T&& value) -> Derived& {\n    if (getDerived().getDiscriminator() == Discriminator) {\n        // assign new value of same type:\n        *getDerived().template getBufferAs() = std::move(value);\n    }\n    else {\n        // assign new value of different type:\n        getDerived().destroy(); // try destroy() for all types\n        new(getDerived().getRawBuffer()) T(std::move(value)); // place new value\n        getDerived().setDiscriminator(Discriminator);\n    }\n    return getDerived();\n}\n\n自赋值问题\n移动赋值运算符一般要考虑自赋值的问题，因为当旧值和新值相同时，销毁后赋值的操作可能导致内存问题。不过在可识别联合体中不存在这个问题，因此类型相同时将调用类型的移动构造函数，自赋值的问题将被该类型的移动构造函数解决。\n赋值抛出异常的问题\n如果原地析构正常完成而原地构造抛出了异常，则可识别联合体将处于未存储值的状态，例子如下：\n// variant/variantexception.cpp\n#include \"variant.hpp\"\n#include \n#include \n#include \n\nclass CopiedNonCopyable : public std::exception\n{\n};\n\nclass NonCopyable\n{\n    public:\n        NonCopyable() {\n        }\n        NonCopyable(NonCopyable const&) {\n            throw CopiedNonCopyable();\n        }\n        NonCopyable(NonCopyable&&) = default;\n        NonCopyable& operator= (NonCopyable const&) {616 Chapter 26: Discriminated Unions\n            throw CopiedNonCopyable();\n        }\n        NonCopyable& operator= (NonCopyable&&) = default;\n};\n\nint main()\n{\n    Variant v(17);\n    try {\n        NonCopyable nc;\n        v = nc;\n    }\n    catch (CopiedNonCopyable) {\n        std::cout () && !v.is()) {\n            std::cout \n判断可识别联合体是否存储值的empty()定义如下：\n// variant/variantempty.hpp\ntemplate\nbool Variant::empty() const {\n    return this->getDiscriminator() == 0;\n}\n\nstd::launder\n提高运行效率的方法之一是尽量避免在内存中复制值，为此编译器将假设某些值在一段时间之内是不会变的，但是可识别联合体中的原地析构和构造可能让编译器做出错误的判断，从而引发各种bug。\n为此C++17提供了std::launder()的解决办法，它以一个地址作为参数，只是简单的返回该地址，同时提示编译器这两个地址所存储的对象可能已经不同了。原文：\n\nSince C++17, the solution for this issue is to access the address of the new object through std::launder(), which just returns its argument, but which causes the compiler to recognize that the resulting address points to an object that may differ from what the compiler assumes about the argument passed to std::launder().\n\n26.5 访问函数\n26.3中的is()和get()可以用来查询和提取可识别联合体中的类型，但是这将会导致冗长的判断语句，例如打印可识别联合体：\nVariant v;\n\nif (v.is()) {\n    std::cout ();\n}\nelse if (v.is()) {\n    std::cout ();\n}\nelse {\n    std::cout ();\n}\n\n可以通过递归解决这个问题：\n// variant/printrec.cpp\n#include \"variant.hpp\"\n#include \n\ntemplate\nvoid printImpl(V const& v)\n{\n    if (v.template is()) {\n        std::cout ();\n    }\n    else if constexpr (sizeof...(Tail) > 0) {\n        printImpl(v);\n    }\n}\n\ntemplate\nvoid print(Variant const& v)\n{\n    printImpl, Types...>(v);\n}\n\nint main() {\n    Variant v(1.5);\n    print(v);\n}\n\n如果为每一个简单的操作都实现类似的函数则要编写很多代码，解决办法是将访问函数作为参数：\n// variant/variantvisitimpl.hpp\ntemplate\nR variantVisitImpl(V&& variant, Visitor&& vis, Typelist) {\n    if (variant.template is()) {\n        return static_cast(\n                                std::forward(vis)(\n                                std::forward(variant).template get()));\n    }\n    else if constexpr (sizeof...(Tail) > 0) {\n        return variantVisitImpl(std::forward(variant),\n                                    std::forward(vis),\n                                    Typelist());\n    }\n    else {\n        throw EmptyVariant();\n    }\n}\n\n// variant/variantvisit.hpp\ntemplate\n    template\nVisitResult Variant::visit(Visitor&& vis)& {\n    using Result = VisitResult;\n    return variantVisitImpl(*this,\n                                    std::forward(vis),\n                                    Typelist());\n}\n\ntemplate\n    template\nVisitResult Variant::visit(Visitor&& vis) const& {\n    using Result = VisitResult;\n    return variantVisitImpl(*this,\n                                    std::forward(vis),\n                                    Typelist());\n}\n\ntemplate\n    template\nVisitResult Variant::visit(Visitor&& vis) && {\n    using Result = VisitResult;\n    return variantVisitImpl(std::move(*this),\n                                    std::forward(vis),\n                                    Typelist());\n}\n\n26.5.1 访问函数的返回类型\n如果访问函数有返回类型，就要保证无论可识别联合体中是什么类型，访问函数的返回值都可以转换为该类型，否则将不能编译，为此需要实现VisitResult<>：\n// variant/variantvisitresult.hpp\n// an explicitly-provided visitor result type:\ntemplate\nclass VisitResultT\n{\n    public:\n        using Type = R;\n};\n\ntemplate\nusing VisitResult = typename VisitResultT::Type;\n\n在指定了返回类型R的情况下，返回类型就是R，而当未指定返回类型时（也就是R仍然为默认模板实参ComputedResultType，参见26.2），就要推导可识别联合体中所有可能类型的值调用访问函数的返回类型的公共类型。\n26.5.2 公共返回类型\n推导所有可能类型的公共返回类型的模板代码为：\n// variant/commontype.hpp\nusing std::declval;\n\ntemplate\nclass CommonTypeT\n{\n    public:\n        using Type = decltype(true? declval() : declval());\n};\n\ntemplate\nusing CommonType = typename CommonTypeT::Type;\n\n// variant/variantvisitresultcommon.hpp\n#include \"accumulate.hpp\"\n#include \"commontype.hpp\"\n\n// the result type produced when calling a visitor with a value of type T:\ntemplate\nusing VisitElementResult = decltype(declval()(declval()));\n\n// the common result type for a visitor called with each of the given element types:\ntemplate\nclass VisitResultT\n{\n        using ResultTypes =  Typelist...>;\n    public:\n        using Type = Accumulate, CommonTypeT, Front>;\n};\n\nVisitElementResult<>得到所有可能的返回类型形成类型列表，最终通过类型列表的累加算法Accumulate<>推导公共返回类型。当然也可以使用std::is_common_type_t来简化：\n// variant/variantvisitresultstd.hpp\ntemplate\nclass VisitResultT\n{\n    public:\n        using Type =\n            std::common_type_t...>;\n};\n\n最后是测试代码：\n// variant/visit.cpp\n#include \"variant.hpp\"\n#include \n#include \n\nint main()\n{\n    Variant v(1.5);\n    auto result = v.visit([](auto const& value) {\n        return value + 1;\n    });\n    std::cout \n26.6 可识别联合体的初始化和赋值\n默认构造函数\n可识别联合体可以被默认构造，但是并不是不存储值，而是用第一个类型的默认值初始化，这样就尽量避免了不存储值的特殊情况：\n// variant/variantdefaultctor.hpp\ntemplate\nVariant::Variant() {\n    *this = Front>();\n}\n\n测试代码如下：\n// variant/variantdefaultctor.cpp\n#include \"variant.hpp\"\n#include \n\nint main()\n{\n    Variant v;\n    if (v.is()) {\n        std::cout ()  v2;\n    if (v2.is()) {\n        std::cout () \n拷贝和移动初始化\n拷贝初始化最终转换为了26.4.1中的初始化：\ntemplate\nVariant::Variant(Variant const& source) {\n    if (!source.empty()) {\n        source.visit([&](auto const& value) {\n                        *this = value;\n                    });\n    }\n}\n\n移动初始化类似：\n// variant/variantmovector.hpp\ntemplate\nVariant::Variant(Variant&& source) {\n    if (!source.empty()) {\n        std::move(source).visit([&](auto&& value) {\n                                    *this = std::move(value);\n                                });\n    }\n}\n\n从另一个类型的可识别联合体初始化：\n// variant/variantcopyctortmpl.hpp\ntemplate\n    template\nVariant::Variant(Variant const& source) {\n    if (!source.empty()) {\n        source.visit([&](auto const& value) {\n                        *this = value;\n                    });\n    }\n}\n\n这种初始化方式可能会发生类型转换以匹配构造函数，测试代码如下：\n// variant/variantpromote.cpp\n#include \"variant.hpp\"\n#include \n#include \n\nint main()\n{\n    Variant v1((short)123);\n\n    Variant v2(v1);26.6 Variant Initialization and Assignment 627\n    std::cout ()  v3(std::move(v1));\n    std::cout ()  v4(std::move(v1));\n    std::cout () \n赋值\n赋值和构造类似，书中只有拷贝构造：\n// variant/variantcopyassign.hpp\ntemplate\nVariant& Variant::operator= (Variant const& source) {\n    if (!source.empty()) {\n        source.visit([&](auto const& value) {\n                        *this = value;\n                    });\n    }\n    else {\n        destroy();\n    }\n    return *this;\n}\n\n26.7 后记\n本章中的实现的Variant<>在实例化时不能使用相同的类型，但是std::variant可以。\n"},"2022-03-09-ch27-expression-templates.html":{"url":"2022-03-09-ch27-expression-templates.html","title":"Chapter 27 Expression Templates","keywords":"","body":"27 表达式模板\n表达式模板用来支持针对整个数组的数值运算。\n27.1 临时量和循环分割\n在引入表达式模板之前，先看一个数组运算的例子：\n// exprtmpl/sarray1.hpp\n#include \n#include \n\ntemplate\nclass SArray {\n    public:\n        // create array with initial size\n        explicit SArray (std::size_t s)\n            : storage(new T[s]), storage_size(s) {\n                init();\n        }\n\n        // copy constructor\n        SArray (SArray const& orig)\n            : storage(new T[orig.size()]), storage_size(orig.size()) {\n                copy(orig);\n        }\n\n        // destructor: free memory\n        ~SArray() {\n            delete[] storage;\n        }\n\n        // assignment operator\n        SArray& operator= (SArray const& orig) {\n            if (&orig!=this) {\n                copy(orig);\n            }\n            return *this;\n        }\n\n        // return size\n        std::size_t size() const {\n            return storage_size;\n        }\n\n        // index operator for constants and variables\n        T const& operator[] (std::size_t idx) const {\n            return storage[idx];\n        }\n        T& operator[] (std::size_t idx) {\n            return storage[idx];\n        }\n    protected:\n        // init values with default constructor\n        void init() {\n            for (std::size_t idx = 0; idx const& orig) {\n            assert(size()==orig.size());\n            for (std::size_t idx = 0; idx\n// exprtmpl/sarrayops1.hpp\n// addition of two SArrays\ntemplate\nSArray operator+ (SArray const& a, SArray const& b)\n{\n    assert(a.size()==b.size());\n    SArray result(a.size());\n    for (std::size_t k = 0; k\nSArray operator* (SArray const& a, SArray const& b)\n{\n    assert(a.size()==b.size());\n    SArray result(a.size());\n    for (std::size_t k = 0; k\nSArray operator* (T const& s, SArray const& a)\n{\n    SArray result(a.size());\n    for (std::size_t k = 0; k\n// exprtmpl/sarray1.cpp\n#include \"sarray1.hpp\"\n#include \"sarrayops1.hpp\"\n\nint main()\n{\n    SArray x(1000), y(1000);\n    // ...\n    x = 1.2*x + x*y;\n}\n\n算法不够高效的原因在于：\n\n创建了3个临时量，大小都为1000\n表达式x = 1.2*x + x*y产生了6000次读和3000次写\n\n早期的解决办法是使用运算赋值运算符来避免创建临时量以节省构造和析构：\n// exprtmpl/sarrayops2.hpp\n// additive assignment of SArray\ntemplate\nSArray& SArray::operator+= (SArray const& b)\n{\n    assert(size()==orig.size());\n    for (std::size_t k = 0; k\nSArray& SArray::operator*= (SArray const& b)\n{\n    assert(size()==orig.size());\n    for (std::size_t k = 0; k\nSArray& SArray::operator*= (T const& s)\n{\n    for (std::size_t k = 0; k\n// exprtmpl/sarray2.cpp\n#include \"sarray2.hpp\"\n#include \"sarrayops1.hpp\"\n#include \"sarrayops2.hpp\"\n\nint main()\n{\n    SArray x(1000), y(1000);\n    // ...\n    // process x = 1.2*x + x*y\n    SArray tmp(x);\n    tmp *= y;\n    x *= 1.2;\n    x += tmp;\n}\n\n缺点在于写起来很繁琐。最理想的方式是编译器可以将代码转化为下面的形式：\nint main()\n{\n    SArray x(1000), y(1000);\n    // ...\n    for (int idx = 0; idx\n减少到只有2000次读和1000次写。\n27.2 将表达式作为模板实参\nx = 1.2*x + x*y产生临时量和读写次数多的原因在于编译器是根据表达式的优先级进行计算的，如果将整个表达式的计算推迟到最终的赋值运算，就可以生成最优的代码了，也就是在计算1.2*x + x*y的过程中保留结果的生成过程，这可以通过下面的类型保留：\nA_Add,Array>,\n        A_Mult, Array>>\n\n27.2.1 表达式模板\n表达式模板A_Add<>、A_Mult<>和A_Scalar<>定义如下：\n// exprtmpl/exprops1.hpp\n#include \n#include \n\n// include helper class traits template to select whether to refer to an\n// expression template node either by value or by reference\n#include \"exprops1a.hpp\"\n\n// class for objects that represent the addition of two operands\ntemplate\nclass A_Add {\n    private:\n        typename A_Traits::ExprRef op1; // first operand\n        typename A_Traits::ExprRef op2; // second operand\n    public:\n        // constructor initializes references to operands\n        A_Add (OP1 const& a, OP2 const& b)\n            : op1(a), op2(b) {\n        }\n\n        // compute sum when value requested\n        T operator[] (std::size_t idx) const {\n            return op1[idx] + op2[idx];\n        }\n\n        // size is maximum size\n        std::size_t size() const {\n            assert (op1.size()==0 || op2.size()==0 || op1.size()==op2.size());\n            return op1.size()!=0 ? op1.size() : op2.size();\n        }\n};\n\n// class for objects that represent the multiplication of two operands\ntemplate\nclass A_Mult {\n    private:\n        typename A_Traits::ExprRef op1; // first operand\n        typename A_Traits::ExprRef op2; // second operand\n    public:\n        // constructor initializes references to operands\n        A_Mult (OP1 const& a, OP2 const& b)\n            : op1(a), op2(b) {\n        }\n\n        // compute product when value requested\n        T operator[] (std::size_t idx) const {\n            return op1[idx] * op2[idx];\n        }\n\n        // size is maximum size\n        std::size_t size() const {\n            assert (op1.size()==0 || op2.size()==0 || op1.size()==op2.size());\n            return op1.size()!=0 ? op1.size() : op2.size();\n        }\n};\n\n// exprtmpl/exprscalar.hpp\n// class for objects that represent scalars:\ntemplate\nclass A_Scalar {\n    private:\n        T const& s; // value of the scalar\n    public:\n        // constructor initializes value\n        constexpr A_Scalar (T const& v)\n            : s(v) {\n        }\n\n        // for index operations, the scalar is the value of each element\n        constexpr T const& operator[] (std::size_t) const {\n            return s;\n        }\n\n        // scalars have zero as size\n        constexpr std::size_t size() const {\n            return 0;\n        };\n};\n\n// exprtmpl/exprops1a.hpp\n// helper traits class to select how to refer to an expression template node\n// - in general by reference\n// - for scalars by value\ntemplate class A_Scalar;\n// primary template\ntemplate\nclass A_Traits {\n    public:\n        using ExprRef = T const&; // type to refer to is constant reference\n};\n\n// partial specialization for scalars\ntemplate\nclass A_Traits> {\n    public:\n        using ExprRef = A_Scalar; // type to refer to is ordinary value\n};\n\nA_Scalar::operator[]返回s只是为了方便。\n27.2.2 数组类型\nA_Add<>和A_Mult<>的模板参数OP1和OP2既可以是数组，也可以是数组的运算结果，书中为了统一，定义了新的数组表示类模板Array<>，其中仍然使用SArray<>来存储数据：\n// exprtmpl/exprarray.hpp\n#include \n#include \n#include \"sarray1.hpp\"\n\ntemplate>\nclass Array {\n    private:\n        Rep expr_rep; // (access to) the data of the array\n    public:\n        // create array with initial size\n        explicit Array (std::size_t s)\n            : expr_rep(s) {\n        }\n\n        // create array from possible representation\n        Array (Rep const& rb)\n            : expr_rep(rb) {\n        }\n\n        // assignment operator for same type\n        Array& operator= (Array const& b) {\n            assert(size()==b.size());\n            for (std::size_t idx = 0; idx\n        Array& operator= (Array const& b) {\n            assert(size()==b.size());\n            for (std::size_t idx = 0; idx\nconst版本的Array::operator[]返回decltype(auto)的原因是A_Mult::operator[]和A_Add::operator[]可能返回临时量，此时推导结果为非引用类型。\n27.2.3 表达式模板的运算符\n表达式模板的运算符只需要将表示计算结果的数组以引用的方式传递到返回值中就可以了：\n// exprtmpl/exprops2.hpp\n// addition of two Arrays:\ntemplate\nArray> operator+ (Array const& a, Array const& b) {\n    return Array>(A_Add(a.rep(),b.rep()));\n}\n\n// multiplication of two Arrays:\ntemplate\nArray> operator* (Array const& a, Array const& b) {\n    return Array>(A_Mult(a.rep(), b.rep()));\n}\n\n// multiplication of scalar and Array:\ntemplate\nArray,R2>> operator* (T const& s, Array const& b) {\n    return Array,R2>>(A_Mult,R2>(A_Scalar(s), b.rep()));\n}\n\n// multiplication of Array and scalar, addition of scalar and Array\n// addition of Array and scalar:\n// ...\n\n27.2.4 表达式求值 \n改进后的代码为：\nint main()\n{\n    Array x(1000), y(1000);\n    // ...\n    x = 1.2*x + x*y;\n}\n\n由于运算符的优先级没有改变，因此编译器的计算顺序如下：\n\n1.2*x返回Array, SArray>>类型的对象，虽然还是临时对象，但是该临时对象中是x的引用，不会带来拷贝\nx*y返回Array, SArray>>类型的临时对象\n1.2*x + x*y返回的临时对象类型为：\n\nArray, SArray>,\n        A_Mult, SArray>>>\n\n接下来会调用Array的成员模板operator=，循环中的expr_rep[idx] = b[idx]会由于b[idx]的递归而最终展开为(1.2*x[idx]) + (x[idx]*y[idx])。\n27.2.5 表达式模板的赋值操作\nA_Add<>和A_Mult<>是不能出现在表达式的左边的，因为其中的下标运算符返回的是过期值，但是某些表达式模板应该是可以返回左值的，例如A_Subscript<>：\n// exprtmpl/exprops3.hpp\ntemplate\nclass A_Subscript {\n    public:\n        // constructor initializes references to operands\n        A_Subscript (A1 const& a, A2 const& b)\n            : a1(a), a2(b) {\n        }\n\n        // process subscription when value requested\n        decltype(auto) operator[] (std::size_t idx) const {\n            return a1[a2[idx]];\n        }\n        T& operator[] (std::size_t idx) {\n            return a1[a2[idx]];\n        }\n\n        // size is size of inner array\n        std::size_t size() const {\n            return a2.size();\n        }\n    private:\n        A1 const& a1; // reference to first operand\n        A2 const& a2; // reference to second operand\n};\n\n这个模板只支持A_Subscript::a2中存储的是整数，或许在对称密码算法置换中用到。\n27.3 表达式模板的性能和限制\n实际上27.2.4的分析并不是正确的，因为[]的在递归的过程中会进行函数调用，但是因为函数都很短小，所以内联可以解决问题。同时表达式模板还要求赋值的过程是不能覆盖后续计算需要的原数据。\n27.4 后记\n"},"2022-03-09-ch28-debugging-templates.html":{"url":"2022-03-09-ch28-debugging-templates.html","title":"Chapter 28 Debugging Templates","keywords":"","body":"28 模板调试\n模板对于开发者和使用者都会带来问题：对于模板的设计者，该如何保证模板针对任意类型的实参都有效？对于模板使用者，实例化出错时该如何进行调试？本章将模板实参的限制分为了两类，第一类是语法限制（syntactic constraint），这一类限制由于缺少特定的构造函数或者成员函数导致，第二类是语义限制，比如在要求模板实参支持运算符的语法限制下，可能就要求模板实参是具有偏序关系的。\n28.1 浅层初始化\n当模板代码嵌套层数过多时就会引发难以查找的错误：\ntemplate\nvoid clear (T& p)\n{\n    *p = 0; // assumes T is a pointer-like type\n}\n\ntemplate\nvoid core (T& p)\n{\n    clear(p);\n}\n\ntemplate\nvoid middle (typename T::Index p)\n{\n    core(p);\n}\n\ntemplate\nvoid shell (T const& env)\n{\n    typename T::Index i;\n    middle(i);\n}\n\nclass Client\n{\n    public:\n        using Index = int;\n};\n\nint main()\n{\n    Client mainClient;\n    shell(mainClient);\n}\n\n错误原因在于从middle<>传入的int在clear<>中无法解引用。为了防止调用层数过多引起的错误，可以插入一些无用的代码进行浅层实例化：\ntemplate\nvoid ignore(T const&)\n{}\n\ntemplate\nvoid shell (T const& env)\n{\n    class ShallowChecks\n    {\n        void deref(typename T::Index ptr) {\n            ignore(*ptr);\n        }\n    };\n    typename T::Index i;\n    middle(i);\n}\n\n28.2 静态断言\nC++11引入的static_cast关键字可以在编译时进行检查，例如可以使用下面的类型特征模板检查类型是否可以解引用：\n// debugging/hasderef.hpp\n#include       // for declval()\n#include   // for true_type and false_type\n\ntemplate\nclass HasDereference {\n    private:\n        template struct Identity;\n        template static std::true_type\n            test(Identity())>*);\n        template static std::false_type\n            test(...);\n    public:\n        static constexpr bool value = decltype(test(nullptr))::value;\n};\n\n28.3 测试类型\n一般来说文档中会对模板实参提出需要满足的限制，因此可以根据这些限制构造一个测试类型（archetype）来测试。例如对于下面的模板代码：\n// T must be EqualityComparable, meaning:\n// two objects of type T can be compared with == and the result converted to bool\ntemplate\nint find(T const* array, int n, T const& value) {\n    int i = 0;\n    while(i != n && array[i] != value)\n        ++i;\n    return i;\n}\n\n可以构造下面的测试类型来测试：\nclass EqualityComparableArchetype\n{\n};\n\nclass ConvertibleToBoolArchetype\n{\n    public:\n        operator bool() const;\n};\n\nConvertibleToBoolArchetype operator==(\n    EqualityComparableArchetype const&, EqualityComparableArchetype const&);\n\ntemplate int find(EqualityComparableArchetype const*, int,\n                    EqualityComparableArchetype const&);\n\n在实例化的过程中会报错，因为模板中使用的是!=运算符，而不是==。解决办法是重载!=运算符，或者修改实现（但最好不要这么做）。同样的方法也可以测试==运算符转换为bool类型的要求。\n28.4 追踪器\n前面的方法可以有效解决编译时问题，但是还有运行时的问题需要解决，为此可以设计一个追踪器（tracer）作为模板实参来记录模板代码的执行过程，通常追踪器也是测试类型。\n下面是一个测试std::sort的追踪器：\n// debugging/tracer.hpp\n#include \n\nclass SortTracer {\n    private:\n        int value;                              // integer value to be sorted\n        int generation;                         // generation of this tracer\n        inline static long n_created = 0;       // number of constructor calls\n        inline static long n_destroyed = 0;     // number of destructor calls\n        inline static long n_assigned = 0;      // number of assignments\n        inline static long n_compared = 0;      // number of comparisons\n        inline static long n_max_live = 0;      // maximum of existing objects\n\n        // recompute maximum of existing objects\n        static void update_max_live() {\n            if (n_created-n_destroyed > n_max_live) {\n                n_max_live = n_created-n_destroyed;\n            }\n        }\n    public:\n        static long creations() {\n            return n_created;\n        }\n        static long destructions() {\n            return n_destroyed;\n        }\n        static long assignments() {\n            return n_assigned;\n        }\n        static long comparisons() {\n            return n_compared;\n        }\n        static long max_live() {\n            return n_max_live;\n        }\n    public:\n        // constructor\n        SortTracer (int v = 0) : value(v), generation(1) {\n            ++n_created;\n            update_max_live();\n            std::cerr \n测试代码如下：\n// debugging/tracertest.cpp\n#include \n#include \n#include \"tracer.hpp\"\n\nint main()\n{\n    // prepare sample input:\n    SortTracer input[] = { 7, 3, 5, 6, 4, 2, 0, 1, 9, 8 };\n\n    // print initial values:\n    for (int i=0; i(&input[0], &input[9]+1);\n    std::cerr \n编译命令为g++ tracertest.cpp -o tracertest -std=c++17，在我的机器上输出为（只保留了关键部分）：\nstd::sort() of 10 SortTracer's was performed by:\n 9 temporary tracers\n up to 11 tracers at the same time (10 before)\n 33 assignments\n 27 comparisons\n\n28.5 Oracles\n一种可以检查语义的东西，姑且就叫神谕吧~\n28.6 后记\n"},"2022-01-05-appB-value-categories.html":{"url":"2022-01-05-appB-value-categories.html","title":"Appendix B Value Categories","keywords":"","body":"B 值类型\nB.1 传统意义下的左值和右值\n左值（lvalue）是在内存或者寄存器中的值。起初这种说法来源于C语言中在=左边的值，l表示left-hand side，相应的，右值（rvalue）来源于在=右边的值，r表示right-hand side。不过后来在C语言中某些被const修饰的变量也可以存在于内存或者寄存器中，但却是不可修改的。C++扩展了右值的含义，对于类的右值，其也是可以在=左边的，此时的=应该理解为重载的=运算符。\n或许将左值中的l理解为局部化变量（localizable value）更合适，这样左值的含义就更加广泛了：\n\n表达式中的变量\n指针解引用后的对象\n数据成员\n返回左值引用的函数\n字符串字面值\n\n右值就是纯粹数学意义上的、不会被存储的、只能使用一次的值。总之，所有的临时量都是右值，但是引用右值的引用不是右值。原文：\n\nThat is, all temporaries are rvalues. (That doesn’t apply to named references that refer to them, though.)\n\nB.1.1 左值到右值的转换\n对于两个左值x和y，在表达式x = y中，y发生了的左值到右值的隐式转换（lvalue-to-rvalue conversion），这种转换保证了左值可以当作右值使用，以及机器会执行一条装载指令。\nB.2 C++11后的值类型\n下面是C++11扩展后的值类型：\n\nglvalue，全称generalized lvalue，会被存储的值，包括lvalue和xvalue\nprvalue，全称pure rvalue，求值结果被用来初始化一个对象，或者是运算符的求值结果\nxvalue，全称eXpiring value，可以被重用的值，具有固定的生命周期，姑且称为到期值\nlvalue，glvalue中非xvalue的部分\nrvalue，包括xvalue和prvalue\n\n左值的例子：\n\n变量和函数变量\n指针解引用的结果\n字符串字面值\n返回左值引用的函数返回值\n\n右值的例子：\n\n大多数字面值\n取地址运算符的结果\n内置算术运算符的结果\n不返回引用的函数返回值\nlambda表达式\n\n到期值的例子：\n\n返回右值引用的函数，例如std::move\n对对象类型的右值引用的强制类型转换的结果\n\nB.2.1 临时实体化（Temporary Materialization）\n临时实体化是左值到右值转换的逆转换，可以将prvalue转换为xvalue，也就是用rvalue临时初始化一个xvalue，一般发生在下面的情况中：\n\n引用绑定到纯右值\n访问类的纯右值成员\n通过下标访问的纯右值数组（An array prvalue is subscripted）\n纯右值数组转换为指针\n放入std::initializer_list中的纯右值\n使用sizeof和typeid对纯右值进行求值\n表达式的最终求值结果，或者表达式被转换为void\n\n这里有一个有趣的例子：\nclass N {\n    public:\n        N();\n        N(N const&) = delete;   // this class is neither copyable ...\n        N(N&&) = delete;        // ... nor movable\n};\n\nN make_N() {\n    return N{};     // Always creates a conceptual temporary prior to C++17.\n}                   // In C++17, no temporary is created at this point.\n\nauto n = make_N();  // ERROR prior to C++17 because the prvalue needs a\n                    // conceptual copy. OK since C++17, because n is\n                    // initialized directly from the prvalue.\n\n上面的代码是可以直接在n中构造对象的，但是在C++17之前，这是一个优化措施，语言不能提供保证，并且因为N{}是一个右值，在要调用类N的移动构造函数来初始化n时还会报错，这是因为移动构造函数被删除了。原文：\n\nPrior to C++17, the prvalue Nfg produced a temporary of type N, but compilers were allowed to elide copies and moves of that temporary (which they always did, in practice). In this case, that means that the temporary result of calling make_N() can be constructed directly in the storage of n; no copy or move operation is needed. Unfortunately, pre-C++17 compilers still have to check that a copy or move operation could be made, and in this example that is not possible because the copy constructor of N is deleted (and no move constructor is generated). Hence, C++11 and C++14 compilers must issue an error for this example.\nWith C++17 the prvalue N itself does not produce a temporary. Instead, it initializes an object determined by the context: In our example, that object is the one denoted by n. No copy or move operation is ever considered (this is not an optimization, but a language guarantee) and therefore the code is valid C++17.\n\n最后是一个值类型的例子：\nclass X {\n};\n\nX v;\nX const c;\n\nvoid f(X const&);   // accepts an expression of any value category\nvoid f(X&&);        // accepts prvalues and xvalues only but is a better match\n                    // for those than the previous declaration\n\nf(v);               // passes a modifiable lvalue to the first f()\nf(c);               // passes a nonmodifiable lvalue to the first f()\nf(X());             // passes a prvalue (since C++17 materialized as xvalue) to the 2nd f()\nf(std::move(v));    // passes an xvalue to the second f()\n\nB.3 通过decltype识别值类型\n双括号版本的decltype((x))的结果为：\n\n如果x为纯右值，则为type\n如果x为左值，则为type&\n如果x为xvalue，则为type&&\n\nB.4 引用类型\nint& lvalue();\nint&& xvalue();\nint prvalue();\n\nstd::is_same_v    // yields true because result is lvalue\nstd::is_same_v   // yields true because result is xvalue\nstd::is_same_v    // yields true because result is prvalue\n\nint& lref1 = lvalue();      // OK: lvalue reference can bind to an lvalue\nint& lref3 = prvalue();     // ERROR: lvalue reference cannot bind to a prvalue\nint& lref2 = xvalue();      // ERROR: lvalue reference cannot bind to an xvalue\n\nint&& rref1 = lvalue();     // ERROR: rvalue reference cannot bind to an lvalue\nint&& rref2 = prvalue();    // OK: rvalue reference can bind to a prvalue\nint&& rref3 = xvalue();     // OK: rvalue reference can bind to an xrvalue\n\n"},"2022-03-02-appC-overload-resolution.html":{"url":"2022-03-02-appC-overload-resolution.html","title":"Appendix C Overload Resolution","keywords":"","body":"C 重载解析规则\n这一部分应该是在第16章之后的，不过忘记了。\nC.1 重载解析规则的应用范围\n重载解析规则应用在调用具名函数时，大致分为以下几个步骤：\n\n根据名称形成重载函数集合\n实例化函数模板\n剔除不匹配的函数形成可行函数集合\n确定是否存在最匹配的调用目标\n判断最匹配的函数是否被删除\n\nC.2 简化的重载解析规则\n如果一个函数更为匹配，那么每一个参数都至少应该和另外一个函数一样或者更为匹配。原文：\n\nFor one candidate to be considered better than another, the better candidate cannot have any of its parameters be a worse match than the corresponding parameter in the other candidate.\n\n实参和形参的匹配程度优先级如下：\n\n完美匹配，形参和实参类型一样，或者形参类型是实参类型的引用（也可以包含const或者volatile）\n经过简单转换后的匹配，例如数组退化为指针，指针变为const指针\n经过类型提升转换后的匹配，即位宽较小的类型提升为位宽较大的类型\n经过标准转换后的匹配，例如整型转化为浮点型，派生类转换为公有继承的基类\n经用户定义转换后的匹配，也包括隐式转换，例如通过构造函数转换\n和变参函数的匹配，任意参数都可以和变参函数匹配（除了具有非平凡的构造函数的类类型）\n\nint f1(int);        // #1\nint f1(double);     // #2\nf1(4);              // calls #1 : perfect match (#2 requires a standard conversion)\n\nint f2(int);        // #3\nint f2(char);       // #4\nf2(true);           // calls #3 : match with promotion (#4 requires stronger standard conversion)\n\nclass X {\n    public:\n        X(int);\n};\nint f3(X);          // #5\nint f3(...);        // #6\nf3(7);              // calls #5 : match with user-defined conversion (#6 requires a match with ellipsis)\n\n此外这些规则是在模板参数推导之后起作用的：\ntemplate void strange(T&&, T&&);\ntemplate void bizarre(T&&, double&&);\n\n\nint main()\n{\n    strange(1.2, 3.4);  // OK: with T deduced to double\n    double val = 1.2;\n    strange(val, val);  // OK: with T deduced to double&\n    strange(val, 3.4);  // ERROR: conflicting deductions\n    bizarre(val, val);  // ERROR: lvalue val doesn’t match double&&\n}\n\nC.2.1 成员函数中的隐含参数 \n调用非静态成员函数时，参数种包含隐含参数*this，为左值引用类型（如果是const成员函数则为常量左值引用类型），*this的解析过程和其它参数类似，因此可能会导致模糊调用：\n#include \nclass BadString {\n    public:\n        BadString(char const*);\n        // ...\n\n        // character access through subscripting:\n        char& operator[] (std::size_t);     // #1\n        char const& operator[] (std::size_t) const;\n\n        // implicit conversion to null-terminated byte string:\n        operator char* ();                  // #2\n        operator char const* ();\n        // ...\n};\n\nint main()\n{\n    BadString str(\"correkt\");\n    str[5] = 'c'; // possibly an overload resolution ambiguity!\n}\n\nstr[5]包含*this和5两个参数，如果解析为BadString::operator[]，由于std::size_t一般为无符号类型，所以5需要进行类型提升转换；而如果解析为语言内置的下标运算符，由于其参数类型一般为ptrdiff_t（也就是int），则只需要隐式将*this转换为char*即可——二者对比没有更为匹配的重载函数。\n如果可行函数集合中既包括静态成员函数，也包括非静态成员函数，则重载解析规则会忽略this参数。\n默认情况下this为引用类型，但是从C++11开始可以显示声明为引用类型，同时允许右值对象调用隐式声明为左值引用类型的成员函数，例如：\nstruct S {\n    void f1();      // implicit *this parameter is an lvalue reference (see below)\n    void f2() &&;   // implicit *this parameter is an rvalue reference\n    void f3() &;    // implicit *this parameter is an lvalue reference\n};\n\nint main()\n{\n    S().f1();   // OK: old rule allows rvalue S() to match implied lvalue reference type S& of *this\n    S().f2();   // OK: rvalue S() matches rvalue reference type of *this\n    S().f3();   // ERROR: rvalue S() cannot match explicit lvalue reference type of *this\n}\n\nC.2.2 完美匹配导致的模糊调用\n从C++11开始，某一类型X可以匹配的类型包括X、X&、const X&和X&&，如果重载了以X和X&为参数的函数，则有可能出现模糊调用：\nvoid report(int);           // #1\nvoid report(int&);          // #2\nvoid report(int const&);    // #3\n\nint main()\n{\n    for (int k = 0; k\nC.3 重载细节\nC.3.1 非模板和特化模板的匹配\n任何情况下，非模板函数的匹配度都比模板实例化后的函数匹配度高：\ntemplate int f(T);  // #1\nvoid f(int);                    // #2\n\nint main()\n{\n    return f(7); // ERROR: selects #2 , which doesn’t return a value\n}\n\nC.3.2 隐式转换序列\n隐式转换可以由一系列转换组成，但是最多只能包含一个用户定义的转换。例如下面的代码包含三个隐式转换，但是只有一个用户定义的隐式转换：\nclass Base {\n    public:\n        operator short() const;\n};\n\nclass Derived : public Base {\n};\n\nvoid count(int);\n\nvoid process(Derived const& object)\n{\n    count(object); // matches with user-defined conversion\n}\n\nC.3.3 指针转换\n关于指针的标准转换包括：\n\n指针到bool类型的转换\n任意指针类型到void*类型的转换\n派生类指针到基类指针的转换\n基类成员指针到派生类成员指针的转换\n\n第3种和第4种转换的优先级比第2种转换的优先级高，第2种转换比第1种转换的优先级高：\nvoid check(void*);  // #1\nvoid check(bool);   // #2\n\nvoid rearrange (Matrix* m)\n{\n    check(m); // calls #1\n    // ...\n}\n\n具有继承关系的类之间的转换总是在具有更近继承关系的类之间进行：\nclass Interface {\n    // ...\n};\n\nclass CommonProcesses : public Interface {\n    // ...\n};\n\nclass Machine : public CommonProcesses {\n    // ...\n};\n\nchar* serialize(Interface*);            // #1\nchar* serialize(CommonProcesses*);      // #2\n\nvoid dump (Machine* machine)\n{\n    char* buffer = serialize(machine);  // calls #2\n    // ...\n}\n\nC.3.4 初始化列表的转换\n{}中的参数可以转换为std::initializer_list、通过std::initializer_list构造的对象、通过多个参数构造的对象和聚合类型的对象：\n// overload/initlist.cpp\n#include \n#include \n#include \n#include \n#include \n\nvoid f(std::initializer_list) {\n    std::cout ) {\n    std::cout  const& vec) {\n    std::cout  const& cmplx) {\n    std::cout \n注意，类型提升转换的优先级高于标准转换的优先级：\n// overload/initlistovl.cpp\n#include \n#include \n\nvoid ovl(std::initializer_list) {     // #1\n    std::cout ) {      // #2\n    std::cout \n当用初始化列表构造对象时，重载解析分为两个阶段（例外的情况是初始化列表为空时会将跳过第1阶段）：\n\n只考虑以std::initializer_list为唯一非默认模板参数的构造函数\n如果第1阶段没有匹配的函数，则尝试将初始化列表分割为多个参数来构造对象\n\n下面是一个例子：\n// overload/initlistctor.cpp\n#include \n#include \n#include \n\ntemplate\nstruct Array {\n    Array(std::initializer_list) {\n        std::cout ) {\n}\n\nvoid arr2(Array) {\n}\n\nint main()\n{\n    arr1({1, 2, 3, 4, 5});                      // prints #1\n    arr1({1, 2});                               // prints #1\n    arr1({10u, 5});                             // prints #1\n    arr2({\"hello\", \"initializer\", \"list\"});     // prints #1\n    arr2({10, \"hello\"});                        // prints #2\n}\n\nC.3.5 函数和代理函数\n当一个类重载了函数调用运算符，或者可以隐式转换为函数指针或者函数引用类型时，可能导致模糊调用：\nusing FuncType = void (double, int);\n\nclass IndirectFunctor {\n    public:\n        // ...\n        void operator()(double, double) const;\n        operator FuncType*() const;\n};\n\nvoid activate(IndirectFunctor const& funcObj)\n{\n    funcObj(3, 5); // ERROR: ambiguous\n}\n\n这个例子和C.2.1中的原理是类似的。funcObj(3, 5)包含三个参数：funcObj、3和5。如果解析为函数调用运算符，则后两个参数都需要进行标准转换；而如果解析为FuncType类型的函数指针，则需要将funcObj隐式转换为函数指针类型——二者对比没有更为匹配的重载函数。\nC.3.6 其它重载情景\n\n获取函数指针\n\nint numElems(Matrix const&);    // #1\nint numElems(Vector const&);    // #2\n// ...\nint (*funcPtr)(Vector const&) = numElems; // selects #2\n\n\n匹配构造函数\n\n#include \nclass BigNum {\n    public:\n        BigNum(long n);                 // #1\n        BigNum(double n);               // #2\n        BigNum(std::string const&);     // #3\n        // ...\n        operator double();              // #4\n        operator long();                // #5\n        // ...\n};\n\nvoid initDemo()\n{\n    BigNum bn1(100103);                 // selects #1\n    BigNum bn2(\"7057103224.095764\");    // selects #3\n    int in = bn1;                       // selects #5\n}\n\n"}}}